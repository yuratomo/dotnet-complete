
call dotnet#class('KeyConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('KeyConverter(', ''),
  \ ])

call dotnet#class('KeyInterop', 'Object', [ 
  \ dotnet#method('KeyFromVirtualKey(', ''),
  \ dotnet#method('VirtualKeyFromKey(', ''),
  \ ])

call dotnet#class('KeyValueSerializer', 'ValueSerializer', [ 
  \ dotnet#method('CanConvertFromString(', ''),
  \ dotnet#method('CanConvertToString(', ''),
  \ dotnet#method('ConvertFromString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#method('KeyValueSerializer(', ''),
  \ ])

call dotnet#class('ModifierKeysConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('IsDefinedModifierKeys(', ''),
  \ dotnet#method('MatchModifiers(', ''),
  \ dotnet#method('ModifierKeysConverter(', ''),
  \ ])

call dotnet#class('ModifierKeysValueSerializer', 'ValueSerializer', [ 
  \ dotnet#method('CanConvertFromString(', ''),
  \ dotnet#method('CanConvertToString(', ''),
  \ dotnet#method('ConvertFromString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#method('ModifierKeysValueSerializer(', ''),
  \ ])

call dotnet#class('TraversalRequest', 'Object', [ 
  \ dotnet#method('TraversalRequest(', ''),
  \ dotnet#method('get_Wrapped(', ''),
  \ dotnet#method('set_Wrapped(', ''),
  \ dotnet#method('get_FocusNavigationDirection(', ''),
  \ dotnet#prop('Wrapped', 'bool'),
  \ dotnet#prop('FocusNavigationDirection', 'FocusNavigationDirection'),
  \ ])

call dotnet#class('CanExecuteRoutedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('CanExecuteRoutedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('CanExecuteRoutedEventArgs', 'RoutedEventArgs', [ 
  \ dotnet#method('CanExecuteRoutedEventArgs(', ''),
  \ dotnet#method('get_Command(', ''),
  \ dotnet#method('get_Parameter(', ''),
  \ dotnet#method('get_CanExecute(', ''),
  \ dotnet#method('set_CanExecute(', ''),
  \ dotnet#method('get_ContinueRouting(', ''),
  \ dotnet#method('set_ContinueRouting(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('Command', 'ICommand'),
  \ dotnet#prop('Parameter', 'object'),
  \ dotnet#prop('CanExecute', 'bool'),
  \ dotnet#prop('ContinueRouting', 'bool'),
  \ ])

call dotnet#class('InputDevice', 'DispatcherObject', [ 
  \ dotnet#method('InputDevice(', ''),
  \ dotnet#prop('Target', 'IInputElement'),
  \ dotnet#prop('ActiveSource', 'PresentationSource'),
  \ ])

call dotnet#class('InputEventArgs', 'RoutedEventArgs', [ 
  \ dotnet#method('InputEventArgs(', ''),
  \ dotnet#method('get_Device(', ''),
  \ dotnet#method('set_Device(', ''),
  \ dotnet#method('get_Timestamp(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('Device', 'InputDevice'),
  \ dotnet#prop('Timestamp', 'int32'),
  \ ])

call dotnet#class('CommandBinding', 'Object', [ 
  \ dotnet#method('CommandBinding(', ''),
  \ dotnet#method('get_Command(', ''),
  \ dotnet#method('set_Command(', ''),
  \ dotnet#method('add_PreviewExecuted(', ''),
  \ dotnet#method('remove_PreviewExecuted(', ''),
  \ dotnet#method('add_Executed(', ''),
  \ dotnet#method('remove_Executed(', ''),
  \ dotnet#method('add_PreviewCanExecute(', ''),
  \ dotnet#method('remove_PreviewCanExecute(', ''),
  \ dotnet#method('add_CanExecute(', ''),
  \ dotnet#method('remove_CanExecute(', ''),
  \ dotnet#method('OnCanExecute(', ''),
  \ dotnet#method('OnExecuted(', ''),
  \ dotnet#event('PreviewExecuted', 'ExecutedRoutedEventHandler'),
  \ dotnet#event('Executed', 'ExecutedRoutedEventHandler'),
  \ dotnet#event('PreviewCanExecute', 'CanExecuteRoutedEventHandler'),
  \ dotnet#event('CanExecute', 'CanExecuteRoutedEventHandler'),
  \ dotnet#prop('Command', 'ICommand'),
  \ ])

call dotnet#class('CommandBindingCollection', 'Object', [ 
  \ dotnet#method('CommandBindingCollection(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('AddRange(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('FindMatch(', ''),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('Item(int32)', 'CommandBinding'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Count', 'int32'),
  \ ])

call dotnet#class('CommandManager', 'Object', [ 
  \ dotnet#method('add_RequerySuggested(', ''),
  \ dotnet#method('remove_RequerySuggested(', ''),
  \ dotnet#method('AddPreviewExecutedHandler(', ''),
  \ dotnet#method('RemovePreviewExecutedHandler(', ''),
  \ dotnet#method('AddExecutedHandler(', ''),
  \ dotnet#method('RemoveExecutedHandler(', ''),
  \ dotnet#method('AddPreviewCanExecuteHandler(', ''),
  \ dotnet#method('RemovePreviewCanExecuteHandler(', ''),
  \ dotnet#method('AddCanExecuteHandler(', ''),
  \ dotnet#method('RemoveCanExecuteHandler(', ''),
  \ dotnet#method('RegisterClassInputBinding(', ''),
  \ dotnet#method('RegisterClassCommandBinding(', ''),
  \ dotnet#method('InvalidateRequerySuggested(', ''),
  \ dotnet#method('TranslateInput(', ''),
  \ dotnet#method('OnCanExecute(', ''),
  \ dotnet#method('OnExecuted(', ''),
  \ dotnet#method('OnCommandDevice(', ''),
  \ dotnet#method('CallWeakReferenceHandlers(', ''),
  \ dotnet#method('AddWeakReferenceHandler(', ''),
  \ dotnet#method('RemoveWeakReferenceHandler(', ''),
  \ dotnet#method('CommandManager(', ''),
  \ dotnet#event('RequerySuggested', 'EventHandler'),
  \ ])

call dotnet#class('ExecutedRoutedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('ExecutedRoutedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('ExecutedRoutedEventArgs', 'RoutedEventArgs', [ 
  \ dotnet#method('ExecutedRoutedEventArgs(', ''),
  \ dotnet#method('get_Command(', ''),
  \ dotnet#method('get_Parameter(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('Command', 'ICommand'),
  \ dotnet#prop('Parameter', 'object'),
  \ ])

call dotnet#class('InputBinding', 'Freezable', [ 
  \ dotnet#method('InputBinding(', ''),
  \ dotnet#method('set_Command(', ''),
  \ dotnet#method('get_CommandParameter(', ''),
  \ dotnet#method('set_CommandParameter(', ''),
  \ dotnet#method('set_CommandTarget(', ''),
  \ dotnet#method('set_Gesture(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('AddInheritanceContext(', ''),
  \ dotnet#method('RemoveInheritanceContext(', ''),
  \ dotnet#method('get_HasMultipleInheritanceContexts(', ''),
  \ dotnet#prop('Command', 'ICommand'),
  \ dotnet#prop('CommandParameter', 'object'),
  \ dotnet#prop('CommandTarget', 'IInputElement'),
  \ dotnet#prop('Gesture', 'InputGesture'),
  \ dotnet#prop('InheritanceContext', 'DependencyObject'),
  \ dotnet#prop('HasMultipleInheritanceContexts', 'bool'),
  \ ])

call dotnet#class('InputBindingCollection', 'Object', [ 
  \ dotnet#method('InputBindingCollection(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('AddRange(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('FindMatch(', ''),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('Item(int32)', 'InputBinding'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ ])

call dotnet#class('InputGesture', 'Object', [ 
  \ dotnet#method('Matches(', ''),
  \ dotnet#method('InputGesture(', ''),
  \ ])

call dotnet#class('InputGestureCollection', 'Object', [ 
  \ dotnet#method('InputGestureCollection(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('AddRange(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Seal(', ''),
  \ dotnet#method('FindMatch(', ''),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('Item(int32)', 'InputGesture'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Count', 'int32'),
  \ ])

call dotnet#class('KeyBinding', 'InputBinding', [ 
  \ dotnet#method('KeyBinding(', ''),
  \ dotnet#method('set_Gesture(', ''),
  \ dotnet#method('get_Modifiers(', ''),
  \ dotnet#method('set_Modifiers(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('set_Key(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#prop('Gesture', 'InputGesture'),
  \ dotnet#prop('Modifiers', 'ModifierKeys'),
  \ dotnet#prop('Key', 'Key'),
  \ ])

call dotnet#class('KeyGesture', 'InputGesture', [ 
  \ dotnet#method('KeyGesture(', ''),
  \ dotnet#method('get_Modifiers(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('get_DisplayString(', ''),
  \ dotnet#method('GetDisplayStringForCulture(', ''),
  \ dotnet#method('Matches(', ''),
  \ dotnet#method('IsDefinedKey(', ''),
  \ dotnet#method('IsValid(', ''),
  \ dotnet#method('AddGesturesFromResourceStrings(', ''),
  \ dotnet#method('CreateFromResourceStrings(', ''),
  \ dotnet#prop('Modifiers', 'ModifierKeys'),
  \ dotnet#prop('Key', 'Key'),
  \ dotnet#prop('DisplayString', 'string'),
  \ ])

call dotnet#class('KeyGestureConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('IsDefinedKey(', ''),
  \ dotnet#method('KeyGestureConverter(', ''),
  \ ])

call dotnet#class('KeyGestureValueSerializer', 'ValueSerializer', [ 
  \ dotnet#method('CanConvertFromString(', ''),
  \ dotnet#method('CanConvertToString(', ''),
  \ dotnet#method('ConvertFromString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#method('KeyGestureValueSerializer(', ''),
  \ ])

call dotnet#class('MouseActionConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('IsDefinedMouseAction(', ''),
  \ dotnet#method('MouseActionConverter(', ''),
  \ ])

call dotnet#class('MouseActionValueSerializer', 'ValueSerializer', [ 
  \ dotnet#method('CanConvertFromString(', ''),
  \ dotnet#method('CanConvertToString(', ''),
  \ dotnet#method('ConvertFromString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#method('MouseActionValueSerializer(', ''),
  \ ])

call dotnet#class('MouseBinding', 'InputBinding', [ 
  \ dotnet#method('MouseBinding(', ''),
  \ dotnet#method('set_Gesture(', ''),
  \ dotnet#method('get_MouseAction(', ''),
  \ dotnet#method('set_MouseAction(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#prop('Gesture', 'InputGesture'),
  \ dotnet#prop('MouseAction', 'MouseAction'),
  \ ])

call dotnet#class('MouseGesture', 'InputGesture', [ 
  \ dotnet#method('MouseGesture(', ''),
  \ dotnet#method('get_MouseAction(', ''),
  \ dotnet#method('set_MouseAction(', ''),
  \ dotnet#method('get_Modifiers(', ''),
  \ dotnet#method('set_Modifiers(', ''),
  \ dotnet#method('Matches(', ''),
  \ dotnet#method('IsDefinedMouseAction(', ''),
  \ dotnet#method('add_PropertyChanged(', ''),
  \ dotnet#method('remove_PropertyChanged(', ''),
  \ dotnet#method('OnPropertyChanged(', ''),
  \ dotnet#method('GetMouseAction(', ''),
  \ dotnet#event('PropertyChanged', 'PropertyChangedEventHandler'),
  \ dotnet#prop('MouseAction', 'MouseAction'),
  \ dotnet#prop('Modifiers', 'ModifierKeys'),
  \ ])

call dotnet#class('MouseGestureConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('MouseGestureConverter(', ''),
  \ ])

call dotnet#class('MouseGestureValueSerializer', 'ValueSerializer', [ 
  \ dotnet#method('CanConvertFromString(', ''),
  \ dotnet#method('CanConvertToString(', ''),
  \ dotnet#method('ConvertFromString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#method('MouseGestureValueSerializer(', ''),
  \ ])

call dotnet#class('RoutedCommand', 'Object', [ 
  \ dotnet#method('RoutedCommand(', ''),
  \ dotnet#method('Execute(', ''),
  \ dotnet#method('CanExecute(', ''),
  \ dotnet#method('add_CanExecuteChanged(', ''),
  \ dotnet#method('remove_CanExecuteChanged(', ''),
  \ dotnet#method('CriticalCanExecute(', ''),
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('get_OwnerType(', ''),
  \ dotnet#method('get_CommandId(', ''),
  \ dotnet#method('get_InputGestures(', ''),
  \ dotnet#method('get_IsBlockedByRM(', ''),
  \ dotnet#method('set_IsBlockedByRM(', ''),
  \ dotnet#method('get_AreInputGesturesDelayLoaded(', ''),
  \ dotnet#method('set_AreInputGesturesDelayLoaded(', ''),
  \ dotnet#method('ExecuteCore(', ''),
  \ dotnet#event('CanExecuteChanged', 'EventHandler'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('OwnerType', 'Type'),
  \ dotnet#prop('CommandId', 'uint8'),
  \ dotnet#prop('InputGestures', 'InputGestureCollection'),
  \ dotnet#prop('InputGesturesInternal', 'InputGestureCollection'),
  \ dotnet#prop('IsBlockedByRM', 'bool'),
  \ dotnet#prop('AreInputGesturesDelayLoaded', 'bool'),
  \ ])

call dotnet#class('RoutedUICommand', 'RoutedCommand', [ 
  \ dotnet#method('RoutedUICommand(', ''),
  \ dotnet#method('get_Text(', ''),
  \ dotnet#method('set_Text(', ''),
  \ dotnet#prop('Text', 'string'),
  \ ])

call dotnet#class('ApplicationCommands', 'Object', [ 
  \ dotnet#method('GetUIText(', ''),
  \ dotnet#method('LoadDefaultGestureFromResource(', ''),
  \ dotnet#method('ApplicationCommands(', ''),
  \ dotnet#prop('Cut', 'RoutedUICommand'),
  \ dotnet#prop('Copy', 'RoutedUICommand'),
  \ dotnet#prop('Paste', 'RoutedUICommand'),
  \ dotnet#prop('Delete', 'RoutedUICommand'),
  \ dotnet#prop('Undo', 'RoutedUICommand'),
  \ dotnet#prop('Redo', 'RoutedUICommand'),
  \ dotnet#prop('Find', 'RoutedUICommand'),
  \ dotnet#prop('Replace', 'RoutedUICommand'),
  \ dotnet#prop('SelectAll', 'RoutedUICommand'),
  \ dotnet#prop('Help', 'RoutedUICommand'),
  \ dotnet#prop('New', 'RoutedUICommand'),
  \ dotnet#prop('Open', 'RoutedUICommand'),
  \ dotnet#prop('Close', 'RoutedUICommand'),
  \ dotnet#prop('Save', 'RoutedUICommand'),
  \ dotnet#prop('SaveAs', 'RoutedUICommand'),
  \ dotnet#prop('Print', 'RoutedUICommand'),
  \ dotnet#prop('CancelPrint', 'RoutedUICommand'),
  \ dotnet#prop('PrintPreview', 'RoutedUICommand'),
  \ dotnet#prop('Properties', 'RoutedUICommand'),
  \ dotnet#prop('ContextMenu', 'RoutedUICommand'),
  \ dotnet#prop('Stop', 'RoutedUICommand'),
  \ dotnet#prop('CorrectionList', 'RoutedUICommand'),
  \ dotnet#prop('NotACommand', 'RoutedUICommand'),
  \ ])

call dotnet#class('ComponentCommands', 'Object', [ 
  \ dotnet#method('GetUIText(', ''),
  \ dotnet#method('LoadDefaultGestureFromResource(', ''),
  \ dotnet#method('ComponentCommands(', ''),
  \ dotnet#prop('ScrollPageUp', 'RoutedUICommand'),
  \ dotnet#prop('ScrollPageDown', 'RoutedUICommand'),
  \ dotnet#prop('ScrollPageLeft', 'RoutedUICommand'),
  \ dotnet#prop('ScrollPageRight', 'RoutedUICommand'),
  \ dotnet#prop('ScrollByLine', 'RoutedUICommand'),
  \ dotnet#prop('MoveLeft', 'RoutedUICommand'),
  \ dotnet#prop('MoveRight', 'RoutedUICommand'),
  \ dotnet#prop('MoveUp', 'RoutedUICommand'),
  \ dotnet#prop('MoveDown', 'RoutedUICommand'),
  \ dotnet#prop('MoveToHome', 'RoutedUICommand'),
  \ dotnet#prop('MoveToEnd', 'RoutedUICommand'),
  \ dotnet#prop('MoveToPageUp', 'RoutedUICommand'),
  \ dotnet#prop('MoveToPageDown', 'RoutedUICommand'),
  \ dotnet#prop('ExtendSelectionUp', 'RoutedUICommand'),
  \ dotnet#prop('ExtendSelectionDown', 'RoutedUICommand'),
  \ dotnet#prop('ExtendSelectionLeft', 'RoutedUICommand'),
  \ dotnet#prop('ExtendSelectionRight', 'RoutedUICommand'),
  \ dotnet#prop('SelectToHome', 'RoutedUICommand'),
  \ dotnet#prop('SelectToEnd', 'RoutedUICommand'),
  \ dotnet#prop('SelectToPageUp', 'RoutedUICommand'),
  \ dotnet#prop('SelectToPageDown', 'RoutedUICommand'),
  \ dotnet#prop('MoveFocusUp', 'RoutedUICommand'),
  \ dotnet#prop('MoveFocusDown', 'RoutedUICommand'),
  \ dotnet#prop('MoveFocusForward', 'RoutedUICommand'),
  \ dotnet#prop('MoveFocusBack', 'RoutedUICommand'),
  \ dotnet#prop('MoveFocusPageUp', 'RoutedUICommand'),
  \ dotnet#prop('MoveFocusPageDown', 'RoutedUICommand'),
  \ ])

call dotnet#class('MediaCommands', 'Object', [ 
  \ dotnet#method('GetUIText(', ''),
  \ dotnet#method('LoadDefaultGestureFromResource(', ''),
  \ dotnet#method('MediaCommands(', ''),
  \ dotnet#prop('Play', 'RoutedUICommand'),
  \ dotnet#prop('Pause', 'RoutedUICommand'),
  \ dotnet#prop('Stop', 'RoutedUICommand'),
  \ dotnet#prop('Record', 'RoutedUICommand'),
  \ dotnet#prop('NextTrack', 'RoutedUICommand'),
  \ dotnet#prop('PreviousTrack', 'RoutedUICommand'),
  \ dotnet#prop('FastForward', 'RoutedUICommand'),
  \ dotnet#prop('Rewind', 'RoutedUICommand'),
  \ dotnet#prop('ChannelUp', 'RoutedUICommand'),
  \ dotnet#prop('ChannelDown', 'RoutedUICommand'),
  \ dotnet#prop('TogglePlayPause', 'RoutedUICommand'),
  \ dotnet#prop('Select', 'RoutedUICommand'),
  \ dotnet#prop('IncreaseVolume', 'RoutedUICommand'),
  \ dotnet#prop('DecreaseVolume', 'RoutedUICommand'),
  \ dotnet#prop('MuteVolume', 'RoutedUICommand'),
  \ dotnet#prop('IncreaseTreble', 'RoutedUICommand'),
  \ dotnet#prop('DecreaseTreble', 'RoutedUICommand'),
  \ dotnet#prop('IncreaseBass', 'RoutedUICommand'),
  \ dotnet#prop('DecreaseBass', 'RoutedUICommand'),
  \ dotnet#prop('BoostBass', 'RoutedUICommand'),
  \ dotnet#prop('IncreaseMicrophoneVolume', 'RoutedUICommand'),
  \ dotnet#prop('DecreaseMicrophoneVolume', 'RoutedUICommand'),
  \ dotnet#prop('MuteMicrophoneVolume', 'RoutedUICommand'),
  \ dotnet#prop('ToggleMicrophoneOnOff', 'RoutedUICommand'),
  \ ])

call dotnet#class('NavigationCommands', 'Object', [ 
  \ dotnet#method('GetUIText(', ''),
  \ dotnet#method('LoadDefaultGestureFromResource(', ''),
  \ dotnet#method('NavigationCommands(', ''),
  \ dotnet#prop('BrowseBack', 'RoutedUICommand'),
  \ dotnet#prop('BrowseForward', 'RoutedUICommand'),
  \ dotnet#prop('BrowseHome', 'RoutedUICommand'),
  \ dotnet#prop('BrowseStop', 'RoutedUICommand'),
  \ dotnet#prop('Refresh', 'RoutedUICommand'),
  \ dotnet#prop('Favorites', 'RoutedUICommand'),
  \ dotnet#prop('Search', 'RoutedUICommand'),
  \ dotnet#prop('IncreaseZoom', 'RoutedUICommand'),
  \ dotnet#prop('DecreaseZoom', 'RoutedUICommand'),
  \ dotnet#prop('Zoom', 'RoutedUICommand'),
  \ dotnet#prop('NextPage', 'RoutedUICommand'),
  \ dotnet#prop('PreviousPage', 'RoutedUICommand'),
  \ dotnet#prop('FirstPage', 'RoutedUICommand'),
  \ dotnet#prop('LastPage', 'RoutedUICommand'),
  \ dotnet#prop('GoToPage', 'RoutedUICommand'),
  \ dotnet#prop('NavigateJournal', 'RoutedUICommand'),
  \ ])

call dotnet#class('AccessKeyManager', 'Object', [ 
  \ dotnet#method('Register(', ''),
  \ dotnet#method('Unregister(', ''),
  \ dotnet#method('IsKeyRegistered(', ''),
  \ dotnet#method('ProcessKey(', ''),
  \ dotnet#method('AddAccessKeyPressedHandler(', ''),
  \ dotnet#method('RemoveAccessKeyPressedHandler(', ''),
  \ dotnet#method('InternalGetAccessKeyCharacter(', ''),
  \ dotnet#method('AccessKeyManager(', ''),
  \ ])

call dotnet#class('AccessKeyPressedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('AccessKeyPressedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('AccessKeyPressedEventArgs', 'RoutedEventArgs', [ 
  \ dotnet#method('AccessKeyPressedEventArgs(', ''),
  \ dotnet#method('get_Scope(', ''),
  \ dotnet#method('set_Scope(', ''),
  \ dotnet#method('get_Target(', ''),
  \ dotnet#method('set_Target(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('Scope', 'object'),
  \ dotnet#prop('Target', 'UIElement'),
  \ dotnet#prop('Key', 'string'),
  \ ])

call dotnet#class('AccessKeyEventArgs', 'EventArgs', [ 
  \ dotnet#method('AccessKeyEventArgs(', ''),
  \ dotnet#method('ClearUserInitiated(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('get_IsMultiple(', ''),
  \ dotnet#method('get_UserInitiated(', ''),
  \ dotnet#prop('Key', 'string'),
  \ dotnet#prop('IsMultiple', 'bool'),
  \ dotnet#prop('UserInitiated', 'bool'),
  \ ])

call dotnet#class('Cursor', 'Object', [ 
  \ dotnet#method('Cursor(', ''),
  \ dotnet#method('Finalize(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('get_FileName(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#prop('CursorType', 'CursorType'),
  \ dotnet#prop('Handle', 'SafeHandle'),
  \ dotnet#prop('FileName', 'string'),
  \ ])

call dotnet#class('Cursors', 'Object', [ 
  \ dotnet#method('EnsureCursor(', ''),
  \ dotnet#method('Cursors(', ''),
  \ dotnet#prop('None', 'Cursor'),
  \ dotnet#prop('No', 'Cursor'),
  \ dotnet#prop('Arrow', 'Cursor'),
  \ dotnet#prop('AppStarting', 'Cursor'),
  \ dotnet#prop('Cross', 'Cursor'),
  \ dotnet#prop('Help', 'Cursor'),
  \ dotnet#prop('IBeam', 'Cursor'),
  \ dotnet#prop('SizeAll', 'Cursor'),
  \ dotnet#prop('SizeNESW', 'Cursor'),
  \ dotnet#prop('SizeNS', 'Cursor'),
  \ dotnet#prop('SizeNWSE', 'Cursor'),
  \ dotnet#prop('SizeWE', 'Cursor'),
  \ dotnet#prop('UpArrow', 'Cursor'),
  \ dotnet#prop('Wait', 'Cursor'),
  \ dotnet#prop('Hand', 'Cursor'),
  \ dotnet#prop('Pen', 'Cursor'),
  \ dotnet#prop('ScrollNS', 'Cursor'),
  \ dotnet#prop('ScrollWE', 'Cursor'),
  \ dotnet#prop('ScrollAll', 'Cursor'),
  \ dotnet#prop('ScrollN', 'Cursor'),
  \ dotnet#prop('ScrollS', 'Cursor'),
  \ dotnet#prop('ScrollW', 'Cursor'),
  \ dotnet#prop('ScrollE', 'Cursor'),
  \ dotnet#prop('ScrollNW', 'Cursor'),
  \ dotnet#prop('ScrollNE', 'Cursor'),
  \ dotnet#prop('ScrollSW', 'Cursor'),
  \ dotnet#prop('ScrollSE', 'Cursor'),
  \ dotnet#prop('ArrowCD', 'Cursor'),
  \ ])

call dotnet#class('CursorConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('GetStandardValues(', ''),
  \ dotnet#method('GetStandardValuesSupported(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('CursorConverter(', ''),
  \ ])

call dotnet#class('TextComposition', 'DispatcherObject', [ 
  \ dotnet#method('TextComposition(', ''),
  \ dotnet#method('Complete(', ''),
  \ dotnet#method('get_Text(', ''),
  \ dotnet#method('set_Text(', ''),
  \ dotnet#method('get_CompositionText(', ''),
  \ dotnet#method('set_CompositionText(', ''),
  \ dotnet#method('get_SystemText(', ''),
  \ dotnet#method('set_SystemText(', ''),
  \ dotnet#method('get_ControlText(', ''),
  \ dotnet#method('set_ControlText(', ''),
  \ dotnet#method('get_SystemCompositionText(', ''),
  \ dotnet#method('set_SystemCompositionText(', ''),
  \ dotnet#method('get_AutoComplete(', ''),
  \ dotnet#method('SetText(', ''),
  \ dotnet#method('SetCompositionText(', ''),
  \ dotnet#method('MakeSystem(', ''),
  \ dotnet#method('MakeControl(', ''),
  \ dotnet#method('ClearTexts(', ''),
  \ dotnet#method('set_Stage(', ''),
  \ dotnet#prop('Text', 'string'),
  \ dotnet#prop('CompositionText', 'string'),
  \ dotnet#prop('SystemText', 'string'),
  \ dotnet#prop('ControlText', 'string'),
  \ dotnet#prop('SystemCompositionText', 'string'),
  \ dotnet#prop('AutoComplete', 'TextCompositionAutoComplete'),
  \ dotnet#prop('Source', 'IInputElement'),
  \ dotnet#prop('_InputDevice', 'InputDevice'),
  \ dotnet#prop('_InputManager', 'InputManager'),
  \ dotnet#prop('Stage', 'TextCompositionStage'),
  \ ])

call dotnet#class('KeyboardEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('KeyboardEventArgs(', ''),
  \ dotnet#method('get_KeyboardDevice(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('KeyboardDevice', 'KeyboardDevice'),
  \ ])

call dotnet#class('KeyboardFocusChangedEventArgs', 'KeyboardEventArgs', [ 
  \ dotnet#method('KeyboardFocusChangedEventArgs(', ''),
  \ dotnet#method('get_OldFocus(', ''),
  \ dotnet#method('get_NewFocus(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('OldFocus', 'IInputElement'),
  \ dotnet#prop('NewFocus', 'IInputElement'),
  \ ])

call dotnet#class('KeyboardFocusChangedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('KeyboardFocusChangedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('FocusManager', 'Object', [ 
  \ dotnet#method('GetFocusedElement(', ''),
  \ dotnet#method('SetFocusedElement(', ''),
  \ dotnet#method('SetIsFocusScope(', ''),
  \ dotnet#method('GetIsFocusScope(', ''),
  \ dotnet#method('GetFocusScope(', ''),
  \ dotnet#method('FocusManager(', ''),
  \ ])

call dotnet#class('InertiaExpansionBehavior', 'Object', [ 
  \ dotnet#method('InertiaExpansionBehavior(', ''),
  \ dotnet#method('get_InitialVelocity(', ''),
  \ dotnet#method('set_InitialVelocity(', ''),
  \ dotnet#method('get_DesiredDeceleration(', ''),
  \ dotnet#method('set_DesiredDeceleration(', ''),
  \ dotnet#method('get_DesiredExpansion(', ''),
  \ dotnet#method('set_DesiredExpansion(', ''),
  \ dotnet#method('get_InitialRadius(', ''),
  \ dotnet#method('set_InitialRadius(', ''),
  \ dotnet#method('CanUseForInertia(', ''),
  \ dotnet#method('ApplyParameters(', ''),
  \ dotnet#prop('InitialVelocity', 'VInertiaExpansionBehavior'),
  \ dotnet#prop('DesiredDeceleration', 'float64'),
  \ dotnet#prop('DesiredExpansion', 'VInertiaExpansionBehavior'),
  \ dotnet#prop('InitialRadius', 'float64'),
  \ ])

call dotnet#class('InertiaRotationBehavior', 'Object', [ 
  \ dotnet#method('InertiaRotationBehavior(', ''),
  \ dotnet#method('get_InitialVelocity(', ''),
  \ dotnet#method('set_InitialVelocity(', ''),
  \ dotnet#method('get_DesiredDeceleration(', ''),
  \ dotnet#method('set_DesiredDeceleration(', ''),
  \ dotnet#method('get_DesiredRotation(', ''),
  \ dotnet#method('set_DesiredRotation(', ''),
  \ dotnet#method('CanUseForInertia(', ''),
  \ dotnet#method('ApplyParameters(', ''),
  \ dotnet#prop('InitialVelocity', 'float64'),
  \ dotnet#prop('DesiredDeceleration', 'float64'),
  \ dotnet#prop('DesiredRotation', 'float64'),
  \ ])

call dotnet#class('InertiaTranslationBehavior', 'Object', [ 
  \ dotnet#method('InertiaTranslationBehavior(', ''),
  \ dotnet#method('get_InitialVelocity(', ''),
  \ dotnet#method('set_InitialVelocity(', ''),
  \ dotnet#method('get_DesiredDeceleration(', ''),
  \ dotnet#method('set_DesiredDeceleration(', ''),
  \ dotnet#method('get_DesiredDisplacement(', ''),
  \ dotnet#method('set_DesiredDisplacement(', ''),
  \ dotnet#method('CanUseForInertia(', ''),
  \ dotnet#method('ApplyParameters(', ''),
  \ dotnet#prop('InitialVelocity', 'VInertiaTranslationBehavior'),
  \ dotnet#prop('DesiredDeceleration', 'float64'),
  \ dotnet#prop('DesiredDisplacement', 'float64'),
  \ ])

call dotnet#class('InputEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('InputEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('InputLanguageEventArgs', 'EventArgs', [ 
  \ dotnet#method('InputLanguageEventArgs(', ''),
  \ dotnet#prop('NewLanguage', 'CultureInfo'),
  \ dotnet#prop('PreviousLanguage', 'CultureInfo'),
  \ ])

call dotnet#class('InputLanguageChangedEventArgs', 'InputLanguageEventArgs', [ 
  \ dotnet#method('InputLanguageChangedEventArgs(', ''),
  \ ])

call dotnet#class('InputLanguageChangingEventArgs', 'InputLanguageEventArgs', [ 
  \ dotnet#method('InputLanguageChangingEventArgs(', ''),
  \ dotnet#method('get_Rejected(', ''),
  \ dotnet#method('set_Rejected(', ''),
  \ dotnet#prop('Rejected', 'bool'),
  \ ])

call dotnet#class('InputLanguageManager', 'DispatcherObject', [ 
  \ dotnet#method('SetInputLanguage(', ''),
  \ dotnet#method('GetInputLanguage(', ''),
  \ dotnet#method('SetRestoreInputLanguage(', ''),
  \ dotnet#method('GetRestoreInputLanguage(', ''),
  \ dotnet#method('RegisterInputLanguageSource(', ''),
  \ dotnet#method('ReportInputLanguageChanged(', ''),
  \ dotnet#method('ReportInputLanguageChanging(', ''),
  \ dotnet#method('get_CurrentInputLanguage(', ''),
  \ dotnet#method('set_CurrentInputLanguage(', ''),
  \ dotnet#method('get_AvailableInputLanguages(', ''),
  \ dotnet#method('add_InputLanguageChanged(', ''),
  \ dotnet#method('remove_InputLanguageChanged(', ''),
  \ dotnet#method('add_InputLanguageChanging(', ''),
  \ dotnet#method('remove_InputLanguageChanging(', ''),
  \ dotnet#method('Focus(', ''),
  \ dotnet#method('get_IsMultipleKeyboardLayout(', ''),
  \ dotnet#method('InputLanguageManager(', ''),
  \ dotnet#event('InputLanguageChanged', 'InputLanguageEventHandler'),
  \ dotnet#event('InputLanguageChanging', 'InputLanguageEventHandler'),
  \ dotnet#prop('Current', 'InputLanguageManager'),
  \ dotnet#prop('CurrentInputLanguage', 'CultureInfo'),
  \ dotnet#prop('AvailableInputLanguages', 'IEnumerable'),
  \ dotnet#prop('Source', 'IInputLanguageSource'),
  \ dotnet#prop('IsMultipleKeyboardLayout', 'bool'),
  \ ])

call dotnet#class('InputLanguageEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('InputLanguageEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('InputManager', 'DispatcherObject', [ 
  \ dotnet#method('get_IsSynchronizedInput(', ''),
  \ dotnet#method('set_SynchronizedInputState(', ''),
  \ dotnet#method('add_PreProcessInput(', ''),
  \ dotnet#method('remove_PreProcessInput(', ''),
  \ dotnet#method('add_PreNotifyInput(', ''),
  \ dotnet#method('remove_PreNotifyInput(', ''),
  \ dotnet#method('add_PostNotifyInput(', ''),
  \ dotnet#method('remove_PostNotifyInput(', ''),
  \ dotnet#method('add_PostProcessInput(', ''),
  \ dotnet#method('remove_PostProcessInput(', ''),
  \ dotnet#method('add_TranslateAccelerator(', ''),
  \ dotnet#method('remove_TranslateAccelerator(', ''),
  \ dotnet#method('RaiseTranslateAccelerator(', ''),
  \ dotnet#method('RegisterInputProvider(', ''),
  \ dotnet#method('UnregisterInputProvider(', ''),
  \ dotnet#method('get_InputProviders(', ''),
  \ dotnet#method('get_PrimaryKeyboardDevice(', ''),
  \ dotnet#method('get_PrimaryMouseDevice(', ''),
  \ dotnet#method('get_InDragDrop(', ''),
  \ dotnet#method('set_InDragDrop(', ''),
  \ dotnet#method('get_MostRecentInputDevice(', ''),
  \ dotnet#method('set_MostRecentInputDevice(', ''),
  \ dotnet#method('PushMenuMode(', ''),
  \ dotnet#method('PopMenuMode(', ''),
  \ dotnet#method('get_IsInMenuMode(', ''),
  \ dotnet#method('add_EnterMenuMode(', ''),
  \ dotnet#method('remove_EnterMenuMode(', ''),
  \ dotnet#method('add_LeaveMenuMode(', ''),
  \ dotnet#method('remove_LeaveMenuMode(', ''),
  \ dotnet#method('add_HitTestInvalidatedAsync(', ''),
  \ dotnet#method('remove_HitTestInvalidatedAsync(', ''),
  \ dotnet#method('NotifyHitTestInvalidated(', ''),
  \ dotnet#method('SafeCurrentNotifyHitTestInvalidated(', ''),
  \ dotnet#method('InvalidateInputDevices(', ''),
  \ dotnet#method('ProcessInput(', ''),
  \ dotnet#method('PushInput(', ''),
  \ dotnet#method('PushMarker(', ''),
  \ dotnet#method('PopInput(', ''),
  \ dotnet#method('PeekInput(', ''),
  \ dotnet#method('ContinueProcessingStagingArea(', ''),
  \ dotnet#method('StartListeningSynchronizedInput(', ''),
  \ dotnet#method('CancelSynchronizedInput(', ''),
  \ dotnet#method('InputManager(', ''),
  \ dotnet#event('PreProcessInput', 'PreProcessInputEventHandler'),
  \ dotnet#event('PreNotifyInput', 'NotifyInputEventHandler'),
  \ dotnet#event('PostNotifyInput', 'NotifyInputEventHandler'),
  \ dotnet#event('PostProcessInput', 'ProcessInputEventHandler'),
  \ dotnet#event('TranslateAccelerator', 'KeyEventHandler'),
  \ dotnet#event('EnterMenuMode', 'EventHandler'),
  \ dotnet#event('LeaveMenuMode', 'EventHandler'),
  \ dotnet#event('HitTestInvalidatedAsync', 'EventHandler'),
  \ dotnet#prop('Current', 'InputManager'),
  \ dotnet#prop('UnsecureCurrent', 'InputManager'),
  \ dotnet#prop('IsSynchronizedInput', 'bool'),
  \ dotnet#prop('SynchronizedInputEvent', 'RoutedEvent'),
  \ dotnet#prop('SynchronizeInputType', 'SynchronizedInputType'),
  \ dotnet#prop('ListeningElement', 'DependencyObject'),
  \ dotnet#prop('SynchronizedInputState', 'SynchronizedInputStates'),
  \ dotnet#prop('InputProviders', 'ICollection'),
  \ dotnet#prop('UnsecureInputProviders', 'ICollection'),
  \ dotnet#prop('PrimaryKeyboardDevice', 'KeyboardDevice'),
  \ dotnet#prop('PrimaryMouseDevice', 'MouseDevice'),
  \ dotnet#prop('StylusLogic', 'StylusLogic'),
  \ dotnet#prop('PrimaryCommandDevice', 'CommandDevice'),
  \ dotnet#prop('InDragDrop', 'bool'),
  \ dotnet#prop('MostRecentInputDevice', 'InputDevice'),
  \ dotnet#prop('IsInMenuMode', 'bool'),
  \ ])

call dotnet#class('InputMethod', 'DispatcherObject', [ 
  \ dotnet#method('InputMethod(', ''),
  \ dotnet#method('SetIsInputMethodEnabled(', ''),
  \ dotnet#method('GetIsInputMethodEnabled(', ''),
  \ dotnet#method('SetIsInputMethodSuspended(', ''),
  \ dotnet#method('GetIsInputMethodSuspended(', ''),
  \ dotnet#method('SetPreferredImeState(', ''),
  \ dotnet#method('GetPreferredImeState(', ''),
  \ dotnet#method('SetPreferredImeConversionMode(', ''),
  \ dotnet#method('GetPreferredImeConversionMode(', ''),
  \ dotnet#method('SetPreferredImeSentenceMode(', ''),
  \ dotnet#method('GetPreferredImeSentenceMode(', ''),
  \ dotnet#method('SetInputScope(', ''),
  \ dotnet#method('GetInputScope(', ''),
  \ dotnet#method('ShowConfigureUI(', ''),
  \ dotnet#method('ShowRegisterWordUI(', ''),
  \ dotnet#method('get_ImeState(', ''),
  \ dotnet#method('set_ImeState(', ''),
  \ dotnet#method('get_MicrophoneState(', ''),
  \ dotnet#method('set_MicrophoneState(', ''),
  \ dotnet#method('get_HandwritingState(', ''),
  \ dotnet#method('set_HandwritingState(', ''),
  \ dotnet#method('get_SpeechMode(', ''),
  \ dotnet#method('set_SpeechMode(', ''),
  \ dotnet#method('get_ImeConversionMode(', ''),
  \ dotnet#method('set_ImeConversionMode(', ''),
  \ dotnet#method('get_ImeSentenceMode(', ''),
  \ dotnet#method('set_ImeSentenceMode(', ''),
  \ dotnet#method('get_CanShowConfigurationUI(', ''),
  \ dotnet#method('get_CanShowRegisterWordUI(', ''),
  \ dotnet#method('add_StateChanged(', ''),
  \ dotnet#method('remove_StateChanged(', ''),
  \ dotnet#method('GotKeyboardFocus(', ''),
  \ dotnet#method('OnChange(', ''),
  \ dotnet#method('IsImm32ImeCurrent(', ''),
  \ dotnet#method('IsImm32Ime(', ''),
  \ dotnet#method('EnableOrDisableInputMethod(', ''),
  \ dotnet#method('set_TextServicesContext(', ''),
  \ dotnet#method('set_TextServicesCompartmentContext(', ''),
  \ dotnet#method('set_InputLanguageManager(', ''),
  \ dotnet#method('set_DefaultTextStore(', ''),
  \ dotnet#event('StateChanged', 'InputMethodStateChangedEventHandler'),
  \ dotnet#prop('Current', 'InputMethod'),
  \ dotnet#prop('ImeState', 'InputMethodState'),
  \ dotnet#prop('MicrophoneState', 'InputMethodState'),
  \ dotnet#prop('HandwritingState', 'InputMethodState'),
  \ dotnet#prop('SpeechMode', 'SpeechMode'),
  \ dotnet#prop('ImeConversionMode', 'ImeConversionModeValues'),
  \ dotnet#prop('ImeSentenceMode', 'ImeSentenceModeValues'),
  \ dotnet#prop('CanShowConfigurationUI', 'bool'),
  \ dotnet#prop('CanShowRegisterWordUI', 'bool'),
  \ dotnet#prop('TextServicesContext', 'TextServicesContext'),
  \ dotnet#prop('TextServicesCompartmentContext', 'TextServicesCompartmentContext'),
  \ dotnet#prop('InputLanguageManager', 'InputLanguageManager'),
  \ dotnet#prop('DefaultTextStore', 'DefaultTextStore'),
  \ ])

call dotnet#class('InputMethodStateChangedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('InputMethodStateChangedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('InputMethodStateChangedEventArgs', 'EventArgs', [ 
  \ dotnet#method('InputMethodStateChangedEventArgs(', ''),
  \ dotnet#method('get_IsImeStateChanged(', ''),
  \ dotnet#method('get_IsMicrophoneStateChanged(', ''),
  \ dotnet#method('get_IsHandwritingStateChanged(', ''),
  \ dotnet#method('get_IsSpeechModeChanged(', ''),
  \ dotnet#method('get_IsImeConversionModeChanged(', ''),
  \ dotnet#method('get_IsImeSentenceModeChanged(', ''),
  \ dotnet#prop('IsImeStateChanged', 'bool'),
  \ dotnet#prop('IsMicrophoneStateChanged', 'bool'),
  \ dotnet#prop('IsHandwritingStateChanged', 'bool'),
  \ dotnet#prop('IsSpeechModeChanged', 'bool'),
  \ dotnet#prop('IsImeConversionModeChanged', 'bool'),
  \ dotnet#prop('IsImeSentenceModeChanged', 'bool'),
  \ ])

call dotnet#class('InputScope', 'Object', [ 
  \ dotnet#method('get_Names(', ''),
  \ dotnet#method('get_SrgsMarkup(', ''),
  \ dotnet#method('set_SrgsMarkup(', ''),
  \ dotnet#method('get_RegularExpression(', ''),
  \ dotnet#method('set_RegularExpression(', ''),
  \ dotnet#method('get_PhraseList(', ''),
  \ dotnet#method('InputScope(', ''),
  \ dotnet#prop('Names', 'IList'),
  \ dotnet#prop('SrgsMarkup', 'string'),
  \ dotnet#prop('RegularExpression', 'string'),
  \ dotnet#prop('PhraseList', 'IList'),
  \ ])

call dotnet#class('InputScopeName', 'Object', [ 
  \ dotnet#method('InputScopeName(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('get_NameValue(', ''),
  \ dotnet#method('set_NameValue(', ''),
  \ dotnet#prop('NameValue', 'InputScopeNameValue'),
  \ ])

call dotnet#class('InputScopePhrase', 'Object', [ 
  \ dotnet#method('InputScopePhrase(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('set_Name(', ''),
  \ dotnet#prop('Name', 'string'),
  \ ])

call dotnet#class('InputScopeConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('InputScopeConverter(', ''),
  \ ])

call dotnet#class('InputScopeNameConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('InputScopeNameConverter(', ''),
  \ ])

call dotnet#class('Keyboard', 'Object', [ 
  \ dotnet#method('AddPreviewKeyDownHandler(', ''),
  \ dotnet#method('RemovePreviewKeyDownHandler(', ''),
  \ dotnet#method('AddKeyDownHandler(', ''),
  \ dotnet#method('RemoveKeyDownHandler(', ''),
  \ dotnet#method('AddPreviewKeyUpHandler(', ''),
  \ dotnet#method('RemovePreviewKeyUpHandler(', ''),
  \ dotnet#method('AddKeyUpHandler(', ''),
  \ dotnet#method('RemoveKeyUpHandler(', ''),
  \ dotnet#method('AddPreviewGotKeyboardFocusHandler(', ''),
  \ dotnet#method('RemovePreviewGotKeyboardFocusHandler(', ''),
  \ dotnet#method('AddPreviewKeyboardInputProviderAcquireFocusHandler(', ''),
  \ dotnet#method('RemovePreviewKeyboardInputProviderAcquireFocusHandler(', ''),
  \ dotnet#method('AddKeyboardInputProviderAcquireFocusHandler(', ''),
  \ dotnet#method('RemoveKeyboardInputProviderAcquireFocusHandler(', ''),
  \ dotnet#method('AddGotKeyboardFocusHandler(', ''),
  \ dotnet#method('RemoveGotKeyboardFocusHandler(', ''),
  \ dotnet#method('AddPreviewLostKeyboardFocusHandler(', ''),
  \ dotnet#method('RemovePreviewLostKeyboardFocusHandler(', ''),
  \ dotnet#method('AddLostKeyboardFocusHandler(', ''),
  \ dotnet#method('RemoveLostKeyboardFocusHandler(', ''),
  \ dotnet#method('ClearFocus(', ''),
  \ dotnet#method('Focus(', ''),
  \ dotnet#method('set_DefaultRestoreFocusMode(', ''),
  \ dotnet#method('IsKeyDown(', ''),
  \ dotnet#method('IsKeyUp(', ''),
  \ dotnet#method('IsKeyToggled(', ''),
  \ dotnet#method('GetKeyStates(', ''),
  \ dotnet#method('IsValidKey(', ''),
  \ dotnet#method('IsFocusable(', ''),
  \ dotnet#method('Keyboard(', ''),
  \ dotnet#prop('FocusedElement', 'IInputElement'),
  \ dotnet#prop('DefaultRestoreFocusMode', 'RestoreFocusMode'),
  \ dotnet#prop('Modifiers', 'ModifierKeys'),
  \ dotnet#prop('PrimaryDevice', 'KeyboardDevice'),
  \ ])

call dotnet#class('KeyboardDevice', 'InputDevice', [ 
  \ dotnet#method('KeyboardDevice(', ''),
  \ dotnet#method('set_ForceTarget(', ''),
  \ dotnet#method('get_DefaultRestoreFocusMode(', ''),
  \ dotnet#method('set_DefaultRestoreFocusMode(', ''),
  \ dotnet#method('get_FocusedElement(', ''),
  \ dotnet#method('ClearFocus(', ''),
  \ dotnet#method('Focus(', ''),
  \ dotnet#method('get_Modifiers(', ''),
  \ dotnet#method('IsKeyDown(', ''),
  \ dotnet#method('IsKeyUp(', ''),
  \ dotnet#method('IsKeyToggled(', ''),
  \ dotnet#method('GetKeyStates(', ''),
  \ dotnet#method('ReevaluateFocusAsync(', ''),
  \ dotnet#method('get_IsActive(', ''),
  \ dotnet#prop('Target', 'IInputElement'),
  \ dotnet#prop('ForceTarget', 'IInputElement'),
  \ dotnet#prop('ActiveSource', 'PresentationSource'),
  \ dotnet#prop('DefaultRestoreFocusMode', 'RestoreFocusMode'),
  \ dotnet#prop('FocusedElement', 'IInputElement'),
  \ dotnet#prop('Modifiers', 'ModifierKeys'),
  \ dotnet#prop('TextServicesManager', 'TextServicesManager'),
  \ dotnet#prop('TextCompositionManager', 'TextCompositionManager'),
  \ dotnet#prop('IsActive', 'bool'),
  \ ])

call dotnet#class('KeyboardEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('KeyboardEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('KeyboardInputProviderAcquireFocusEventArgs', 'KeyboardEventArgs', [ 
  \ dotnet#method('KeyboardInputProviderAcquireFocusEventArgs(', ''),
  \ dotnet#method('get_FocusAcquired(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('FocusAcquired', 'bool'),
  \ ])

call dotnet#class('KeyboardInputProviderAcquireFocusEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('KeyboardInputProviderAcquireFocusEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('KeyEventArgs', 'KeyboardEventArgs', [ 
  \ dotnet#method('KeyEventArgs(', ''),
  \ dotnet#method('get_InputSource(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('get_ImeProcessedKey(', ''),
  \ dotnet#method('get_SystemKey(', ''),
  \ dotnet#method('get_DeadCharProcessedKey(', ''),
  \ dotnet#method('get_KeyStates(', ''),
  \ dotnet#method('get_IsRepeat(', ''),
  \ dotnet#method('get_IsDown(', ''),
  \ dotnet#method('get_IsUp(', ''),
  \ dotnet#method('get_IsToggled(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#method('SetRepeat(', ''),
  \ dotnet#method('MarkNormal(', ''),
  \ dotnet#method('MarkSystem(', ''),
  \ dotnet#method('MarkImeProcessed(', ''),
  \ dotnet#method('MarkDeadCharProcessed(', ''),
  \ dotnet#method('get_ScanCode(', ''),
  \ dotnet#method('set_ScanCode(', ''),
  \ dotnet#method('get_IsExtendedKey(', ''),
  \ dotnet#method('set_IsExtendedKey(', ''),
  \ dotnet#prop('InputSource', 'PresentationSource'),
  \ dotnet#prop('Key', 'Key'),
  \ dotnet#prop('RealKey', 'Key'),
  \ dotnet#prop('ImeProcessedKey', 'Key'),
  \ dotnet#prop('SystemKey', 'Key'),
  \ dotnet#prop('DeadCharProcessedKey', 'Key'),
  \ dotnet#prop('KeyStates', 'KeyStates'),
  \ dotnet#prop('IsRepeat', 'bool'),
  \ dotnet#prop('IsDown', 'bool'),
  \ dotnet#prop('IsUp', 'bool'),
  \ dotnet#prop('IsToggled', 'bool'),
  \ dotnet#prop('UnsafeInputSource', 'PresentationSource'),
  \ dotnet#prop('ScanCode', 'int32'),
  \ dotnet#prop('IsExtendedKey', 'bool'),
  \ ])

call dotnet#class('KeyEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('KeyEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('Manipulation', 'Object', [ 
  \ dotnet#method('IsManipulationActive(', ''),
  \ dotnet#method('StartInertia(', ''),
  \ dotnet#method('CompleteManipulation(', ''),
  \ dotnet#method('TryCompleteManipulation(', ''),
  \ dotnet#method('SetManipulationMode(', ''),
  \ dotnet#method('GetManipulationMode(', ''),
  \ dotnet#method('SetManipulationContainer(', ''),
  \ dotnet#method('GetManipulationContainer(', ''),
  \ dotnet#method('SetManipulationPivot(', ''),
  \ dotnet#method('GetManipulationPivot(', ''),
  \ dotnet#method('AddManipulator(', ''),
  \ dotnet#method('RemoveManipulator(', ''),
  \ dotnet#method('TryRemoveManipulator(', ''),
  \ dotnet#method('SetManipulationParameter(', ''),
  \ dotnet#method('FindManipulationParent(', ''),
  \ dotnet#method('Manipulation(', ''),
  \ ])

call dotnet#class('ManipulationBoundaryFeedbackEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('ManipulationBoundaryFeedbackEventArgs(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#method('get_ManipulationContainer(', ''),
  \ dotnet#method('get_BoundaryFeedback(', ''),
  \ dotnet#method('set_CompensateForBoundaryFeedback(', ''),
  \ dotnet#method('get_Manipulators(', ''),
  \ dotnet#method('set_ManipulationContainer(', ''),
  \ dotnet#method('set_BoundaryFeedback(', ''),
  \ dotnet#prop('ManipulationContainer', 'IInputElement'),
  \ dotnet#prop('BoundaryFeedback', 'ManipulationDelta'),
  \ dotnet#prop('CompensateForBoundaryFeedback', 'Func'),
  \ dotnet#prop('Manipulators', 'IEnumerable'),
  \ ])

call dotnet#class('ManipulationCompletedEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('ManipulationCompletedEventArgs(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#method('get_IsInertial(', ''),
  \ dotnet#method('get_ManipulationContainer(', ''),
  \ dotnet#method('get_ManipulationOrigin(', ''),
  \ dotnet#method('get_TotalManipulation(', ''),
  \ dotnet#method('get_FinalVelocities(', ''),
  \ dotnet#method('Cancel(', ''),
  \ dotnet#method('get_RequestedCancel(', ''),
  \ dotnet#method('get_Manipulators(', ''),
  \ dotnet#method('set_IsInertial(', ''),
  \ dotnet#method('set_ManipulationContainer(', ''),
  \ dotnet#method('set_ManipulationOrigin(', ''),
  \ dotnet#method('set_TotalManipulation(', ''),
  \ dotnet#method('set_FinalVelocities(', ''),
  \ dotnet#method('set_RequestedCancel(', ''),
  \ dotnet#prop('IsInertial', 'bool'),
  \ dotnet#prop('ManipulationContainer', 'IInputElement'),
  \ dotnet#prop('ManipulationOrigin', 'Point'),
  \ dotnet#prop('TotalManipulation', 'ManipulationDelta'),
  \ dotnet#prop('FinalVelocities', 'ManipulationVelocities'),
  \ dotnet#prop('RequestedCancel', 'bool'),
  \ dotnet#prop('Manipulators', 'IEnumerable'),
  \ ])

call dotnet#class('ManipulationDelta', 'Object', [ 
  \ dotnet#method('ManipulationDelta(', ''),
  \ dotnet#method('get_Translation(', ''),
  \ dotnet#method('get_Rotation(', ''),
  \ dotnet#method('get_Scale(', ''),
  \ dotnet#method('get_Expansion(', ''),
  \ dotnet#method('set_Translation(', ''),
  \ dotnet#method('set_Rotation(', ''),
  \ dotnet#method('set_Scale(', ''),
  \ dotnet#method('set_Expansion(', ''),
  \ dotnet#prop('Translation', 'VManipulationDelta'),
  \ dotnet#prop('Rotation', 'float64'),
  \ dotnet#prop('Scale', 'VManipulationDelta'),
  \ dotnet#prop('Expansion', 'VManipulationDelta'),
  \ ])

call dotnet#class('ManipulationDeltaEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('ManipulationDeltaEventArgs(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#method('get_IsInertial(', ''),
  \ dotnet#method('get_ManipulationContainer(', ''),
  \ dotnet#method('get_ManipulationOrigin(', ''),
  \ dotnet#method('get_CumulativeManipulation(', ''),
  \ dotnet#method('get_DeltaManipulation(', ''),
  \ dotnet#method('get_Velocities(', ''),
  \ dotnet#method('ReportBoundaryFeedback(', ''),
  \ dotnet#method('Complete(', ''),
  \ dotnet#method('StartInertia(', ''),
  \ dotnet#method('Cancel(', ''),
  \ dotnet#method('get_RequestedComplete(', ''),
  \ dotnet#method('get_RequestedInertia(', ''),
  \ dotnet#method('get_RequestedCancel(', ''),
  \ dotnet#method('get_Manipulators(', ''),
  \ dotnet#method('set_IsInertial(', ''),
  \ dotnet#method('set_ManipulationContainer(', ''),
  \ dotnet#method('set_ManipulationOrigin(', ''),
  \ dotnet#method('set_CumulativeManipulation(', ''),
  \ dotnet#method('set_DeltaManipulation(', ''),
  \ dotnet#method('set_Velocities(', ''),
  \ dotnet#method('set_UnusedManipulation(', ''),
  \ dotnet#method('set_RequestedComplete(', ''),
  \ dotnet#method('set_RequestedInertia(', ''),
  \ dotnet#method('set_RequestedCancel(', ''),
  \ dotnet#prop('IsInertial', 'bool'),
  \ dotnet#prop('ManipulationContainer', 'IInputElement'),
  \ dotnet#prop('ManipulationOrigin', 'Point'),
  \ dotnet#prop('CumulativeManipulation', 'ManipulationDelta'),
  \ dotnet#prop('DeltaManipulation', 'ManipulationDelta'),
  \ dotnet#prop('Velocities', 'ManipulationVelocities'),
  \ dotnet#prop('UnusedManipulation', 'ManipulationDelta'),
  \ dotnet#prop('RequestedComplete', 'bool'),
  \ dotnet#prop('RequestedInertia', 'bool'),
  \ dotnet#prop('RequestedCancel', 'bool'),
  \ dotnet#prop('Manipulators', 'IEnumerable'),
  \ ])

call dotnet#class('ManipulationInertiaStartingEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('ManipulationInertiaStartingEventArgs(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#method('get_ManipulationContainer(', ''),
  \ dotnet#method('get_ManipulationOrigin(', ''),
  \ dotnet#method('set_ManipulationOrigin(', ''),
  \ dotnet#method('get_InitialVelocities(', ''),
  \ dotnet#method('get_TranslationBehavior(', ''),
  \ dotnet#method('set_TranslationBehavior(', ''),
  \ dotnet#method('get_RotationBehavior(', ''),
  \ dotnet#method('set_RotationBehavior(', ''),
  \ dotnet#method('get_ExpansionBehavior(', ''),
  \ dotnet#method('set_ExpansionBehavior(', ''),
  \ dotnet#method('Cancel(', ''),
  \ dotnet#method('get_RequestedCancel(', ''),
  \ dotnet#method('get_Manipulators(', ''),
  \ dotnet#method('SetInertiaParameter(', ''),
  \ dotnet#method('CanBeginInertia(', ''),
  \ dotnet#method('ApplyParameters(', ''),
  \ dotnet#method('set_ManipulationContainer(', ''),
  \ dotnet#method('set_InitialVelocities(', ''),
  \ dotnet#method('set_RequestedCancel(', ''),
  \ dotnet#prop('ManipulationContainer', 'IInputElement'),
  \ dotnet#prop('ManipulationOrigin', 'Point'),
  \ dotnet#prop('InitialVelocities', 'ManipulationVelocities'),
  \ dotnet#prop('TranslationBehavior', 'InertiaTranslationBehavior'),
  \ dotnet#prop('RotationBehavior', 'InertiaRotationBehavior'),
  \ dotnet#prop('ExpansionBehavior', 'InertiaExpansionBehavior'),
  \ dotnet#prop('RequestedCancel', 'bool'),
  \ dotnet#prop('Manipulators', 'IEnumerable'),
  \ ])

call dotnet#class('ManipulationPivot', 'Object', [ 
  \ dotnet#method('ManipulationPivot(', ''),
  \ dotnet#method('get_Center(', ''),
  \ dotnet#method('set_Center(', ''),
  \ dotnet#method('get_Radius(', ''),
  \ dotnet#method('set_Radius(', ''),
  \ dotnet#prop('Center', 'Point'),
  \ dotnet#prop('Radius', 'float64'),
  \ ])

call dotnet#class('ManipulationStartedEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('ManipulationStartedEventArgs(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#method('get_ManipulationContainer(', ''),
  \ dotnet#method('get_ManipulationOrigin(', ''),
  \ dotnet#method('Complete(', ''),
  \ dotnet#method('Cancel(', ''),
  \ dotnet#method('get_RequestedComplete(', ''),
  \ dotnet#method('get_RequestedCancel(', ''),
  \ dotnet#method('get_Manipulators(', ''),
  \ dotnet#method('set_ManipulationContainer(', ''),
  \ dotnet#method('set_ManipulationOrigin(', ''),
  \ dotnet#method('set_RequestedComplete(', ''),
  \ dotnet#method('set_RequestedCancel(', ''),
  \ dotnet#prop('ManipulationContainer', 'IInputElement'),
  \ dotnet#prop('ManipulationOrigin', 'Point'),
  \ dotnet#prop('RequestedComplete', 'bool'),
  \ dotnet#prop('RequestedCancel', 'bool'),
  \ dotnet#prop('Manipulators', 'IEnumerable'),
  \ ])

call dotnet#class('ManipulationStartingEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('ManipulationStartingEventArgs(', ''),
  \ dotnet#method('get_Mode(', ''),
  \ dotnet#method('set_Mode(', ''),
  \ dotnet#method('get_ManipulationContainer(', ''),
  \ dotnet#method('set_ManipulationContainer(', ''),
  \ dotnet#method('get_Pivot(', ''),
  \ dotnet#method('set_Pivot(', ''),
  \ dotnet#method('get_IsSingleTouchEnabled(', ''),
  \ dotnet#method('set_IsSingleTouchEnabled(', ''),
  \ dotnet#method('Cancel(', ''),
  \ dotnet#method('get_RequestedCancel(', ''),
  \ dotnet#method('get_Manipulators(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#method('SetManipulationParameter(', ''),
  \ dotnet#method('set_RequestedCancel(', ''),
  \ dotnet#prop('Mode', 'ManipulationModes'),
  \ dotnet#prop('ManipulationContainer', 'IInputElement'),
  \ dotnet#prop('Pivot', 'ManipulationPivot'),
  \ dotnet#prop('IsSingleTouchEnabled', 'bool'),
  \ dotnet#prop('RequestedCancel', 'bool'),
  \ dotnet#prop('Manipulators', 'IEnumerable'),
  \ dotnet#prop('Parameters', 'IList'),
  \ ])

call dotnet#class('ManipulationVelocities', 'Object', [ 
  \ dotnet#method('ManipulationVelocities(', ''),
  \ dotnet#method('get_LinearVelocity(', ''),
  \ dotnet#method('get_AngularVelocity(', ''),
  \ dotnet#method('get_ExpansionVelocity(', ''),
  \ dotnet#method('set_LinearVelocity(', ''),
  \ dotnet#method('set_AngularVelocity(', ''),
  \ dotnet#method('set_ExpansionVelocity(', ''),
  \ dotnet#prop('LinearVelocity', 'VManipulationVelocities'),
  \ dotnet#prop('AngularVelocity', 'float64'),
  \ dotnet#prop('ExpansionVelocity', 'VManipulationVelocities'),
  \ ])

call dotnet#class('Mouse', 'Object', [ 
  \ dotnet#method('AddPreviewMouseMoveHandler(', ''),
  \ dotnet#method('RemovePreviewMouseMoveHandler(', ''),
  \ dotnet#method('AddMouseMoveHandler(', ''),
  \ dotnet#method('RemoveMouseMoveHandler(', ''),
  \ dotnet#method('AddPreviewMouseDownOutsideCapturedElementHandler(', ''),
  \ dotnet#method('RemovePreviewMouseDownOutsideCapturedElementHandler(', ''),
  \ dotnet#method('AddPreviewMouseUpOutsideCapturedElementHandler(', ''),
  \ dotnet#method('RemovePreviewMouseUpOutsideCapturedElementHandler(', ''),
  \ dotnet#method('AddPreviewMouseDownHandler(', ''),
  \ dotnet#method('RemovePreviewMouseDownHandler(', ''),
  \ dotnet#method('AddMouseDownHandler(', ''),
  \ dotnet#method('RemoveMouseDownHandler(', ''),
  \ dotnet#method('AddPreviewMouseUpHandler(', ''),
  \ dotnet#method('RemovePreviewMouseUpHandler(', ''),
  \ dotnet#method('AddMouseUpHandler(', ''),
  \ dotnet#method('RemoveMouseUpHandler(', ''),
  \ dotnet#method('AddPreviewMouseWheelHandler(', ''),
  \ dotnet#method('RemovePreviewMouseWheelHandler(', ''),
  \ dotnet#method('AddMouseWheelHandler(', ''),
  \ dotnet#method('RemoveMouseWheelHandler(', ''),
  \ dotnet#method('AddMouseEnterHandler(', ''),
  \ dotnet#method('RemoveMouseEnterHandler(', ''),
  \ dotnet#method('AddMouseLeaveHandler(', ''),
  \ dotnet#method('RemoveMouseLeaveHandler(', ''),
  \ dotnet#method('AddGotMouseCaptureHandler(', ''),
  \ dotnet#method('RemoveGotMouseCaptureHandler(', ''),
  \ dotnet#method('AddLostMouseCaptureHandler(', ''),
  \ dotnet#method('RemoveLostMouseCaptureHandler(', ''),
  \ dotnet#method('AddQueryCursorHandler(', ''),
  \ dotnet#method('RemoveQueryCursorHandler(', ''),
  \ dotnet#method('Capture(', ''),
  \ dotnet#method('GetIntermediatePoints(', ''),
  \ dotnet#method('set_OverrideCursor(', ''),
  \ dotnet#method('SetCursor(', ''),
  \ dotnet#method('GetPosition(', ''),
  \ dotnet#method('Synchronize(', ''),
  \ dotnet#method('UpdateCursor(', ''),
  \ dotnet#method('Mouse(', ''),
  \ dotnet#prop('DirectlyOver', 'IInputElement'),
  \ dotnet#prop('Captured', 'IInputElement'),
  \ dotnet#prop('CapturedMode', 'CaptureMode'),
  \ dotnet#prop('OverrideCursor', 'Cursor'),
  \ dotnet#prop('LeftButton', 'MouseButtonState'),
  \ dotnet#prop('RightButton', 'MouseButtonState'),
  \ dotnet#prop('MiddleButton', 'MouseButtonState'),
  \ dotnet#prop('XButton1', 'MouseButtonState'),
  \ dotnet#prop('XButton2', 'MouseButtonState'),
  \ dotnet#prop('PrimaryDevice', 'MouseDevice'),
  \ ])

call dotnet#class('MouseEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('MouseEventArgs(', ''),
  \ dotnet#method('get_MouseDevice(', ''),
  \ dotnet#method('get_StylusDevice(', ''),
  \ dotnet#method('GetPosition(', ''),
  \ dotnet#method('get_LeftButton(', ''),
  \ dotnet#method('get_RightButton(', ''),
  \ dotnet#method('get_MiddleButton(', ''),
  \ dotnet#method('get_XButton1(', ''),
  \ dotnet#method('get_XButton2(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('MouseDevice', 'MouseDevice'),
  \ dotnet#prop('StylusDevice', 'StylusDevice'),
  \ dotnet#prop('LeftButton', 'MouseButtonState'),
  \ dotnet#prop('RightButton', 'MouseButtonState'),
  \ dotnet#prop('MiddleButton', 'MouseButtonState'),
  \ dotnet#prop('XButton1', 'MouseButtonState'),
  \ dotnet#prop('XButton2', 'MouseButtonState'),
  \ ])

call dotnet#class('MouseButtonEventArgs', 'MouseEventArgs', [ 
  \ dotnet#method('MouseButtonEventArgs(', ''),
  \ dotnet#method('get_ChangedButton(', ''),
  \ dotnet#method('get_ButtonState(', ''),
  \ dotnet#method('get_ClickCount(', ''),
  \ dotnet#method('set_ClickCount(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('ChangedButton', 'MouseButton'),
  \ dotnet#prop('ButtonState', 'MouseButtonState'),
  \ dotnet#prop('ClickCount', 'int32'),
  \ ])

call dotnet#class('MouseButtonEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('MouseButtonEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('MouseDevice', 'InputDevice', [ 
  \ dotnet#method('MouseDevice(', ''),
  \ dotnet#method('GetButtonState(', ''),
  \ dotnet#method('GetScreenPosition(', ''),
  \ dotnet#method('GetScreenPositionFromSystem(', ''),
  \ dotnet#method('GetClientPosition(', ''),
  \ dotnet#method('get_DirectlyOver(', ''),
  \ dotnet#method('get_Captured(', ''),
  \ dotnet#method('Capture(', ''),
  \ dotnet#method('get_OverrideCursor(', ''),
  \ dotnet#method('set_OverrideCursor(', ''),
  \ dotnet#method('SetCursor(', ''),
  \ dotnet#method('get_LeftButton(', ''),
  \ dotnet#method('get_RightButton(', ''),
  \ dotnet#method('get_MiddleButton(', ''),
  \ dotnet#method('get_XButton1(', ''),
  \ dotnet#method('get_XButton2(', ''),
  \ dotnet#method('GetPosition(', ''),
  \ dotnet#method('ReevaluateMouseOver(', ''),
  \ dotnet#method('ReevaluateCapture(', ''),
  \ dotnet#method('Synchronize(', ''),
  \ dotnet#method('UpdateCursor(', ''),
  \ dotnet#method('GlobalHitTest(', ''),
  \ dotnet#method('LocalHitTest(', ''),
  \ dotnet#method('IsSameSpot(', ''),
  \ dotnet#method('CalculateClickCount(', ''),
  \ dotnet#method('get_IsActive(', ''),
  \ dotnet#prop('Target', 'IInputElement'),
  \ dotnet#prop('ActiveSource', 'PresentationSource'),
  \ dotnet#prop('CriticalActiveSource', 'PresentationSource'),
  \ dotnet#prop('DirectlyOver', 'IInputElement'),
  \ dotnet#prop('RawDirectlyOver', 'IInputElement'),
  \ dotnet#prop('Captured', 'IInputElement'),
  \ dotnet#prop('CapturedMode', 'CaptureMode'),
  \ dotnet#prop('OverrideCursor', 'Cursor'),
  \ dotnet#prop('LeftButton', 'MouseButtonState'),
  \ dotnet#prop('RightButton', 'MouseButtonState'),
  \ dotnet#prop('MiddleButton', 'MouseButtonState'),
  \ dotnet#prop('XButton1', 'MouseButtonState'),
  \ dotnet#prop('XButton2', 'MouseButtonState'),
  \ dotnet#prop('PositionRelativeToOver', 'Point'),
  \ dotnet#prop('NonRelativePosition', 'Point'),
  \ dotnet#prop('IsActive', 'bool'),
  \ dotnet#prop('StylusDevice', 'StylusDevice'),
  \ ])

call dotnet#class('MouseEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('MouseEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('MouseWheelEventArgs', 'MouseEventArgs', [ 
  \ dotnet#method('MouseWheelEventArgs(', ''),
  \ dotnet#method('get_Delta(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('Delta', 'int32'),
  \ ])

call dotnet#class('MouseWheelEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('MouseWheelEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('NotifyInputEventArgs', 'EventArgs', [ 
  \ dotnet#method('NotifyInputEventArgs(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_StagingItem(', ''),
  \ dotnet#method('get_InputManager(', ''),
  \ dotnet#prop('StagingItem', 'StagingAreaInputItem'),
  \ dotnet#prop('InputManager', 'InputManager'),
  \ dotnet#prop('UnsecureInputManager', 'InputManager'),
  \ ])

call dotnet#class('NotifyInputEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('NotifyInputEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('ProcessInputEventArgs', 'NotifyInputEventArgs', [ 
  \ dotnet#method('ProcessInputEventArgs(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('PushInput(', ''),
  \ dotnet#method('PopInput(', ''),
  \ dotnet#method('PeekInput(', ''),
  \ ])

call dotnet#class('PreProcessInputEventArgs', 'ProcessInputEventArgs', [ 
  \ dotnet#method('PreProcessInputEventArgs(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('Cancel(', ''),
  \ dotnet#method('get_Canceled(', ''),
  \ dotnet#prop('Canceled', 'bool'),
  \ ])

call dotnet#class('PreProcessInputEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('PreProcessInputEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('ProcessInputEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('ProcessInputEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('QueryCursorEventArgs', 'MouseEventArgs', [ 
  \ dotnet#method('QueryCursorEventArgs(', ''),
  \ dotnet#method('get_Cursor(', ''),
  \ dotnet#method('set_Cursor(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('Cursor', 'Cursor'),
  \ ])

call dotnet#class('QueryCursorEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('QueryCursorEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('StagingAreaInputItem', 'Object', [ 
  \ dotnet#method('StagingAreaInputItem(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Input(', ''),
  \ dotnet#method('GetData(', ''),
  \ dotnet#method('SetData(', ''),
  \ dotnet#method('get_IsMarker(', ''),
  \ dotnet#prop('Input', 'InputEventArgs'),
  \ dotnet#prop('IsMarker', 'bool'),
  \ ])

call dotnet#class('Touch', 'Object', [ 
  \ dotnet#method('add_FrameReported(', ''),
  \ dotnet#method('remove_FrameReported(', ''),
  \ dotnet#method('ReportFrame(', ''),
  \ dotnet#method('Touch(', ''),
  \ dotnet#event('FrameReported', 'TouchFrameEventHandler'),
  \ ])

call dotnet#class('TouchDevice', 'InputDevice', [ 
  \ dotnet#method('TouchDevice(', ''),
  \ dotnet#method('get_Id(', ''),
  \ dotnet#method('add_Activated(', ''),
  \ dotnet#method('remove_Activated(', ''),
  \ dotnet#method('add_Deactivated(', ''),
  \ dotnet#method('remove_Deactivated(', ''),
  \ dotnet#method('get_IsActive(', ''),
  \ dotnet#method('SetActiveSource(', ''),
  \ dotnet#method('get_DirectlyOver(', ''),
  \ dotnet#method('get_Captured(', ''),
  \ dotnet#method('get_CaptureMode(', ''),
  \ dotnet#method('Capture(', ''),
  \ dotnet#method('ReevaluateCapturedWithin(', ''),
  \ dotnet#method('OnCapture(', ''),
  \ dotnet#method('ReportDown(', ''),
  \ dotnet#method('ReportMove(', ''),
  \ dotnet#method('ReportUp(', ''),
  \ dotnet#method('Activate(', ''),
  \ dotnet#method('Deactivate(', ''),
  \ dotnet#method('Synchronize(', ''),
  \ dotnet#method('OnManipulationEnded(', ''),
  \ dotnet#method('OnManipulationStarted(', ''),
  \ dotnet#method('ReevaluateDirectlyOver(', ''),
  \ dotnet#method('get_PromotingToManipulation(', ''),
  \ dotnet#method('GetTouchPoints(', ''),
  \ dotnet#method('GetPrimaryTouchPoint(', ''),
  \ dotnet#method('ReleaseAllCaptures(', ''),
  \ dotnet#method('GetCapturedTouches(', ''),
  \ dotnet#method('GetTouchesOver(', ''),
  \ dotnet#method('add_Updated(', ''),
  \ dotnet#method('remove_Updated(', ''),
  \ dotnet#method('ManipulationEnded(', ''),
  \ dotnet#method('set_PromotingToManipulation(', ''),
  \ dotnet#event('Activated', 'EventHandler'),
  \ dotnet#event('Deactivated', 'EventHandler'),
  \ dotnet#event('Updated', 'EventHandler'),
  \ dotnet#prop('Id', 'int32'),
  \ dotnet#prop('IsActive', 'bool'),
  \ dotnet#prop('Target', 'IInputElement'),
  \ dotnet#prop('ActiveSource', 'PresentationSource'),
  \ dotnet#prop('DirectlyOver', 'IInputElement'),
  \ dotnet#prop('Captured', 'IInputElement'),
  \ dotnet#prop('CaptureMode', 'CaptureMode'),
  \ dotnet#prop('PromotingToManipulation', 'bool'),
  \ dotnet#prop('Id', 'int32'),
  \ ])

call dotnet#class('TouchEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('TouchEventArgs(', ''),
  \ dotnet#method('get_TouchDevice(', ''),
  \ dotnet#method('GetTouchPoint(', ''),
  \ dotnet#method('GetIntermediateTouchPoints(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('TouchDevice', 'TouchDevice'),
  \ ])

call dotnet#class('TouchFrameEventArgs', 'EventArgs', [ 
  \ dotnet#method('TouchFrameEventArgs(', ''),
  \ dotnet#method('get_Timestamp(', ''),
  \ dotnet#method('GetTouchPoints(', ''),
  \ dotnet#method('GetPrimaryTouchPoint(', ''),
  \ dotnet#method('SuspendMousePromotionUntilTouchUp(', ''),
  \ dotnet#method('set_Timestamp(', ''),
  \ dotnet#prop('Timestamp', 'int32'),
  \ ])

call dotnet#class('TouchFrameEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('TouchFrameEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('TouchPoint', 'Object', [ 
  \ dotnet#method('TouchPoint(', ''),
  \ dotnet#method('get_TouchDevice(', ''),
  \ dotnet#method('get_Position(', ''),
  \ dotnet#method('get_Bounds(', ''),
  \ dotnet#method('get_Size(', ''),
  \ dotnet#method('get_Action(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('set_TouchDevice(', ''),
  \ dotnet#method('set_Position(', ''),
  \ dotnet#method('set_Bounds(', ''),
  \ dotnet#method('set_Action(', ''),
  \ dotnet#prop('TouchDevice', 'TouchDevice'),
  \ dotnet#prop('Position', 'Point'),
  \ dotnet#prop('Bounds', 'Rect'),
  \ dotnet#prop('Size', 'Size'),
  \ dotnet#prop('Action', 'TouchAction'),
  \ ])

call dotnet#class('TouchPointCollection', 'Collection', [ 
  \ dotnet#method('TouchPointCollection(', ''),
  \ ])

call dotnet#class('Stylus', 'Object', [ 
  \ dotnet#method('AddPreviewStylusDownHandler(', ''),
  \ dotnet#method('RemovePreviewStylusDownHandler(', ''),
  \ dotnet#method('AddStylusDownHandler(', ''),
  \ dotnet#method('RemoveStylusDownHandler(', ''),
  \ dotnet#method('AddPreviewStylusUpHandler(', ''),
  \ dotnet#method('RemovePreviewStylusUpHandler(', ''),
  \ dotnet#method('AddStylusUpHandler(', ''),
  \ dotnet#method('RemoveStylusUpHandler(', ''),
  \ dotnet#method('AddPreviewStylusMoveHandler(', ''),
  \ dotnet#method('RemovePreviewStylusMoveHandler(', ''),
  \ dotnet#method('AddStylusMoveHandler(', ''),
  \ dotnet#method('RemoveStylusMoveHandler(', ''),
  \ dotnet#method('AddPreviewStylusInAirMoveHandler(', ''),
  \ dotnet#method('RemovePreviewStylusInAirMoveHandler(', ''),
  \ dotnet#method('AddStylusInAirMoveHandler(', ''),
  \ dotnet#method('RemoveStylusInAirMoveHandler(', ''),
  \ dotnet#method('AddStylusEnterHandler(', ''),
  \ dotnet#method('RemoveStylusEnterHandler(', ''),
  \ dotnet#method('AddStylusLeaveHandler(', ''),
  \ dotnet#method('RemoveStylusLeaveHandler(', ''),
  \ dotnet#method('AddPreviewStylusInRangeHandler(', ''),
  \ dotnet#method('RemovePreviewStylusInRangeHandler(', ''),
  \ dotnet#method('AddStylusInRangeHandler(', ''),
  \ dotnet#method('RemoveStylusInRangeHandler(', ''),
  \ dotnet#method('AddPreviewStylusOutOfRangeHandler(', ''),
  \ dotnet#method('RemovePreviewStylusOutOfRangeHandler(', ''),
  \ dotnet#method('AddStylusOutOfRangeHandler(', ''),
  \ dotnet#method('RemoveStylusOutOfRangeHandler(', ''),
  \ dotnet#method('AddPreviewStylusSystemGestureHandler(', ''),
  \ dotnet#method('RemovePreviewStylusSystemGestureHandler(', ''),
  \ dotnet#method('AddStylusSystemGestureHandler(', ''),
  \ dotnet#method('RemoveStylusSystemGestureHandler(', ''),
  \ dotnet#method('AddGotStylusCaptureHandler(', ''),
  \ dotnet#method('RemoveGotStylusCaptureHandler(', ''),
  \ dotnet#method('AddLostStylusCaptureHandler(', ''),
  \ dotnet#method('RemoveLostStylusCaptureHandler(', ''),
  \ dotnet#method('AddStylusButtonDownHandler(', ''),
  \ dotnet#method('RemoveStylusButtonDownHandler(', ''),
  \ dotnet#method('AddStylusButtonUpHandler(', ''),
  \ dotnet#method('RemoveStylusButtonUpHandler(', ''),
  \ dotnet#method('AddPreviewStylusButtonDownHandler(', ''),
  \ dotnet#method('RemovePreviewStylusButtonDownHandler(', ''),
  \ dotnet#method('AddPreviewStylusButtonUpHandler(', ''),
  \ dotnet#method('RemovePreviewStylusButtonUpHandler(', ''),
  \ dotnet#method('GetIsPressAndHoldEnabled(', ''),
  \ dotnet#method('SetIsPressAndHoldEnabled(', ''),
  \ dotnet#method('GetIsFlicksEnabled(', ''),
  \ dotnet#method('SetIsFlicksEnabled(', ''),
  \ dotnet#method('GetIsTapFeedbackEnabled(', ''),
  \ dotnet#method('SetIsTapFeedbackEnabled(', ''),
  \ dotnet#method('GetIsTouchFeedbackEnabled(', ''),
  \ dotnet#method('SetIsTouchFeedbackEnabled(', ''),
  \ dotnet#method('Capture(', ''),
  \ dotnet#method('Synchronize(', ''),
  \ dotnet#method('Stylus(', ''),
  \ dotnet#prop('DirectlyOver', 'IInputElement'),
  \ dotnet#prop('Captured', 'IInputElement'),
  \ dotnet#prop('CurrentStylusDevice', 'StylusDevice'),
  \ ])

call dotnet#class('StylusButton', 'Object', [ 
  \ dotnet#method('StylusButton(', ''),
  \ dotnet#method('get_Guid(', ''),
  \ dotnet#method('get_StylusButtonState(', ''),
  \ dotnet#method('set_CachedButtonState(', ''),
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('get_StylusDevice(', ''),
  \ dotnet#method('SetOwner(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#prop('Guid', 'Guid'),
  \ dotnet#prop('StylusButtonState', 'StylusButtonState'),
  \ dotnet#prop('CachedButtonState', 'StylusButtonState'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('StylusDevice', 'StylusDevice'),
  \ ])

call dotnet#class('StylusButtonCollection', 'ReadOnlyCollection', [ 
  \ dotnet#method('StylusButtonCollection(', ''),
  \ dotnet#method('GetStylusButtonByGuid(', ''),
  \ ])

call dotnet#class('StylusDeviceCollection', 'ReadOnlyCollection', [ 
  \ dotnet#method('StylusDeviceCollection(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('AddStylusDevice(', ''),
  \ ])

call dotnet#class('StylusDevice', 'InputDevice', [ 
  \ dotnet#method('StylusDevice(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('set_CurrentNonVerifiedTarget(', ''),
  \ dotnet#method('set_CurrentVerifiedTarget(', ''),
  \ dotnet#method('get_DirectlyOver(', ''),
  \ dotnet#method('get_Captured(', ''),
  \ dotnet#method('Capture(', ''),
  \ dotnet#method('GetCapturedPlugInCollection(', ''),
  \ dotnet#method('Synchronize(', ''),
  \ dotnet#method('ChangeStylusCapture(', ''),
  \ dotnet#method('ChangeStylusOver(', ''),
  \ dotnet#method('FindTarget(', ''),
  \ dotnet#method('LocalHitTest(', ''),
  \ dotnet#method('GlobalHitTest(', ''),
  \ dotnet#method('get_TabletDevice(', ''),
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('get_Id(', ''),
  \ dotnet#method('GetStylusPoints(', ''),
  \ dotnet#method('get_StylusButtons(', ''),
  \ dotnet#method('GetPosition(', ''),
  \ dotnet#method('GetRawPosition(', ''),
  \ dotnet#method('GetMouseButtonState(', ''),
  \ dotnet#method('GetMouseScreenPosition(', ''),
  \ dotnet#method('GetElementTransform(', ''),
  \ dotnet#method('get_InAir(', ''),
  \ dotnet#method('get_Inverted(', ''),
  \ dotnet#method('get_InRange(', ''),
  \ dotnet#method('UpdateEventStylusPoints(', ''),
  \ dotnet#method('get_TapCount(', ''),
  \ dotnet#method('set_TapCount(', ''),
  \ dotnet#method('get_LastTapTime(', ''),
  \ dotnet#method('set_LastTapTime(', ''),
  \ dotnet#method('set_LastTapPoint(', ''),
  \ dotnet#method('get_LastTapBarrelDown(', ''),
  \ dotnet#method('set_LastTapBarrelDown(', ''),
  \ dotnet#method('get_DoubleTapDeltaX(', ''),
  \ dotnet#method('get_DoubleTapDeltaY(', ''),
  \ dotnet#method('get_DoubleTapDeltaTime(', ''),
  \ dotnet#method('UpdateState(', ''),
  \ dotnet#method('UpdateInRange(', ''),
  \ dotnet#method('UpdateStateForSystemGesture(', ''),
  \ dotnet#method('PlayBackCachedDownInputReport(', ''),
  \ dotnet#method('GetMousePresentationSource(', ''),
  \ dotnet#method('GetMouseActionsFromStylusEventAndPlaybackCachedDown(', ''),
  \ dotnet#method('set_LastMouseScreenPoint(', ''),
  \ dotnet#method('get_SeenDoubleTapGesture(', ''),
  \ dotnet#method('set_SeenDoubleTapGesture(', ''),
  \ dotnet#method('get_SeenHoldEnterGesture(', ''),
  \ dotnet#method('get_GestureWasFired(', ''),
  \ dotnet#method('get_SentMouseDown(', ''),
  \ dotnet#method('get_DetectedDrag(', ''),
  \ dotnet#method('get_LeftIsActiveMouseButton(', ''),
  \ dotnet#method('SetSawMouseButton1Down(', ''),
  \ dotnet#method('get_IgnoreStroke(', ''),
  \ dotnet#method('set_IgnoreStroke(', ''),
  \ dotnet#method('UpdateTouchActiveSource(', ''),
  \ dotnet#prop('Target', 'IInputElement'),
  \ dotnet#prop('ActiveSource', 'PresentationSource'),
  \ dotnet#prop('CriticalActiveSource', 'PresentationSource'),
  \ dotnet#prop('ActivePenContext', 'PenContext'),
  \ dotnet#prop('CurrentNonVerifiedTarget', 'StylusPlugInCollection'),
  \ dotnet#prop('CurrentVerifiedTarget', 'StylusPlugInCollection'),
  \ dotnet#prop('DirectlyOver', 'IInputElement'),
  \ dotnet#prop('Captured', 'IInputElement'),
  \ dotnet#prop('CapturedMode', 'CaptureMode'),
  \ dotnet#prop('TabletDevice', 'TabletDevice'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Id', 'int32'),
  \ dotnet#prop('StylusButtons', 'StylusButtonCollection'),
  \ dotnet#prop('RawStylusPoint', 'StylusPoint'),
  \ dotnet#prop('InAir', 'bool'),
  \ dotnet#prop('Inverted', 'bool'),
  \ dotnet#prop('InRange', 'bool'),
  \ dotnet#prop('TapCount', 'int32'),
  \ dotnet#prop('LastTapTime', 'int32'),
  \ dotnet#prop('LastTapPoint', 'Point'),
  \ dotnet#prop('LastTapBarrelDown', 'bool'),
  \ dotnet#prop('DoubleTapDeltaX', 'int32'),
  \ dotnet#prop('DoubleTapDeltaY', 'int32'),
  \ dotnet#prop('DoubleTapDeltaTime', 'int32'),
  \ dotnet#prop('LastMouseScreenPoint', 'Point'),
  \ dotnet#prop('SeenDoubleTapGesture', 'bool'),
  \ dotnet#prop('SeenHoldEnterGesture', 'bool'),
  \ dotnet#prop('GestureWasFired', 'bool'),
  \ dotnet#prop('SentMouseDown', 'bool'),
  \ dotnet#prop('DetectedDrag', 'bool'),
  \ dotnet#prop('LeftIsActiveMouseButton', 'bool'),
  \ dotnet#prop('IgnoreStroke', 'bool'),
  \ dotnet#prop('TouchDevice', 'StylusTouchDevice'),
  \ ])

call dotnet#class('StylusEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('StylusEventArgs(', ''),
  \ dotnet#method('get_StylusDevice(', ''),
  \ dotnet#method('GetPosition(', ''),
  \ dotnet#method('get_InAir(', ''),
  \ dotnet#method('get_Inverted(', ''),
  \ dotnet#method('GetStylusPoints(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#method('set_InputReport(', ''),
  \ dotnet#prop('StylusDevice', 'StylusDevice'),
  \ dotnet#prop('InAir', 'bool'),
  \ dotnet#prop('Inverted', 'bool'),
  \ dotnet#prop('InputReport', 'RawStylusInputReport'),
  \ ])

call dotnet#class('StylusEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('StylusEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('StylusSystemGestureEventArgs', 'StylusEventArgs', [ 
  \ dotnet#method('StylusSystemGestureEventArgs(', ''),
  \ dotnet#method('get_SystemGesture(', ''),
  \ dotnet#method('get_ButtonState(', ''),
  \ dotnet#method('get_GestureX(', ''),
  \ dotnet#method('get_GestureY(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('SystemGesture', 'SystemGesture'),
  \ dotnet#prop('ButtonState', 'int32'),
  \ dotnet#prop('GestureX', 'int32'),
  \ dotnet#prop('GestureY', 'int32'),
  \ ])

call dotnet#class('StylusSystemGestureEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('StylusSystemGestureEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('StylusButtonEventArgs', 'StylusEventArgs', [ 
  \ dotnet#method('StylusButtonEventArgs(', ''),
  \ dotnet#method('get_StylusButton(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('StylusButton', 'StylusButton'),
  \ ])

call dotnet#class('StylusButtonEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('StylusButtonEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('StylusDownEventArgs', 'StylusEventArgs', [ 
  \ dotnet#method('StylusDownEventArgs(', ''),
  \ dotnet#method('get_TapCount(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('TapCount', 'int32'),
  \ ])

call dotnet#class('StylusDownEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('StylusDownEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('StylusPoint', 'ValueType', [ 
  \ dotnet#field('_x', 'float64'),
  \ dotnet#field('_y', 'float64'),
  \ dotnet#field('_pressureFStylusPoint', 'float32'),
  \ dotnet#field('_additionalValues', 'int32[]'),
  \ dotnet#field('_stylusPointDescription', 'StylusPointDescription'),
  \ dotnet#method('StylusPoint(', ''),
  \ dotnet#method('get_X(', ''),
  \ dotnet#method('set_X(', ''),
  \ dotnet#method('get_Y(', ''),
  \ dotnet#method('set_Y(', ''),
  \ dotnet#method('get_PressureFStylusPoint(', ''),
  \ dotnet#method('set_PressureFStylusPoint(', ''),
  \ dotnet#method('get_Description(', ''),
  \ dotnet#method('set_Description(', ''),
  \ dotnet#method('HasProperty(', ''),
  \ dotnet#method('GetPropertyValue(', ''),
  \ dotnet#method('SetPropertyValue(', ''),
  \ dotnet#method('ToPoint(', ''),
  \ dotnet#method('op_Equality(', ''),
  \ dotnet#method('op_Inequality(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('GetAdditionalData(', ''),
  \ dotnet#method('GetUntruncatedPressureFStylusPoint(', ''),
  \ dotnet#method('GetPacketData(', ''),
  \ dotnet#method('get_HasDefaultPressure(', ''),
  \ dotnet#prop('X', 'float64'),
  \ dotnet#prop('Y', 'float64'),
  \ dotnet#prop('PressureFStylusPoint', 'float32'),
  \ dotnet#prop('Description', 'StylusPointDescription'),
  \ dotnet#prop('HasDefaultPressure', 'bool'),
  \ ])

call dotnet#class('StylusPointCollection', 'Collection', [ 
  \ dotnet#method('add_Changed(', ''),
  \ dotnet#method('remove_Changed(', ''),
  \ dotnet#method('add_CountGoingToZero(', ''),
  \ dotnet#method('remove_CountGoingToZero(', ''),
  \ dotnet#method('StylusPointCollection(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('get_Description(', ''),
  \ dotnet#method('ClearItems(', ''),
  \ dotnet#method('RemoveItem(', ''),
  \ dotnet#method('InsertItem(', ''),
  \ dotnet#method('SetItem(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('OnChanged(', ''),
  \ dotnet#method('Transform(', ''),
  \ dotnet#method('Reformat(', ''),
  \ dotnet#method('ToHiMetricArray(', ''),
  \ dotnet#method('ToISFReadyArrays(', ''),
  \ dotnet#event('Changed', 'EventHandler'),
  \ dotnet#event('CountGoingToZero', 'CancelEventHandler'),
  \ dotnet#prop('Description', 'StylusPointDescription'),
  \ ])

call dotnet#class('StylusPointDescription', 'Object', [ 
  \ dotnet#method('StylusPointDescription(', ''),
  \ dotnet#method('HasProperty(', ''),
  \ dotnet#method('get_PropertyCount(', ''),
  \ dotnet#method('GetPropertyInfo(', ''),
  \ dotnet#method('GetPropertyIndex(', ''),
  \ dotnet#method('GetStylusPointProperties(', ''),
  \ dotnet#method('GetStylusPointPropertyIds(', ''),
  \ dotnet#method('GetInputArrayLengthPerPoint(', ''),
  \ dotnet#method('GetExpectedAdditionalDataCount(', ''),
  \ dotnet#method('GetOutputArrayLengthPerPoint(', ''),
  \ dotnet#method('get_ButtonCount(', ''),
  \ dotnet#method('GetButtonBitPosition(', ''),
  \ dotnet#method('get_ContainsTruePressure(', ''),
  \ dotnet#method('get_OriginalPressureIndex(', ''),
  \ dotnet#method('AreCompatible(', ''),
  \ dotnet#method('GetCommonDescription(', ''),
  \ dotnet#method('IsSubsetOf(', ''),
  \ dotnet#prop('PropertyCount', 'int32'),
  \ dotnet#prop('ButtonCount', 'int32'),
  \ dotnet#prop('ContainsTruePressure', 'bool'),
  \ dotnet#prop('OriginalPressureIndex', 'int32'),
  \ ])

call dotnet#class('StylusPointProperties', 'Object', [ 
  \ dotnet#method('StylusPointProperties(', ''),
  \ ])

call dotnet#class('StylusPointProperty', 'Object', [ 
  \ dotnet#method('StylusPointProperty(', ''),
  \ dotnet#method('get_Id(', ''),
  \ dotnet#method('get_IsButton(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#prop('Id', 'Guid'),
  \ dotnet#prop('IsButton', 'bool'),
  \ ])

call dotnet#class('StylusPointPropertyInfo', 'StylusPointProperty', [ 
  \ dotnet#method('StylusPointPropertyInfo(', ''),
  \ dotnet#method('get_Minimum(', ''),
  \ dotnet#method('get_Maximum(', ''),
  \ dotnet#method('get_Resolution(', ''),
  \ dotnet#method('get_Unit(', ''),
  \ dotnet#method('AreCompatible(', ''),
  \ dotnet#prop('Minimum', 'int32'),
  \ dotnet#prop('Maximum', 'int32'),
  \ dotnet#prop('Resolution', 'float32'),
  \ dotnet#prop('Unit', 'StylusPointPropertyUnit'),
  \ ])

call dotnet#class('Tablet', 'Object', [ 
  \ dotnet#prop('CurrentTabletDevice', 'TabletDevice'),
  \ dotnet#prop('TabletDevices', 'TabletDeviceCollection'),
  \ ])

call dotnet#class('TabletDeviceCollection', 'Object', [ 
  \ dotnet#field('_tabletDeviceCollection', 'TabletDeviceCollection'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#method('TabletDeviceCollection(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Current', 'TabletDevice'),
  \ dotnet#method('ShouldEnableTablets(', ''),
  \ dotnet#method('UpdateTablets(', ''),
  \ dotnet#method('HandleTabletAdded(', ''),
  \ dotnet#method('HandleTabletRemoved(', ''),
  \ dotnet#method('UpdateStylusDevices(', ''),
  \ dotnet#method('DisposeTablets(', ''),
  \ dotnet#method('CreateContexts(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('Item(int32)', 'TabletDevice'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ ])

call dotnet#class('TabletDevice', 'InputDevice', [ 
  \ dotnet#method('TabletDevice(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('UpdateStylusDevices(', ''),
  \ dotnet#method('get_Id(', ''),
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('get_ProductId(', ''),
  \ dotnet#method('get_TabletHardwareCapabilities(', ''),
  \ dotnet#method('get_SupportedStylusPointProperties(', ''),
  \ dotnet#method('get_Type(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('get_StylusDevices(', ''),
  \ dotnet#method('CreateContext(', ''),
  \ dotnet#method('UpdateScreenMeasurements(', ''),
  \ dotnet#method('InvalidateSizeDeltas(', ''),
  \ dotnet#method('UpdateSizeDeltas(', ''),
  \ dotnet#method('GenerateStaticGesture(', ''),
  \ dotnet#method('GetLastTabletPoint(', ''),
  \ dotnet#prop('Target', 'IInputElement'),
  \ dotnet#prop('ActiveSource', 'PresentationSource'),
  \ dotnet#prop('Id', 'int32'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('ProductId', 'string'),
  \ dotnet#prop('TabletToScreen', 'Matrix'),
  \ dotnet#prop('TabletSize', 'Size'),
  \ dotnet#prop('ScreenSize', 'Size'),
  \ dotnet#prop('TabletHardwareCapabilities', 'TabletHardwareCapabilities'),
  \ dotnet#prop('SupportedStylusPointProperties', 'ReadOnlyCollection'),
  \ dotnet#prop('StylusPointDescription', 'StylusPointDescription'),
  \ dotnet#prop('Type', 'TabletDeviceType'),
  \ dotnet#prop('StylusDevices', 'StylusDeviceCollection'),
  \ dotnet#prop('PenThread', 'PenThread'),
  \ dotnet#prop('DoubleTapSize', 'Size'),
  \ dotnet#prop('CancelSize', 'Size'),
  \ ])

call dotnet#class('TextCompositionEventArgs', 'InputEventArgs', [ 
  \ dotnet#method('TextCompositionEventArgs(', ''),
  \ dotnet#method('get_TextComposition(', ''),
  \ dotnet#method('get_Text(', ''),
  \ dotnet#method('get_SystemText(', ''),
  \ dotnet#method('get_ControlText(', ''),
  \ dotnet#method('InvokeEventHandler(', ''),
  \ dotnet#prop('TextComposition', 'TextComposition'),
  \ dotnet#prop('Text', 'string'),
  \ dotnet#prop('SystemText', 'string'),
  \ dotnet#prop('ControlText', 'string'),
  \ ])

call dotnet#class('TextCompositionEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('TextCompositionEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('TextCompositionManager', 'DispatcherObject', [ 
  \ dotnet#method('DigitFromScanCode(', ''),
  \ dotnet#method('AddPreviewTextInputStartHandler(', ''),
  \ dotnet#method('RemovePreviewTextInputStartHandler(', ''),
  \ dotnet#method('AddTextInputStartHandler(', ''),
  \ dotnet#method('RemoveTextInputStartHandler(', ''),
  \ dotnet#method('AddPreviewTextInputUpdateHandler(', ''),
  \ dotnet#method('RemovePreviewTextInputUpdateHandler(', ''),
  \ dotnet#method('AddTextInputUpdateHandler(', ''),
  \ dotnet#method('RemoveTextInputUpdateHandler(', ''),
  \ dotnet#method('AddPreviewTextInputHandler(', ''),
  \ dotnet#method('RemovePreviewTextInputHandler(', ''),
  \ dotnet#method('AddTextInputHandler(', ''),
  \ dotnet#method('RemoveTextInputHandler(', ''),
  \ dotnet#method('TextCompositionManager(', ''),
  \ dotnet#method('StartComposition(', ''),
  \ dotnet#method('UpdateComposition(', ''),
  \ dotnet#method('CompleteComposition(', ''),
  \ ])

call dotnet#class('CommandConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertFromHelper(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('IsKnownType(', ''),
  \ dotnet#method('GetKnownControlCommand(', ''),
  \ dotnet#method('CommandConverter(', ''),
  \ ])

call dotnet#class('KeyboardNavigation', 'Object', [ 
  \ dotnet#method('KeyboardNavigation(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ dotnet#method('GetTabOnceActiveElement(', ''),
  \ dotnet#method('SetTabOnceActiveElement(', ''),
  \ dotnet#method('GetVisualRoot(', ''),
  \ dotnet#method('add_FocusChanged(', ''),
  \ dotnet#method('remove_FocusChanged(', ''),
  \ dotnet#method('NotifyFocusChanged(', ''),
  \ dotnet#method('SetTabIndex(', ''),
  \ dotnet#method('GetTabIndex(', ''),
  \ dotnet#method('SetIsTabStop(', ''),
  \ dotnet#method('GetIsTabStop(', ''),
  \ dotnet#method('SetTabNavigation(', ''),
  \ dotnet#method('GetTabNavigation(', ''),
  \ dotnet#method('SetControlTabNavigation(', ''),
  \ dotnet#method('GetControlTabNavigation(', ''),
  \ dotnet#method('SetDirectionalNavigation(', ''),
  \ dotnet#method('GetDirectionalNavigation(', ''),
  \ dotnet#method('SetAcceptsReturn(', ''),
  \ dotnet#method('GetAcceptsReturn(', ''),
  \ dotnet#method('GetParentUIElementFromContentElement(', ''),
  \ dotnet#method('HideFocusVisual(', ''),
  \ dotnet#method('IsKeyboardMostRecentInputDevice(', ''),
  \ dotnet#method('get_AlwaysShowFocusVisual(', ''),
  \ dotnet#method('set_AlwaysShowFocusVisual(', ''),
  \ dotnet#method('ShowFocusVisual(', ''),
  \ dotnet#method('UpdateFocusedElement(', ''),
  \ dotnet#method('UpdateActiveElement(', ''),
  \ dotnet#method('Navigate(', ''),
  \ dotnet#method('EnableKeyboardCues(', ''),
  \ dotnet#method('KeyToTraversalDirection(', ''),
  \ dotnet#method('PredictFocusedElement(', ''),
  \ dotnet#method('GetRectangle(', ''),
  \ dotnet#method('add_EnterMenuMode(', ''),
  \ dotnet#method('remove_EnterMenuMode(', ''),
  \ dotnet#method('add_FocusEnterMainFocusScope(', ''),
  \ dotnet#method('remove_FocusEnterMainFocusScope(', ''),
  \ dotnet#event('FocusChanged', 'KeyboardFocusChangedEventHandler'),
  \ dotnet#event('EnterMenuMode', 'KeyboardNavigation/EnterMenuModeEventHandler'),
  \ dotnet#event('FocusEnterMainFocusScope', 'EventHandler'),
  \ dotnet#prop('AlwaysShowFocusVisual', 'bool'),
  \ dotnet#prop('Current', 'KeyboardNavigation'),
  \ ])


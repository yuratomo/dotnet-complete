call dotnet#namespace('System.Windows.Threading')

call dotnet#class('DispatcherObject', 'Object', [ 
  \ dotnet#method('get_Dispatcher(', ')', 'Dispatcher'),
  \ dotnet#method('DetachFromDispatcher(', ')', 'void'),
  \ dotnet#method('CheckAccess(', ')', 'bool'),
  \ dotnet#method('VerifyAccess(', ')', 'void'),
  \ dotnet#method('DispatcherObject(', ')', 'void'),
  \ dotnet#prop('Dispatcher', 'Dispatcher'),
  \ ])

call dotnet#class('Dispatcher', 'Object', [ 
  \ dotnet#method('Dispatcher(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', ')', 'void'),
  \ dotnet#method('BeginInvoke(', 'class AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'void'),
  \ dotnet#field('_exitAllFrames', 'bool'),
  \ dotnet#field('_hasShutdownStarted', 'bool'),
  \ dotnet#field('_disableProcessingCount', 'int32'),
  \ dotnet#field('_dispatcherSynchronizationContext', 'DispatcherSynchronizationContext'),
  \ dotnet#field('_instanceLock', 'object'),
  \ dotnet#method('get_CurrentDispatcher(', ')', 'static'),
  \ dotnet#method('FromThread(', 'class Thread thread)', 'static Dispatcher'),
  \ dotnet#method('get_Thread(', ')', 'Thread'),
  \ dotnet#method('CheckAccess(', ')', 'bool'),
  \ dotnet#method('VerifyAccess(', ')', 'void'),
  \ dotnet#method('BeginInvokeShutdown(', 'DispatcherPriority priority)', 'void'),
  \ dotnet#method('InvokeShutdown(', ')', 'void'),
  \ dotnet#method('CriticalInvokeShutdown(', ')', 'void'),
  \ dotnet#method('get_HasShutdownStarted(', ')', 'bool'),
  \ dotnet#method('get_HasShutdownFinished(', ')', 'bool'),
  \ dotnet#method('add_ShutdownStarted(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_ShutdownStarted(', 'class EventHandler value)', 'void'),
  \ dotnet#method('add_ShutdownFinished(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_ShutdownFinished(', 'class EventHandler value)', 'void'),
  \ dotnet#method('Run(', ') linkcheck', 'static void'),
  \ dotnet#method('PushFrame(', 'class DispatcherFrame frame) linkcheck', 'static void'),
  \ dotnet#method('ExitAllFrames(', ')', 'static void'),
  \ dotnet#method('BeginInvoke(', 'DispatcherPriority priority, Delegate method)', 'DispatcherOperation'),
  \ dotnet#method('BeginInvoke(', 'DispatcherPriority priority, Delegate method, object arg)', 'DispatcherOperation'),
  \ dotnet#method('BeginInvoke(', 'DispatcherPriority priority, Delegate method, object arg, object[] args)', 'DispatcherOperation'),
  \ dotnet#method('BeginInvoke(', 'class Delegate method, object[] args)', 'DispatcherOperation'),
  \ dotnet#method('BeginInvoke(', 'class Delegate method, DispatcherPriority priority, object[] args)', 'DispatcherOperation'),
  \ dotnet#method('BeginInvokeImpl(', 'DispatcherPriority priority, Delegate method, object args, int32 numArgs)', 'DispatcherOperation'),
  \ dotnet#method('Invoke(', 'DispatcherPriority priority, Delegate method)', 'object'),
  \ dotnet#method('Invoke(', 'DispatcherPriority priority, Delegate method, object arg)', 'object'),
  \ dotnet#method('Invoke(', 'DispatcherPriority priority, Delegate method, object arg, object[] args)', 'object'),
  \ dotnet#method('Invoke(', 'DispatcherPriority priority, TimeSpan timeout, Delegate method)', 'object'),
  \ dotnet#method('Invoke(', 'DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg)', 'object'),
  \ dotnet#method('Invoke(', 'DispatcherPriority priority, TimeSpan timeout, Delegate method, object arg, object[] args)', 'object'),
  \ dotnet#method('Invoke(', 'class Delegate method, object[] args)', 'object'),
  \ dotnet#method('Invoke(', 'class Delegate method, DispatcherPriority priority, object[] args)', 'object'),
  \ dotnet#method('Invoke(', 'class Delegate method, TimeSpan timeout, object[] args)', 'object'),
  \ dotnet#method('Invoke(', 'class Delegate method, TimeSpan timeout, DispatcherPriority priority, object[] args)', 'object'),
  \ dotnet#method('InvokeImpl(', 'DispatcherPriority priority, TimeSpan timeout, Delegate method, object args, int32 numArgs)', 'object'),
  \ dotnet#method('DisableProcessing(', ')', 'DispatcherProcessingDisabled'),
  \ dotnet#method('ValidatePriority(', 'DispatcherPriority priority, string parameterName)', 'static void'),
  \ dotnet#method('get_Hooks(', ')', 'DispatcherHooks'),
  \ dotnet#method('add_UnhandledExceptionFilter(', 'class DispatcherUnhandledExceptionFilterEventHandler value)', 'void'),
  \ dotnet#method('remove_UnhandledExceptionFilter(', 'class DispatcherUnhandledExceptionFilterEventHandler value)', 'void'),
  \ dotnet#method('add_UnhandledException(', 'class DispatcherUnhandledExceptionEventHandler value)', 'void'),
  \ dotnet#method('remove_UnhandledException(', 'class DispatcherUnhandledExceptionEventHandler value)', 'void'),
  \ dotnet#method('get_Reserved0(', ')', 'object'),
  \ dotnet#method('set_Reserved0(', 'object value)', 'void'),
  \ dotnet#method('get_Reserved1(', ')', 'object'),
  \ dotnet#method('set_Reserved1(', 'object value)', 'void'),
  \ dotnet#method('get_Reserved2(', ')', 'object'),
  \ dotnet#method('set_Reserved2(', 'object value)', 'void'),
  \ dotnet#method('get_Reserved3(', ')', 'object'),
  \ dotnet#method('set_Reserved3(', 'object value)', 'void'),
  \ dotnet#method('get_Reserved4(', ')', 'object'),
  \ dotnet#method('set_Reserved4(', 'object value)', 'void'),
  \ dotnet#method('get_PtsCache(', ')', 'object'),
  \ dotnet#method('set_PtsCache(', 'object value)', 'void'),
  \ dotnet#method('get_InputMethod(', ')', 'object'),
  \ dotnet#method('set_InputMethod(', 'object value)', 'void'),
  \ dotnet#method('get_InputManager(', ')', 'object'),
  \ dotnet#method('set_InputManager(', 'object value)', 'void'),
  \ dotnet#method('SetPriority(', 'class DispatcherOperation operation, DispatcherPriority priority)', 'bool'),
  \ dotnet#method('Abort(', 'class DispatcherOperation operation)', 'bool'),
  \ dotnet#method('set_IsTSFMessagePumpEnabled(', 'bool value)', 'void'),
  \ dotnet#method('CriticalRequestProcessing(', 'bool force)', 'bool'),
  \ dotnet#method('AddTimer(', 'class DispatcherTimer timer)', 'void'),
  \ dotnet#method('RemoveTimer(', 'class DispatcherTimer timer)', 'void'),
  \ dotnet#method('UpdateWin32Timer(', ')', 'void'),
  \ dotnet#method('WrappedInvoke(', 'class Delegate callback, object args, int32 numArgs)', 'object'),
  \ dotnet#method('WrappedInvoke(', 'class Delegate callback, object args, int32 numArgs, Delegate catchHandler)', 'object'),
  \ dotnet#method('Dispatcher(', ')', 'static void .'),
  \ dotnet#method('Dispatcher(', ')', 'void'),
  \ dotnet#event('ShutdownStarted', 'EventHandler'),
  \ dotnet#event('ShutdownFinished', 'EventHandler'),
  \ dotnet#event('UnhandledExceptionFilter', 'DispatcherUnhandledExceptionFilterEventHandler'),
  \ dotnet#event('UnhandledException', 'DispatcherUnhandledExceptionEventHandler'),
  \ dotnet#prop('CurrentDispatcher', 'Dispatcher'),
  \ dotnet#prop('Thread', 'Thread'),
  \ dotnet#prop('HasShutdownStarted', 'bool'),
  \ dotnet#prop('HasShutdownFinished', 'bool'),
  \ dotnet#prop('Hooks', 'DispatcherHooks'),
  \ dotnet#prop('Reserved0', 'object'),
  \ dotnet#prop('Reserved1', 'object'),
  \ dotnet#prop('Reserved2', 'object'),
  \ dotnet#prop('Reserved3', 'object'),
  \ dotnet#prop('Reserved4', 'object'),
  \ dotnet#prop('PtsCache', 'object'),
  \ dotnet#prop('InputMethod', 'object'),
  \ dotnet#prop('InputManager', 'object'),
  \ dotnet#prop('IsTSFMessagePumpEnabled', 'bool'),
  \ ])

call dotnet#class('DispatcherSynchronizationContext', 'SynchronizationContext', [ 
  \ dotnet#field('_dispatcher', 'Dispatcher'),
  \ dotnet#method('DispatcherSynchronizationContext(', ')', 'void'),
  \ dotnet#method('DispatcherSynchronizationContext(', 'class Dispatcher dispatcher)', 'void'),
  \ dotnet#method('Send(', 'class SendOrPostCallback d, object state)', 'void'),
  \ dotnet#method('Post(', 'class SendOrPostCallback d, object state)', 'void'),
  \ dotnet#method('Wait(', 'native int[] waitHandles, bool waitAll, int32 millisecondsTimeout)', 'int32'),
  \ dotnet#method('CreateCopy(', ')', 'SynchronizationContext'),
  \ ])

call dotnet#class('DispatcherHookEventArgs', 'EventArgs', [ 
  \ dotnet#method('DispatcherHookEventArgs(', 'class DispatcherOperation operation)', 'void'),
  \ dotnet#method('get_Dispatcher(', ')', 'Dispatcher'),
  \ dotnet#method('get_Operation(', ')', 'DispatcherOperation'),
  \ dotnet#prop('Dispatcher', 'Dispatcher'),
  \ dotnet#prop('Operation', 'DispatcherOperation'),
  \ ])

call dotnet#class('DispatcherHookEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('DispatcherHookEventHandler(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', 'object sender, DispatcherHookEventArgs e)', 'void'),
  \ dotnet#method('BeginInvoke(', 'object sender, DispatcherHookEventArgs e, AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'void'),
  \ ])

call dotnet#class('DispatcherHooks', 'Object', [ 
  \ dotnet#method('add_DispatcherInactive(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_DispatcherInactive(', 'class EventHandler value)', 'void'),
  \ dotnet#method('add_OperationPosted(', 'class DispatcherHookEventHandler value)', 'void'),
  \ dotnet#method('remove_OperationPosted(', 'class DispatcherHookEventHandler value)', 'void'),
  \ dotnet#method('add_OperationCompleted(', 'class DispatcherHookEventHandler value)', 'void'),
  \ dotnet#method('remove_OperationCompleted(', 'class DispatcherHookEventHandler value)', 'void'),
  \ dotnet#method('add_OperationPriorityChanged(', 'class DispatcherHookEventHandler value)', 'void'),
  \ dotnet#method('remove_OperationPriorityChanged(', 'class DispatcherHookEventHandler value)', 'void'),
  \ dotnet#method('add_OperationAborted(', 'class DispatcherHookEventHandler value)', 'void'),
  \ dotnet#method('remove_OperationAborted(', 'class DispatcherHookEventHandler value)', 'void'),
  \ dotnet#method('DispatcherHooks(', ')', 'void'),
  \ dotnet#method('RaiseDispatcherInactive(', 'class Dispatcher dispatcher)', 'void'),
  \ dotnet#method('RaiseOperationPosted(', 'class Dispatcher dispatcher, DispatcherOperation operation)', 'void'),
  \ dotnet#method('RaiseOperationCompleted(', 'class Dispatcher dispatcher, DispatcherOperation operation)', 'void'),
  \ dotnet#method('RaiseOperationPriorityChanged(', 'class Dispatcher dispatcher, DispatcherOperation operation)', 'void'),
  \ dotnet#method('RaiseOperationAborted(', 'class Dispatcher dispatcher, DispatcherOperation operation)', 'void'),
  \ dotnet#event('DispatcherInactive', 'EventHandler'),
  \ dotnet#event('OperationPosted', 'DispatcherHookEventHandler'),
  \ dotnet#event('OperationCompleted', 'DispatcherHookEventHandler'),
  \ dotnet#event('OperationPriorityChanged', 'DispatcherHookEventHandler'),
  \ dotnet#event('OperationAborted', 'DispatcherHookEventHandler'),
  \ ])

call dotnet#class('DispatcherProcessingDisabled', 'ValueType', [ 
  \ dotnet#field('_dispatcher', 'Dispatcher'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Equals(', 'object obj)', 'bool'),
  \ dotnet#method('GetHashCode(', ')', 'int32'),
  \ dotnet#method('op_Equality(', 'DispatcherProcessingDisabled left, DispatcherProcessingDisabled right)', 'static bool'),
  \ dotnet#method('op_Inequality(', 'DispatcherProcessingDisabled left, DispatcherProcessingDisabled right)', 'static bool'),
  \ ])

call dotnet#class('DispatcherFrame', 'DispatcherObject', [ 
  \ dotnet#method('DispatcherFrame(', ')', 'void'),
  \ dotnet#method('DispatcherFrame(', 'bool exitWhenRequested)', 'void'),
  \ dotnet#method('get_Continue(', ')', 'bool'),
  \ dotnet#method('set_Continue(', 'bool value)', 'void'),
  \ dotnet#method('DispatcherFrame(', ')', 'static void .'),
  \ dotnet#prop('Continue', 'bool'),
  \ ])

call dotnet#class('DispatcherOperation', 'Object', [ 
  \ dotnet#field('_status', 'DispatcherOperationStatus'),
  \ dotnet#field('_item', 'PriorityItem'),
  \ dotnet#method('DispatcherOperation(', 'class Dispatcher dispatcher, Delegate method, DispatcherPriority priority, object args, int32 numArgs)', 'void'),
  \ dotnet#method('DispatcherOperation(', 'class Dispatcher dispatcher, Delegate method, DispatcherPriority priority)', 'void'),
  \ dotnet#method('get_Dispatcher(', ')', 'Dispatcher'),
  \ dotnet#method('get_Priority(', ')', 'DispatcherPriority'),
  \ dotnet#method('set_Priority(', 'DispatcherPriority value)', 'void'),
  \ dotnet#method('get_Status(', ')', 'DispatcherOperationStatus'),
  \ dotnet#method('Wait(', ')', 'DispatcherOperationStatus'),
  \ dotnet#method('Wait(', 'TimeSpan timeout)', 'DispatcherOperationStatus'),
  \ dotnet#method('Abort(', ')', 'bool'),
  \ dotnet#method('get_Name(', ')', 'string'),
  \ dotnet#method('get_Result(', ')', 'object'),
  \ dotnet#method('add_Aborted(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_Aborted(', 'class EventHandler value)', 'void'),
  \ dotnet#method('add_Completed(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_Completed(', 'class EventHandler value)', 'void'),
  \ dotnet#method('Invoke(', ')', 'object'),
  \ dotnet#method('DispatcherOperation(', ')', 'static void .'),
  \ dotnet#event('Aborted', 'EventHandler'),
  \ dotnet#event('Completed', 'EventHandler'),
  \ dotnet#prop('Dispatcher', 'Dispatcher'),
  \ dotnet#prop('Priority', 'DispatcherPriority'),
  \ dotnet#prop('Status', 'DispatcherOperationStatus'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Result', 'object'),
  \ ])

call dotnet#class('DispatcherOperationCallback', 'MulticastDelegate', [ 
  \ dotnet#method('DispatcherOperationCallback(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', 'object arg)', 'object'),
  \ dotnet#method('BeginInvoke(', 'object arg, AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'object'),
  \ ])

call dotnet#class('DispatcherEventArgs', 'EventArgs', [ 
  \ dotnet#method('get_Dispatcher(', ')', 'Dispatcher'),
  \ dotnet#method('DispatcherEventArgs(', 'class Dispatcher dispatcher)', 'void'),
  \ dotnet#prop('Dispatcher', 'Dispatcher'),
  \ ])

call dotnet#class('DispatcherUnhandledExceptionEventArgs', 'DispatcherEventArgs', [ 
  \ dotnet#method('DispatcherUnhandledExceptionEventArgs(', 'class Dispatcher dispatcher)', 'void'),
  \ dotnet#method('get_Exception(', ')', 'Exception'),
  \ dotnet#method('get_Handled(', ')', 'bool'),
  \ dotnet#method('set_Handled(', 'bool value)', 'void'),
  \ dotnet#method('Initialize(', 'class Exception exception, bool handled)', 'void'),
  \ dotnet#prop('Exception', 'Exception'),
  \ dotnet#prop('Handled', 'bool'),
  \ ])

call dotnet#class('DispatcherUnhandledExceptionEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('DispatcherUnhandledExceptionEventHandler(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', 'object sender, DispatcherUnhandledExceptionEventArgs e)', 'void'),
  \ dotnet#method('BeginInvoke(', 'object sender, DispatcherUnhandledExceptionEventArgs e, AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'void'),
  \ ])

call dotnet#class('DispatcherUnhandledExceptionFilterEventArgs', 'DispatcherEventArgs', [ 
  \ dotnet#method('DispatcherUnhandledExceptionFilterEventArgs(', 'class Dispatcher dispatcher)', 'void'),
  \ dotnet#method('get_Exception(', ')', 'Exception'),
  \ dotnet#method('get_RequestCatch(', ')', 'bool'),
  \ dotnet#method('set_RequestCatch(', 'bool value)', 'void'),
  \ dotnet#method('Initialize(', 'class Exception exception, bool requestCatch)', 'void'),
  \ dotnet#prop('Exception', 'Exception'),
  \ dotnet#prop('RequestCatch', 'bool'),
  \ ])

call dotnet#class('DispatcherUnhandledExceptionFilterEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('DispatcherUnhandledExceptionFilterEventHandler(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', 'object sender, DispatcherUnhandledExceptionFilterEventArgs e)', 'void'),
  \ dotnet#method('BeginInvoke(', 'object sender, DispatcherUnhandledExceptionFilterEventArgs e, AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'void'),
  \ ])

call dotnet#class('DispatcherTimer', 'Object', [ 
  \ dotnet#field('_dueTimeInTicks', 'int32'),
  \ dotnet#method('DispatcherTimer(', ')', 'void'),
  \ dotnet#method('DispatcherTimer(', 'DispatcherPriority priority)', 'void'),
  \ dotnet#method('DispatcherTimer(', 'DispatcherPriority priority, Dispatcher dispatcher)', 'void'),
  \ dotnet#method('DispatcherTimer(', 'TimeSpan interval, DispatcherPriority priority, EventHandler callback, Dispatcher dispatcher)', 'void'),
  \ dotnet#method('get_Dispatcher(', ')', 'Dispatcher'),
  \ dotnet#method('get_IsEnabled(', ')', 'bool'),
  \ dotnet#method('set_IsEnabled(', 'bool value)', 'void'),
  \ dotnet#method('get_Interval(', ')', 'TimeSpan'),
  \ dotnet#method('set_Interval(', 'TimeSpan value)', 'void'),
  \ dotnet#method('Start(', ')', 'void'),
  \ dotnet#method('Stop(', ')', 'void'),
  \ dotnet#method('add_Tick(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_Tick(', 'class EventHandler value)', 'void'),
  \ dotnet#method('get_Tag(', ')', 'object'),
  \ dotnet#method('set_Tag(', 'object value)', 'void'),
  \ dotnet#method('Promote(', ')', 'void'),
  \ dotnet#event('Tick', 'EventHandler'),
  \ dotnet#prop('Dispatcher', 'Dispatcher'),
  \ dotnet#prop('IsEnabled', 'bool'),
  \ dotnet#prop('Interval', 'TimeSpan'),
  \ dotnet#prop('Tag', 'object'),
  \ ])


call dotnet#namespace('System.Windows.Shapes')

call dotnet#class('Shape', 'FrameworkElement', [ 
  \ dotnet#method('Shape(', ')', 'void'),
  \ dotnet#method('get_Stretch(', ')', 'Stretch'),
  \ dotnet#method('set_Stretch(', 'Stretch value)', 'void'),
  \ dotnet#method('get_RenderedGeometry(', ')', ''),
  \ dotnet#method('get_GeometryTransform(', ')', ''),
  \ dotnet#method('get_Fill(', ')', 'Brush'),
  \ dotnet#method('set_Fill(', 'class Brush value)', 'void'),
  \ dotnet#method('get_Stroke(', ')', 'Brush'),
  \ dotnet#method('set_Stroke(', 'class Brush value)', 'void'),
  \ dotnet#method('get_StrokeThickness(', ')', 'float64'),
  \ dotnet#method('set_StrokeThickness(', 'float64 value)', 'void'),
  \ dotnet#method('get_StrokeStartLineCap(', ')', 'PenLineCap'),
  \ dotnet#method('set_StrokeStartLineCap(', 'PenLineCap value)', 'void'),
  \ dotnet#method('get_StrokeEndLineCap(', ')', 'PenLineCap'),
  \ dotnet#method('set_StrokeEndLineCap(', 'PenLineCap value)', 'void'),
  \ dotnet#method('get_StrokeDashCap(', ')', 'PenLineCap'),
  \ dotnet#method('set_StrokeDashCap(', 'PenLineCap value)', 'void'),
  \ dotnet#method('get_StrokeLineJoin(', ')', 'PenLineJoin'),
  \ dotnet#method('set_StrokeLineJoin(', 'PenLineJoin value)', 'void'),
  \ dotnet#method('get_StrokeMiterLimit(', ')', 'float64'),
  \ dotnet#method('set_StrokeMiterLimit(', 'float64 value)', 'void'),
  \ dotnet#method('get_StrokeDashOffset(', ')', 'float64'),
  \ dotnet#method('set_StrokeDashOffset(', 'float64 value)', 'void'),
  \ dotnet#method('get_StrokeDashArray(', ')', 'DoubleCollection'),
  \ dotnet#method('set_StrokeDashArray(', 'class DoubleCollection value)', 'void'),
  \ dotnet#method('MeasureOverride(', 'Size constraint)', 'Size'),
  \ dotnet#method('ArrangeOverride(', 'Size finalSize)', 'Size'),
  \ dotnet#method('OnRender(', 'class DrawingContext drawingContext)', 'void'),
  \ dotnet#method('get_DefiningGeometry(', ')', 'abstract'),
  \ dotnet#method('SizeIsInvalidOrEmpty(', 'Size size)', 'bool'),
  \ dotnet#method('get_IsPenNoOp(', ')', 'bool'),
  \ dotnet#method('GetStrokeThickness(', ')', 'float64'),
  \ dotnet#method('GetPen(', ')', 'Pen'),
  \ dotnet#method('IsDoubleFiniteNonNegative(', 'object o)', 'static bool'),
  \ dotnet#method('IsDoubleFinite(', 'object o)', 'static bool'),
  \ dotnet#method('IsDoubleFiniteOrNaN(', 'object o)', 'static bool'),
  \ dotnet#method('CacheDefiningGeometry(', ')', 'strict void'),
  \ dotnet#method('GetStretchedRenderSize(', 'Stretch mode, float64 strokeThickness, Size availableSize, Rect geometryBounds)', 'Size'),
  \ dotnet#method('GetStretchedRenderSizeAndSetStretchMatrix(', 'Stretch mode, float64 strokeThickness, Size availableSize, Rect geometryBounds)', 'Size'),
  \ dotnet#method('ResetRenderedGeometry(', ')', 'void'),
  \ dotnet#method('GetStretchMetrics(', 'Stretch mode, float64 strokeThickness, Size availableSize, Rect geometryBounds, [out] float64& xScale, [out] float64& yScale, [out] float64& dX, [out] float64& dY, [out] Size& stretchedSize)', 'void'),
  \ dotnet#method('GetNaturalSize(', ')', 'strict'),
  \ dotnet#method('GetDefiningGeometryBounds(', ')', 'strict'),
  \ dotnet#method('EnsureRenderedGeometry(', ')', 'void'),
  \ dotnet#method('Shape(', ')', 'static void .'),
  \ dotnet#prop('Stretch', 'Stretch'),
  \ dotnet#prop('RenderedGeometry', 'Geometry'),
  \ dotnet#prop('GeometryTransform', 'Transform'),
  \ dotnet#prop('Fill', 'Brush'),
  \ dotnet#prop('Stroke', 'Brush'),
  \ dotnet#prop('StrokeThickness', 'float64'),
  \ dotnet#prop('StrokeStartLineCap', 'PenLineCap'),
  \ dotnet#prop('StrokeEndLineCap', 'PenLineCap'),
  \ dotnet#prop('StrokeDashCap', 'PenLineCap'),
  \ dotnet#prop('StrokeLineJoin', 'PenLineJoin'),
  \ dotnet#prop('StrokeMiterLimit', 'float64'),
  \ dotnet#prop('StrokeDashOffset', 'float64'),
  \ dotnet#prop('StrokeDashArray', 'DoubleCollection'),
  \ dotnet#prop('DefiningGeometry', 'Geometry'),
  \ dotnet#prop('IsPenNoOp', 'bool'),
  \ ])

call dotnet#class('Ellipse', 'Shape', [ 
  \ dotnet#method('Ellipse(', ')', 'void'),
  \ dotnet#method('get_RenderedGeometry(', ')', ''),
  \ dotnet#method('get_GeometryTransform(', ')', ''),
  \ dotnet#method('MeasureOverride(', 'Size constraint)', 'Size'),
  \ dotnet#method('ArrangeOverride(', 'Size finalSize)', 'Size'),
  \ dotnet#method('get_DefiningGeometry(', ')', 'family'),
  \ dotnet#method('OnRender(', 'class DrawingContext drawingContext)', 'void'),
  \ dotnet#method('CacheDefiningGeometry(', ')', 'strict void'),
  \ dotnet#method('GetNaturalSize(', ')', 'strict'),
  \ dotnet#method('GetDefiningGeometryBounds(', ')', 'strict'),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ')', 'strict int32'),
  \ dotnet#method('Ellipse(', ')', 'static void .'),
  \ dotnet#prop('RenderedGeometry', 'Geometry'),
  \ dotnet#prop('GeometryTransform', 'Transform'),
  \ dotnet#prop('DefiningGeometry', 'Geometry'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('Line', 'Shape', [ 
  \ dotnet#method('Line(', ')', 'void'),
  \ dotnet#method('get_X1(', ')', 'float64'),
  \ dotnet#method('set_X1(', 'float64 value)', 'void'),
  \ dotnet#method('get_Y1(', ')', 'float64'),
  \ dotnet#method('set_Y1(', 'float64 value)', 'void'),
  \ dotnet#method('get_X2(', ')', 'float64'),
  \ dotnet#method('set_X2(', 'float64 value)', 'void'),
  \ dotnet#method('get_Y2(', ')', 'float64'),
  \ dotnet#method('set_Y2(', 'float64 value)', 'void'),
  \ dotnet#method('get_DefiningGeometry(', ')', 'family'),
  \ dotnet#method('CacheDefiningGeometry(', ')', 'strict void'),
  \ dotnet#method('Line(', ')', 'static void .'),
  \ dotnet#prop('X1', 'float64'),
  \ dotnet#prop('Y1', 'float64'),
  \ dotnet#prop('X2', 'float64'),
  \ dotnet#prop('Y2', 'float64'),
  \ dotnet#prop('DefiningGeometry', 'Geometry'),
  \ ])

call dotnet#class('Path', 'Shape', [ 
  \ dotnet#method('Path(', ')', 'void'),
  \ dotnet#method('get_Data(', ')', 'Geometry'),
  \ dotnet#method('set_Data(', 'class Geometry value)', 'void'),
  \ dotnet#method('get_DefiningGeometry(', ')', 'family'),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ')', 'strict int32'),
  \ dotnet#method('Path(', ')', 'static void .'),
  \ dotnet#prop('Data', 'Geometry'),
  \ dotnet#prop('DefiningGeometry', 'Geometry'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('Polygon', 'Shape', [ 
  \ dotnet#method('Polygon(', ')', 'void'),
  \ dotnet#method('get_Points(', ')', 'PointCollection'),
  \ dotnet#method('set_Points(', 'class PointCollection value)', 'void'),
  \ dotnet#method('get_FillRule(', ')', 'FillRule'),
  \ dotnet#method('set_FillRule(', 'FillRule value)', 'void'),
  \ dotnet#method('get_DefiningGeometry(', ')', 'family'),
  \ dotnet#method('CacheDefiningGeometry(', ')', 'strict void'),
  \ dotnet#method('Polygon(', ')', 'static void .'),
  \ dotnet#prop('Points', 'PointCollection'),
  \ dotnet#prop('FillRule', 'FillRule'),
  \ dotnet#prop('DefiningGeometry', 'Geometry'),
  \ ])

call dotnet#class('Polyline', 'Shape', [ 
  \ dotnet#method('Polyline(', ')', 'void'),
  \ dotnet#method('get_Points(', ')', 'PointCollection'),
  \ dotnet#method('set_Points(', 'class PointCollection value)', 'void'),
  \ dotnet#method('get_FillRule(', ')', 'FillRule'),
  \ dotnet#method('set_FillRule(', 'FillRule value)', 'void'),
  \ dotnet#method('get_DefiningGeometry(', ')', 'family'),
  \ dotnet#method('CacheDefiningGeometry(', ')', 'strict void'),
  \ dotnet#method('Polyline(', ')', 'static void .'),
  \ dotnet#prop('Points', 'PointCollection'),
  \ dotnet#prop('FillRule', 'FillRule'),
  \ dotnet#prop('DefiningGeometry', 'Geometry'),
  \ ])

call dotnet#class('Rectangle', 'Shape', [ 
  \ dotnet#method('Rectangle(', ')', 'void'),
  \ dotnet#method('get_RadiusX(', ')', 'float64'),
  \ dotnet#method('set_RadiusX(', 'float64 value)', 'void'),
  \ dotnet#method('get_RadiusY(', ')', 'float64'),
  \ dotnet#method('set_RadiusY(', 'float64 value)', 'void'),
  \ dotnet#method('get_RenderedGeometry(', ')', ''),
  \ dotnet#method('get_GeometryTransform(', ')', ''),
  \ dotnet#method('MeasureOverride(', 'Size constraint)', 'Size'),
  \ dotnet#method('ArrangeOverride(', 'Size finalSize)', 'Size'),
  \ dotnet#method('get_DefiningGeometry(', ')', 'family'),
  \ dotnet#method('OnRender(', 'class DrawingContext drawingContext)', 'void'),
  \ dotnet#method('CacheDefiningGeometry(', ')', 'strict void'),
  \ dotnet#method('GetNaturalSize(', ')', 'strict'),
  \ dotnet#method('GetDefiningGeometryBounds(', ')', 'strict'),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ')', 'strict int32'),
  \ dotnet#method('Rectangle(', ')', 'static void .'),
  \ dotnet#prop('RadiusX', 'float64'),
  \ dotnet#prop('RadiusY', 'float64'),
  \ dotnet#prop('RenderedGeometry', 'Geometry'),
  \ dotnet#prop('GeometryTransform', 'Transform'),
  \ dotnet#prop('DefiningGeometry', 'Geometry'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])



call dotnet#class('Comparer', 'Object', [ 
  \ dotnet#method('Compare(', ''),
  \ dotnet#method('Comparer`1(', ''),
  \ dotnet#prop('Default', 'Comparer'),
  \ ])

call dotnet#class('Dictionary', 'Object', [ 
  \ dotnet#field('dictionary', 'Dictionary'),
  \ dotnet#field('version', 'int32'),
  \ dotnet#field('index', 'int32'),
  \ dotnet#field('current', 'KeyValuePair'),
  \ dotnet#field('getEnumeratorRetType', 'int32'),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('get_Value(', ''),
  \ dotnet#prop('Current', 'KeyValuePair'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Entry', 'DictionaryEntry'),
  \ dotnet#prop('Key', 'object'),
  \ dotnet#prop('Value', 'object'),
  \ dotnet#field('dictionary', 'Dictionary'),
  \ dotnet#field('index', 'int32'),
  \ dotnet#field('version', 'int32'),
  \ dotnet#field('currentKey', '!TKey'),
  \ dotnet#prop('Current', '!TKey'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#field('dictionary', 'Dictionary'),
  \ dotnet#field('index', 'int32'),
  \ dotnet#field('version', 'int32'),
  \ dotnet#field('currentValue', '!TValue'),
  \ dotnet#prop('Current', '!TValue'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#method('Dictionary`2(', ''),
  \ dotnet#method('get_Comparer(', ''),
  \ dotnet#method('get_Keys(', ''),
  \ dotnet#method('get_Values(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('ContainsKey(', ''),
  \ dotnet#method('ContainsValue(', ''),
  \ dotnet#method('GetObjectData(', ''),
  \ dotnet#method('OnDeserialization(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('TryGetValue(', ''),
  \ dotnet#method('GetValueOrDefault(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#prop('Comparer', 'IEqualityComparer'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('Keys', 'Dictionary'),
  \ dotnet#prop('Keys', 'ICollection'),
  \ dotnet#prop('Values', 'Dictionary'),
  \ dotnet#prop('Values', 'ICollection'),
  \ dotnet#prop('Item(!TKey)', '!TValue'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Keys', 'ICollection'),
  \ dotnet#prop('Values', 'ICollection'),
  \ dotnet#prop('Item(object)', 'object'),
  \ ])

call dotnet#class('EqualityComparer', 'Object', [ 
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('LastIndexOf(', ''),
  \ dotnet#method('EqualityComparer`1(', ''),
  \ dotnet#prop('Default', 'EqualityComparer'),
  \ ])

call dotnet#class('KeyNotFoundException', 'SystemException', [ 
  \ dotnet#method('KeyNotFoundException(', ''),
  \ ])

call dotnet#class('KeyValuePair', 'ValueType', [ 
  \ dotnet#field('key', '!TKey'),
  \ dotnet#field('value', '!TValue'),
  \ dotnet#method('KeyValuePair`2(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('get_Value(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#prop('Key', '!TKey'),
  \ dotnet#prop('Value', '!TValue'),
  \ ])

call dotnet#class('List', 'Object', [ 
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Item(int32)', '!T'),
  \ dotnet#field('list', 'List'),
  \ dotnet#field('index', 'int32'),
  \ dotnet#field('version', 'int32'),
  \ dotnet#field('current', '!T'),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#prop('Current', '!T'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('List`1(', ''),
  \ dotnet#method('get_Capacity(', ''),
  \ dotnet#method('set_Capacity(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('AddRange(', ''),
  \ dotnet#method('AsReadOnly(', ''),
  \ dotnet#method('BinarySearch(', ''),
  \ dotnet#method('ConvertAll(', ''),
  \ dotnet#method('Exists(', ''),
  \ dotnet#method('Find(', ''),
  \ dotnet#method('FindAll(', ''),
  \ dotnet#method('FindIndex(', ''),
  \ dotnet#method('FindLast(', ''),
  \ dotnet#method('FindLastIndex(', ''),
  \ dotnet#method('ForEach(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('GetRange(', ''),
  \ dotnet#method('InsertRange(', ''),
  \ dotnet#method('LastIndexOf(', ''),
  \ dotnet#method('RemoveAll(', ''),
  \ dotnet#method('RemoveRange(', ''),
  \ dotnet#method('Reverse(', ''),
  \ dotnet#method('Sort(', ''),
  \ dotnet#method('ToArray(', ''),
  \ dotnet#method('TrimExcess(', ''),
  \ dotnet#method('TrueForAll(', ''),
  \ dotnet#method('Synchronized(', ''),
  \ dotnet#prop('Capacity', 'int32'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Item(int32)', '!T'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ ])

call dotnet#class('HashSet', 'Object', [ 
  \ dotnet#field('set', 'HashSet'),
  \ dotnet#field('index', 'int32'),
  \ dotnet#field('version', 'int32'),
  \ dotnet#field('current', '!T'),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#prop('Current', '!T'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('HashSet`1(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('GetObjectData(', ''),
  \ dotnet#method('OnDeserialization(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('UnionWith(', ''),
  \ dotnet#method('IntersectWith(', ''),
  \ dotnet#method('ExceptWith(', ''),
  \ dotnet#method('SymmetricExceptWith(', ''),
  \ dotnet#method('IsSubsetOf(', ''),
  \ dotnet#method('IsProperSubsetOf(', ''),
  \ dotnet#method('IsSupersetOf(', ''),
  \ dotnet#method('IsProperSupersetOf(', ''),
  \ dotnet#method('Overlaps(', ''),
  \ dotnet#method('SetEquals(', ''),
  \ dotnet#method('RemoveWhere(', ''),
  \ dotnet#method('get_Comparer(', ''),
  \ dotnet#method('TrimExcess(', ''),
  \ dotnet#method('CreateSetComparer(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Comparer', 'IEqualityComparer'),
  \ ])

call dotnet#class('LinkedList', 'Object', [ 
  \ dotnet#field('list', 'LinkedList'),
  \ dotnet#field('node', 'LinkedListNode'),
  \ dotnet#field('version', 'int32'),
  \ dotnet#field('current', '!T'),
  \ dotnet#field('index', 'int32'),
  \ dotnet#field('siInfo', 'SerializationInfo'),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('GetObjectData(', ''),
  \ dotnet#method('OnDeserialization(', ''),
  \ dotnet#prop('Current', '!T'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('LinkedList`1(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_First(', ''),
  \ dotnet#method('get_Last(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('AddAfter(', ''),
  \ dotnet#method('AddBefore(', ''),
  \ dotnet#method('AddFirst(', ''),
  \ dotnet#method('AddLast(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Find(', ''),
  \ dotnet#method('FindLast(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveFirst(', ''),
  \ dotnet#method('RemoveLast(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('First', 'LinkedListNode'),
  \ dotnet#prop('Last', 'LinkedListNode'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ ])

call dotnet#class('LinkedListNode', 'Object', [ 
  \ dotnet#method('LinkedListNode`1(', ''),
  \ dotnet#method('get_List(', ''),
  \ dotnet#method('get_Next(', ''),
  \ dotnet#method('get_Previous(', ''),
  \ dotnet#method('get_Value(', ''),
  \ dotnet#method('set_Value(', ''),
  \ dotnet#prop('List', 'LinkedList'),
  \ dotnet#prop('Next', 'LinkedListNode'),
  \ dotnet#prop('Previous', 'LinkedListNode'),
  \ dotnet#prop('Value', '!T'),
  \ ])

call dotnet#class('Queue', 'Object', [ 
  \ dotnet#field('_q', 'Queue'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#field('_version', 'int32'),
  \ dotnet#field('_currentElement', '!T'),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#prop('Current', '!T'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('Queue`1(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Enqueue(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('Dequeue(', ''),
  \ dotnet#method('Peek(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('ToArray(', ''),
  \ dotnet#method('TrimExcess(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ ])

call dotnet#class('SortedList', 'Object', [ 
  \ dotnet#method('SortedList`2(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('get_Capacity(', ''),
  \ dotnet#method('set_Capacity(', ''),
  \ dotnet#method('get_Comparer(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_Keys(', ''),
  \ dotnet#method('get_Values(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('ContainsKey(', ''),
  \ dotnet#method('ContainsValue(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('IndexOfKey(', ''),
  \ dotnet#method('IndexOfValue(', ''),
  \ dotnet#method('TryGetValue(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('TrimExcess(', ''),
  \ dotnet#prop('Capacity', 'int32'),
  \ dotnet#prop('Comparer', 'IComparer'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('Keys', 'IList'),
  \ dotnet#prop('Keys', 'ICollection'),
  \ dotnet#prop('Keys', 'ICollection'),
  \ dotnet#prop('Values', 'IList'),
  \ dotnet#prop('Values', 'ICollection'),
  \ dotnet#prop('Values', 'ICollection'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Item(!TKey)', '!TValue'),
  \ dotnet#prop('Item(object)', 'object'),
  \ ])

call dotnet#class('Stack', 'Object', [ 
  \ dotnet#field('_stack', 'Stack'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#field('_version', 'int32'),
  \ dotnet#field('currentElement', '!T'),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#prop('Current', '!T'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('Stack`1(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('TrimExcess(', ''),
  \ dotnet#method('Peek(', ''),
  \ dotnet#method('Pop(', ''),
  \ dotnet#method('Push(', ''),
  \ dotnet#method('ToArray(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ ])

call dotnet#class('SortedDictionary', 'Object', [ 
  \ dotnet#field('treeEnum', 'SortedSet'),
  \ dotnet#field('getEnumeratorRetType', 'int32'),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('get_Value(', ''),
  \ dotnet#prop('Current', 'KeyValuePair'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Key', 'object'),
  \ dotnet#prop('Value', 'object'),
  \ dotnet#prop('Entry', 'DictionaryEntry'),
  \ dotnet#field('dictEnum', 'SortedDictionary'),
  \ dotnet#prop('Current', '!TKey'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#field('dictEnum', 'SortedDictionary'),
  \ dotnet#prop('Current', '!TValue'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#method('SortedDictionary`2(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Comparer(', ''),
  \ dotnet#method('get_Keys(', ''),
  \ dotnet#method('get_Values(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('ContainsKey(', ''),
  \ dotnet#method('ContainsValue(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('TryGetValue(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Item(!TKey)', '!TValue'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('Comparer', 'IComparer'),
  \ dotnet#prop('Keys', 'SortedDictionary'),
  \ dotnet#prop('Keys', 'ICollection'),
  \ dotnet#prop('Values', 'SortedDictionary'),
  \ dotnet#prop('Values', 'ICollection'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Keys', 'ICollection'),
  \ dotnet#prop('Values', 'ICollection'),
  \ dotnet#prop('Item(object)', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ ])

call dotnet#class('SortedSet', 'Object', [ 
  \ dotnet#field('tree', 'SortedSet'),
  \ dotnet#field('version', 'int32'),
  \ dotnet#field('stack', 'Stack'),
  \ dotnet#field('current', 'SortedSet'),
  \ dotnet#field('reverse', 'bool'),
  \ dotnet#field('siInfo', 'SerializationInfo'),
  \ dotnet#method('GetObjectData(', ''),
  \ dotnet#method('OnDeserialization(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('SortedSet`1(', ''),
  \ dotnet#prop('Current', '!T'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_Comparer(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('CreateSetComparer(', ''),
  \ dotnet#method('UnionWith(', ''),
  \ dotnet#method('IntersectWith(', ''),
  \ dotnet#method('ExceptWith(', ''),
  \ dotnet#method('SymmetricExceptWith(', ''),
  \ dotnet#method('IsSubsetOf(', ''),
  \ dotnet#method('IsProperSubsetOf(', ''),
  \ dotnet#method('IsSupersetOf(', ''),
  \ dotnet#method('IsProperSupersetOf(', ''),
  \ dotnet#method('SetEquals(', ''),
  \ dotnet#method('Overlaps(', ''),
  \ dotnet#method('RemoveWhere(', ''),
  \ dotnet#method('get_Min(', ''),
  \ dotnet#method('get_Max(', ''),
  \ dotnet#method('Reverse(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('Comparer', 'IComparer'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Min', '!T'),
  \ dotnet#prop('Max', '!T'),
  \ ])



call dotnet#class('SecurityElement', 'Object', [ 
  \ dotnet#field('m_strTag', 'string'),
  \ dotnet#field('m_strText', 'string'),
  \ dotnet#field('m_lAttributes', 'ArrayList'),
  \ dotnet#field('m_type', 'SecurityElementType'),
  \ dotnet#method('SecurityElement(', ''),
  \ dotnet#method('GetTag(', ''),
  \ dotnet#method('Copy(', ''),
  \ dotnet#method('Attribute(', ''),
  \ dotnet#method('FromString(', ''),
  \ dotnet#method('get_Tag(', ''),
  \ dotnet#method('set_Tag(', ''),
  \ dotnet#method('get_Attributes(', ''),
  \ dotnet#method('set_Attributes(', ''),
  \ dotnet#method('get_Text(', ''),
  \ dotnet#method('set_Text(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('set_Children(', ''),
  \ dotnet#method('ConvertSecurityElementFSecurityElementies(', ''),
  \ dotnet#method('AddAttributeSafe(', ''),
  \ dotnet#method('AddAttribute(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddChildNoDuplicates(', ''),
  \ dotnet#method('Equal(', ''),
  \ dotnet#method('IsValidTag(', ''),
  \ dotnet#method('IsValidText(', ''),
  \ dotnet#method('IsValidAttributeName(', ''),
  \ dotnet#method('IsValidAttributeValue(', ''),
  \ dotnet#method('Escape(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ToWriter(', ''),
  \ dotnet#method('SearchForChildByTag(', ''),
  \ dotnet#method('ToPermission(', ''),
  \ dotnet#method('ToSecurityObject(', ''),
  \ dotnet#method('SearchForTextOfLocalName(', ''),
  \ dotnet#method('SearchForTextOfTag(', ''),
  \ dotnet#prop('Tag', 'string'),
  \ dotnet#prop('Attributes', 'Hashtable'),
  \ dotnet#prop('Text', 'string'),
  \ dotnet#prop('Children', 'ArrayList'),
  \ dotnet#prop('InternalChildren', 'ArrayList'),
  \ ])

call dotnet#class('XmlSyntaxException', 'SystemException', [ 
  \ dotnet#method('XmlSyntaxException(', ''),
  \ ])

call dotnet#class('CodeAccessPermission', 'Object', [ 
  \ dotnet#method('RevertAssert(', ''),
  \ dotnet#method('RevertDeny(', ''),
  \ dotnet#method('RevertPermitOnly(', ''),
  \ dotnet#method('RevertAll(', ''),
  \ dotnet#method('Assert(', ''),
  \ dotnet#method('Deny(', ''),
  \ dotnet#method('PermitOnly(', ''),
  \ dotnet#method('CreatePermissionElement(', ''),
  \ dotnet#method('ValidateElement(', ''),
  \ dotnet#method('FromXml(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('VerifyType(', ''),
  \ dotnet#method('IsSubsetOf(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('CheckDemand(', ''),
  \ dotnet#method('CheckPermitOnly(', ''),
  \ dotnet#method('CheckDeny(', ''),
  \ dotnet#method('CheckAssert(', ''),
  \ dotnet#method('CodeAccessPermission(', ''),
  \ ])

call dotnet#class('SuppressUnmanagedCodeSecurityAttribute', 'Attribute', [ 
  \ dotnet#method('SuppressUnmanagedCodeSecurityAttribute(', ''),
  \ ])

call dotnet#class('UnverifiableCodeAttribute', 'Attribute', [ 
  \ dotnet#method('UnverifiableCodeAttribute(', ''),
  \ ])

call dotnet#class('AllowPartiallyTrustedCallersAttribute', 'Attribute', [ 
  \ dotnet#method('AllowPartiallyTrustedCallersAttribute(', ''),
  \ dotnet#method('get_PartialTrustVisibilityLevel(', ''),
  \ dotnet#method('set_PartialTrustVisibilityLevel(', ''),
  \ dotnet#prop('PartialTrustVisibilityLevel', 'PartialTrustVisibilityLevel'),
  \ ])

call dotnet#class('SecurityCriticalAttribute', 'Attribute', [ 
  \ dotnet#method('SecurityCriticalAttribute(', ''),
  \ dotnet#method('get_Scope(', ''),
  \ dotnet#prop('Scope', 'SecurityCriticalScope'),
  \ ])

call dotnet#class('SecurityTreatAsSafeAttribute', 'Attribute', [ 
  \ dotnet#method('SecurityTreatAsSafeAttribute(', ''),
  \ ])

call dotnet#class('SecuritySafeCriticalAttribute', 'Attribute', [ 
  \ dotnet#method('SecuritySafeCriticalAttribute(', ''),
  \ ])

call dotnet#class('SecurityTransparentAttribute', 'Attribute', [ 
  \ dotnet#method('SecurityTransparentAttribute(', ''),
  \ ])

call dotnet#class('SecurityRulesAttribute', 'Attribute', [ 
  \ dotnet#method('SecurityRulesAttribute(', ''),
  \ dotnet#method('get_SkipVerificationInFullTrust(', ''),
  \ dotnet#method('set_SkipVerificationInFullTrust(', ''),
  \ dotnet#method('get_RuleSet(', ''),
  \ dotnet#prop('SkipVerificationInFullTrust', 'bool'),
  \ dotnet#prop('RuleSet', 'SecurityRuleSet'),
  \ ])

call dotnet#class('HostSecurityManager', 'Object', [ 
  \ dotnet#method('HostSecurityManager(', ''),
  \ dotnet#method('GetHostSuppliedAppDomainEvidenceTypes(', ''),
  \ dotnet#method('GetHostSuppliedAssemblyEvidenceTypes(', ''),
  \ dotnet#prop('Flags', 'HostSecurityManagerOptions'),
  \ dotnet#prop('DomainPolicy', 'PolicyLevel'),
  \ ])

call dotnet#class('PermissionSet', 'Object', [ 
  \ dotnet#field('value__', 'int32'),
  \ dotnet#field('m_permSet', 'TokenBasedSet'),
  \ dotnet#method('void(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('CheckSet(', ''),
  \ dotnet#method('IsEmpty(', ''),
  \ dotnet#method('FastIsEmpty(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('GetPermission(', ''),
  \ dotnet#method('SetPermission(', ''),
  \ dotnet#method('AddPermission(', ''),
  \ dotnet#method('RemovePermission(', ''),
  \ dotnet#method('SetUnrestricted(', ''),
  \ dotnet#method('IsUnrestricted(', ''),
  \ dotnet#method('IsSubsetOfHelper(', ''),
  \ dotnet#method('IsSubsetOf(', ''),
  \ dotnet#method('CheckDemand(', ''),
  \ dotnet#method('CheckPermitOnly(', ''),
  \ dotnet#method('CheckAssertion(', ''),
  \ dotnet#method('CheckDeny(', ''),
  \ dotnet#method('CheckDecoded(', ''),
  \ dotnet#method('SafeChildAdd(', ''),
  \ dotnet#method('InplaceIntersect(', ''),
  \ dotnet#method('Intersect(', ''),
  \ dotnet#method('InplaceUnion(', ''),
  \ dotnet#method('Union(', ''),
  \ dotnet#method('MergeDeniedSet(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('DemandNonCAS(', ''),
  \ dotnet#method('Assert(', ''),
  \ dotnet#method('Deny(', ''),
  \ dotnet#method('PermitOnly(', ''),
  \ dotnet#method('GetFirstPerm(', ''),
  \ dotnet#method('CopyWithNoIdentityPermissions(', ''),
  \ dotnet#method('GetEnumeratorInternal(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('FilterHostProtectionPermissions(', ''),
  \ dotnet#method('FromXml(', ''),
  \ dotnet#method('IsPermissionTag(', ''),
  \ dotnet#method('CreatePerm(', ''),
  \ dotnet#method('CreatePermission(', ''),
  \ dotnet#method('CreateEmptyPermissionSetXml(', ''),
  \ dotnet#method('ToXml(', ''),
  \ dotnet#method('InternalToXml(', ''),
  \ dotnet#method('EncodeXml(', ''),
  \ dotnet#method('ConvertPermissionSet(', ''),
  \ dotnet#method('ContainsNonCodeAccessPermissions(', ''),
  \ dotnet#method('OnDeserialization(', ''),
  \ dotnet#method('RevertAssert(', ''),
  \ dotnet#method('RemoveRefusedPermissionSet(', ''),
  \ dotnet#method('RemoveAssertedPermissionSet(', ''),
  \ dotnet#method('IsIntersectingAssertedPermissions(', ''),
  \ dotnet#method('set_IgnoreTypeLoadFailures(', ''),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IgnoreTypeLoadFailures', 'bool'),
  \ ])

call dotnet#class('NamedPermissionSet', 'PermissionSet', [ 
  \ dotnet#field('m_descrResource', 'string'),
  \ dotnet#method('NamedPermissionSet(', ''),
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('set_Name(', ''),
  \ dotnet#method('get_Description(', ''),
  \ dotnet#method('set_Description(', ''),
  \ dotnet#method('Copy(', ''),
  \ dotnet#method('ToXml(', ''),
  \ dotnet#method('FromXml(', ''),
  \ dotnet#method('FromXmlNameOnly(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Description', 'string'),
  \ ])

call dotnet#class('ReadOnlyPermissionSet', 'PermissionSet', [ 
  \ dotnet#method('ReadOnlyPermissionSet(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Copy(', ''),
  \ dotnet#method('ToXml(', ''),
  \ dotnet#method('GetEnumeratorImpl(', ''),
  \ dotnet#method('GetPermissionImpl(', ''),
  \ dotnet#method('AddPermissionImpl(', ''),
  \ dotnet#method('FromXml(', ''),
  \ dotnet#method('RemovePermissionImpl(', ''),
  \ dotnet#method('SetPermissionImpl(', ''),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ ])

call dotnet#class('SecureString', 'Object', [ 
  \ dotnet#method('SecureString(', ''),
  \ dotnet#method('get_Length(', ''),
  \ dotnet#method('AppendChar(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Copy(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('InsertAt(', ''),
  \ dotnet#method('IsReadOnly(', ''),
  \ dotnet#method('MakeReadOnly(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('SetAt(', ''),
  \ dotnet#method('ToBSTR(', ''),
  \ dotnet#method('ToUniStr(', ''),
  \ dotnet#method('ToAnsiStr(', ''),
  \ dotnet#prop('Length', 'int32'),
  \ ])

call dotnet#class('SecurityContext', 'Object', [ 
  \ dotnet#field('sc', 'SecurityContext'),
  \ dotnet#field('callBack', 'ContextCallback'),
  \ dotnet#field('state', 'object'),
  \ dotnet#field('scsw', 'SecurityContextSwitcher'),
  \ dotnet#method('SecurityContext(', ''),
  \ dotnet#field('isNewCapture', 'bool'),
  \ dotnet#field('_disableFlow', 'SecurityContextDisableFlow'),
  \ dotnet#method('set_ExecutionContext(', ''),
  \ dotnet#method('set_WindowsIdentity(', ''),
  \ dotnet#method('set_CompressedStack(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('SuppressFlow(', ''),
  \ dotnet#method('SuppressFlowWindowsIdentity(', ''),
  \ dotnet#method('RestoreFlow(', ''),
  \ dotnet#method('IsFlowSuppressed(', ''),
  \ dotnet#method('IsWindowsIdentityFlowSuppressed(', ''),
  \ dotnet#method('Run(', ''),
  \ dotnet#method('RunInternal(', ''),
  \ dotnet#method('runTryCode(', ''),
  \ dotnet#method('runFinallyCode(', ''),
  \ dotnet#method('SetSecurityContext(', ''),
  \ dotnet#method('CreateCopy(', ''),
  \ dotnet#method('Capture(', ''),
  \ dotnet#method('CreateFullTrustSecurityContext(', ''),
  \ dotnet#method('GetCurrentSecurityContextNoCreate(', ''),
  \ dotnet#method('GetCurrentWI(', ''),
  \ dotnet#method('IsDefaultFTSecurityContext(', ''),
  \ dotnet#method('CurrentlyInDefaultFTSecurityContext(', ''),
  \ dotnet#method('GetImpersonationFlowMode(', ''),
  \ dotnet#method('IsDefaultThreadSecurityInfo(', ''),
  \ dotnet#prop('FullTrustSecurityContext', 'SecurityContext'),
  \ dotnet#prop('ExecutionContext', 'ExecutionContext'),
  \ dotnet#prop('WindowsIdentity', 'WindowsIdentity'),
  \ dotnet#prop('CompressedStack', 'CompressedStack'),
  \ ])

call dotnet#class('SecurityException', 'SystemException', [ 
  \ dotnet#method('GetResString(', ''),
  \ dotnet#method('MakeSecurityException(', ''),
  \ dotnet#method('SecurityException(', ''),
  \ dotnet#method('get_Action(', ''),
  \ dotnet#method('set_Action(', ''),
  \ dotnet#method('get_PermissionType(', ''),
  \ dotnet#method('set_PermissionType(', ''),
  \ dotnet#method('get_FirstPermissionThatFailed(', ''),
  \ dotnet#method('set_FirstPermissionThatFailed(', ''),
  \ dotnet#method('get_PermissionState(', ''),
  \ dotnet#method('set_PermissionState(', ''),
  \ dotnet#method('get_Demanded(', ''),
  \ dotnet#method('set_Demanded(', ''),
  \ dotnet#method('get_GrantedSet(', ''),
  \ dotnet#method('set_GrantedSet(', ''),
  \ dotnet#method('get_RefusedSet(', ''),
  \ dotnet#method('set_RefusedSet(', ''),
  \ dotnet#method('get_DenySetInstance(', ''),
  \ dotnet#method('set_DenySetInstance(', ''),
  \ dotnet#method('get_PermitOnlySetInstance(', ''),
  \ dotnet#method('set_PermitOnlySetInstance(', ''),
  \ dotnet#method('get_FailedAssemblyInfo(', ''),
  \ dotnet#method('set_FailedAssemblyInfo(', ''),
  \ dotnet#method('get_Method(', ''),
  \ dotnet#method('set_Method(', ''),
  \ dotnet#method('get_Zone(', ''),
  \ dotnet#method('set_Zone(', ''),
  \ dotnet#method('get_Url(', ''),
  \ dotnet#method('set_Url(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('GetObjectData(', ''),
  \ dotnet#prop('Action', 'SecurityAction'),
  \ dotnet#prop('PermissionType', 'Type'),
  \ dotnet#prop('FirstPermissionThatFailed', 'IPermission'),
  \ dotnet#prop('PermissionState', 'string'),
  \ dotnet#prop('Demanded', 'object'),
  \ dotnet#prop('GrantedSet', 'string'),
  \ dotnet#prop('RefusedSet', 'string'),
  \ dotnet#prop('DenySetInstance', 'object'),
  \ dotnet#prop('PermitOnlySetInstance', 'object'),
  \ dotnet#prop('FailedAssemblyInfo', 'AssemblyName'),
  \ dotnet#prop('Method', 'MethodInfo'),
  \ dotnet#prop('Zone', 'SecurityZone'),
  \ dotnet#prop('Url', 'string'),
  \ ])

call dotnet#class('SecurityState', 'Object', [ 
  \ dotnet#method('SecurityState(', ''),
  \ dotnet#method('IsStateAvailable(', ''),
  \ dotnet#method('EnsureState(', ''),
  \ ])

call dotnet#class('HostProtectionException', 'SystemException', [ 
  \ dotnet#method('HostProtectionException(', ''),
  \ dotnet#method('get_ProtectedResources(', ''),
  \ dotnet#method('get_DemandedResources(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('GetObjectData(', ''),
  \ dotnet#prop('ProtectedResources', 'HostProtectionResource'),
  \ dotnet#prop('DemandedResources', 'HostProtectionResource'),
  \ ])

call dotnet#class('SecurityManager', 'Object', [ 
  \ dotnet#method('IsGranted(', ''),
  \ dotnet#method('GetStandardSandbox(', ''),
  \ dotnet#method('GetZoneAndOrigin(', ''),
  \ dotnet#method('LoadPolicyLevelFromFile(', ''),
  \ dotnet#method('LoadPolicyLevelFromString(', ''),
  \ dotnet#method('SavePolicyLevel(', ''),
  \ dotnet#method('ResolvePolicy(', ''),
  \ dotnet#method('CurrentThreadRequiresSecurityContextCapture(', ''),
  \ dotnet#method('ResolveSystemPolicy(', ''),
  \ dotnet#method('ResolvePolicyGroups(', ''),
  \ dotnet#method('PolicyHierarchy(', ''),
  \ dotnet#method('SavePolicy(', ''),
  \ dotnet#method('get_CheckExecutionRights(', ''),
  \ dotnet#method('set_CheckExecutionRights(', ''),
  \ dotnet#method('get_SecurityEnabled(', ''),
  \ dotnet#method('set_SecurityEnabled(', ''),
  \ dotnet#method('GetSpecialFlags(', ''),
  \ dotnet#method('pinvokeimpl(', ''),
  \ dotnet#method('_SetThreadSecurity(', ''),
  \ dotnet#method('SecurityManager(', ''),
  \ dotnet#prop('PolicyManager', 'PolicyManager'),
  \ dotnet#prop('CheckExecutionRights', 'bool'),
  \ dotnet#prop('SecurityEnabled', 'bool'),
  \ ])

call dotnet#class('VerificationException', 'SystemException', [ 
  \ dotnet#method('VerificationException(', ''),
  \ ])


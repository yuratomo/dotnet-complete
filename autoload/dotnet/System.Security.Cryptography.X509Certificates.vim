call dotnet#namespace('System.Security.Cryptography.X509Certificates')

call dotnet#class('X509Certificate', 'Object', [ 
  \ dotnet#method('X509Certificate(', ''),
  \ dotnet#method('CreateFromCertFile(', ''),
  \ dotnet#method('CreateFromSignedFile(', ''),
  \ dotnet#method('get_Handle(', ''),
  \ dotnet#method('GetName(', ''),
  \ dotnet#method('GetIssuerName(', ''),
  \ dotnet#method('GetSerialNumber(', ''),
  \ dotnet#method('GetSerialNumberString(', ''),
  \ dotnet#method('GetKeyAlgorithmParameters(', ''),
  \ dotnet#method('GetKeyAlgorithmParametersString(', ''),
  \ dotnet#method('GetKeyAlgorithm(', ''),
  \ dotnet#method('GetPublicKey(', ''),
  \ dotnet#method('GetPublicKeyString(', ''),
  \ dotnet#method('GetRawCertData(', ''),
  \ dotnet#method('GetRawCertDataString(', ''),
  \ dotnet#method('GetCertHash(', ''),
  \ dotnet#method('GetCertHashString(', ''),
  \ dotnet#method('GetEffectiveDateString(', ''),
  \ dotnet#method('GetExpirationDateString(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('FormatDate(', ''),
  \ dotnet#method('GetFormat(', ''),
  \ dotnet#method('get_Issuer(', ''),
  \ dotnet#method('get_Subject(', ''),
  \ dotnet#method('Import(', ''),
  \ dotnet#method('Export(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('GetObjectData(', ''),
  \ dotnet#method('OnDeserialization(', ''),
  \ dotnet#prop('Handle', 'int'),
  \ dotnet#prop('Issuer', 'string'),
  \ dotnet#prop('Subject', 'string'),
  \ dotnet#prop('CertContext', 'SafeCertContextHandle'),
  \ ])

call dotnet#class('AuthenticodeSignatureInformation', 'Object', [ 
  \ dotnet#method('get_Description(', ''),
  \ dotnet#method('get_DescriptionUrl(', ''),
  \ dotnet#method('get_HashAlgorithm(', ''),
  \ dotnet#method('get_HResult(', ''),
  \ dotnet#method('get_SignatureChain(', ''),
  \ dotnet#method('get_SigningCertificate(', ''),
  \ dotnet#method('get_Timestamp(', ''),
  \ dotnet#method('get_TrustStatus(', ''),
  \ dotnet#method('get_VerificationResult(', ''),
  \ dotnet#prop('Description', 'string'),
  \ dotnet#prop('DescriptionUrl', 'Uri'),
  \ dotnet#prop('HashAlgorithm', 'string'),
  \ dotnet#prop('HResult', 'int32'),
  \ dotnet#prop('SignatureChain', 'X509Chain'),
  \ dotnet#prop('SigningCertificate', 'X509Certificate2'),
  \ dotnet#prop('Timestamp', 'TimestampInformation'),
  \ dotnet#prop('TrustStatus', 'TrustStatus'),
  \ dotnet#prop('VerificationResult', 'SignatureVerificationResult'),
  \ ])

call dotnet#class('TimestampInformation', 'Object', [ 
  \ dotnet#method('get_HashAlgorithm(', ''),
  \ dotnet#method('get_HResult(', ''),
  \ dotnet#method('get_IsValid(', ''),
  \ dotnet#method('get_SignatureChain(', ''),
  \ dotnet#method('get_SigningCertificate(', ''),
  \ dotnet#method('get_Timestamp(', ''),
  \ dotnet#method('get_VerificationResult(', ''),
  \ dotnet#prop('HashAlgorithm', 'string'),
  \ dotnet#prop('HResult', 'int32'),
  \ dotnet#prop('IsValid', 'bool'),
  \ dotnet#prop('SignatureChain', 'X509Chain'),
  \ dotnet#prop('SigningCertificate', 'X509Certificate2'),
  \ dotnet#prop('Timestamp', 'DateTime'),
  \ dotnet#prop('VerificationResult', 'SignatureVerificationResult'),
  \ ])

call dotnet#class('X500DistinguishedName', 'AsnEncodedData', [ 
  \ dotnet#method('X500DistinguishedName(', ''),
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('Decode(', ''),
  \ dotnet#method('Format(', ''),
  \ dotnet#prop('Name', 'string'),
  \ ])

call dotnet#class('PublicKey', 'Object', [ 
  \ dotnet#method('PublicKey(', ''),
  \ dotnet#method('get_Key(', ''),
  \ dotnet#method('get_Oid(', ''),
  \ dotnet#method('get_EncodedKeyValue(', ''),
  \ dotnet#method('get_EncodedParameters(', ''),
  \ dotnet#prop('Key', 'AsymmetricAlgorithm'),
  \ dotnet#prop('Oid', 'Oid'),
  \ dotnet#prop('EncodedKeyValue', 'AsnEncodedData'),
  \ dotnet#prop('EncodedParameters', 'AsnEncodedData'),
  \ ])

call dotnet#class('X509Certificate2', 'X509Certificate', [ 
  \ dotnet#method('X509Certificate2(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('get_Archived(', ''),
  \ dotnet#method('set_Archived(', ''),
  \ dotnet#method('get_Extensions(', ''),
  \ dotnet#method('get_FriendlyName(', ''),
  \ dotnet#method('set_FriendlyName(', ''),
  \ dotnet#method('get_IssuerName(', ''),
  \ dotnet#method('get_NotAfter(', ''),
  \ dotnet#method('get_NotBefore(', ''),
  \ dotnet#method('get_HasPrivateKey(', ''),
  \ dotnet#method('get_PrivateKey(', ''),
  \ dotnet#method('set_PrivateKey(', ''),
  \ dotnet#method('get_PublicKey(', ''),
  \ dotnet#method('get_RawData(', ''),
  \ dotnet#method('get_SerialNumber(', ''),
  \ dotnet#method('get_SubjectName(', ''),
  \ dotnet#method('get_SignatureAlgorithm(', ''),
  \ dotnet#method('get_Thumbprint(', ''),
  \ dotnet#method('get_Version(', ''),
  \ dotnet#method('GetNameInfo(', ''),
  \ dotnet#method('Import(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('Verify(', ''),
  \ dotnet#method('GetCertContentType(', ''),
  \ dotnet#prop('Archived', 'bool'),
  \ dotnet#prop('Extensions', 'X509ExtensionCollection'),
  \ dotnet#prop('FriendlyName', 'string'),
  \ dotnet#prop('IssuerName', 'X500DistinguishedName'),
  \ dotnet#prop('NotAfter', 'DateTime'),
  \ dotnet#prop('NotBefore', 'DateTime'),
  \ dotnet#prop('HasPrivateKey', 'bool'),
  \ dotnet#prop('PrivateKey', 'AsymmetricAlgorithm'),
  \ dotnet#prop('PublicKey', 'PublicKey'),
  \ dotnet#prop('RawData', 'uint8[]'),
  \ dotnet#prop('SerialNumber', 'string'),
  \ dotnet#prop('SubjectName', 'X500DistinguishedName'),
  \ dotnet#prop('SignatureAlgorithm', 'Oid'),
  \ dotnet#prop('Thumbprint', 'string'),
  \ dotnet#prop('Version', 'int32'),
  \ ])

call dotnet#class('X509CertificateCollection', 'CollectionBase', [ 
  \ dotnet#method('X509CertificateCollection(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#prop('Current', 'X509Certificate'),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('AddRange(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#prop('Item(int32)', 'X509Certificate'),
  \ ])

call dotnet#class('X509Certificate2Collection', 'X509CertificateCollection', [ 
  \ dotnet#method('X509Certificate2Collection(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('AddRange(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveRange(', ''),
  \ dotnet#method('Find(', ''),
  \ dotnet#method('Import(', ''),
  \ dotnet#method('Export(', ''),
  \ dotnet#prop('Item(int32)', 'X509Certificate2'),
  \ ])

call dotnet#class('X509ChainStatus', 'ValueType', [ 
  \ dotnet#field('m_status', 'X509ChainStatusFlags'),
  \ dotnet#field('m_statusInformation', 'string'),
  \ dotnet#method('get_Status(', ''),
  \ dotnet#method('set_Status(', ''),
  \ dotnet#method('get_StatusInformation(', ''),
  \ dotnet#method('set_StatusInformation(', ''),
  \ dotnet#prop('Status', 'X509ChainStatusFlags'),
  \ dotnet#prop('StatusInformation', 'string'),
  \ ])

call dotnet#class('X509Chain', 'Object', [ 
  \ dotnet#method('Create(', ''),
  \ dotnet#method('X509Chain(', ''),
  \ dotnet#method('get_ChainContext(', ''),
  \ dotnet#method('get_ChainPolicy(', ''),
  \ dotnet#method('set_ChainPolicy(', ''),
  \ dotnet#method('get_ChainStatus(', ''),
  \ dotnet#method('get_ChainElements(', ''),
  \ dotnet#method('Build(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#prop('ChainContext', 'int'),
  \ dotnet#prop('ChainPolicy', 'X509ChainPolicy'),
  \ dotnet#prop('ChainStatus', 'X509ChainStatus[]'),
  \ dotnet#prop('ChainElements', 'X509ChainElementCollection'),
  \ ])

call dotnet#class('X509ChainElement', 'Object', [ 
  \ dotnet#method('get_Certificate(', ''),
  \ dotnet#method('get_ChainElementStatus(', ''),
  \ dotnet#method('get_Information(', ''),
  \ dotnet#method('X509ChainElement(', ''),
  \ dotnet#prop('Certificate', 'X509Certificate2'),
  \ dotnet#prop('ChainElementStatus', 'X509ChainStatus[]'),
  \ dotnet#prop('Information', 'string'),
  \ ])

call dotnet#class('X509ChainElementCollection', 'Object', [ 
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('X509ChainElementCollection(', ''),
  \ dotnet#prop('Item(int32)', 'X509ChainElement'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ ])

call dotnet#class('X509ChainPolicy', 'Object', [ 
  \ dotnet#method('X509ChainPolicy(', ''),
  \ dotnet#method('get_ApplicationPolicy(', ''),
  \ dotnet#method('get_CertificatePolicy(', ''),
  \ dotnet#method('get_RevocationMode(', ''),
  \ dotnet#method('set_RevocationMode(', ''),
  \ dotnet#method('get_RevocationFlag(', ''),
  \ dotnet#method('set_RevocationFlag(', ''),
  \ dotnet#method('get_VerificationFlags(', ''),
  \ dotnet#method('set_VerificationFlags(', ''),
  \ dotnet#method('get_VerificationTime(', ''),
  \ dotnet#method('set_VerificationTime(', ''),
  \ dotnet#method('get_UrlRetrievalTimeout(', ''),
  \ dotnet#method('set_UrlRetrievalTimeout(', ''),
  \ dotnet#method('get_ExtraStore(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#prop('ApplicationPolicy', 'OidCollection'),
  \ dotnet#prop('CertificatePolicy', 'OidCollection'),
  \ dotnet#prop('RevocationMode', 'X509RevocationMode'),
  \ dotnet#prop('RevocationFlag', 'X509RevocationFlag'),
  \ dotnet#prop('VerificationFlags', 'X509VerificationFlags'),
  \ dotnet#prop('VerificationTime', 'DateTime'),
  \ dotnet#prop('UrlRetrievalTimeout', 'TimeSpan'),
  \ dotnet#prop('ExtraStore', 'X509Certificate2Collection'),
  \ ])

call dotnet#class('X509Extension', 'AsnEncodedData', [ 
  \ dotnet#method('X509Extension(', ''),
  \ dotnet#method('get_Critical(', ''),
  \ dotnet#method('set_Critical(', ''),
  \ dotnet#method('CopyFrom(', ''),
  \ dotnet#prop('Critical', 'bool'),
  \ ])

call dotnet#class('X509KeyUsageExtension', 'X509Extension', [ 
  \ dotnet#method('X509KeyUsageExtension(', ''),
  \ dotnet#method('get_KeyUsages(', ''),
  \ dotnet#method('CopyFrom(', ''),
  \ dotnet#prop('KeyUsages', 'X509KeyUsageFlags'),
  \ ])

call dotnet#class('X509BasicConstraintsExtension', 'X509Extension', [ 
  \ dotnet#method('X509BasicConstraintsExtension(', ''),
  \ dotnet#method('get_CertificateAuthority(', ''),
  \ dotnet#method('get_HasPathLengthConstraint(', ''),
  \ dotnet#method('get_PathLengthConstraint(', ''),
  \ dotnet#method('CopyFrom(', ''),
  \ dotnet#prop('CertificateAuthority', 'bool'),
  \ dotnet#prop('HasPathLengthConstraint', 'bool'),
  \ dotnet#prop('PathLengthConstraint', 'int32'),
  \ ])

call dotnet#class('X509EnhancedKeyUsageExtension', 'X509Extension', [ 
  \ dotnet#method('X509EnhancedKeyUsageExtension(', ''),
  \ dotnet#method('get_EnhancedKeyUsages(', ''),
  \ dotnet#method('CopyFrom(', ''),
  \ dotnet#prop('EnhancedKeyUsages', 'OidCollection'),
  \ ])

call dotnet#class('X509SubjectKeyIdentifierExtension', 'X509Extension', [ 
  \ dotnet#method('X509SubjectKeyIdentifierExtension(', ''),
  \ dotnet#method('get_SubjectKeyIdentifier(', ''),
  \ dotnet#method('CopyFrom(', ''),
  \ dotnet#prop('SubjectKeyIdentifier', 'string'),
  \ ])

call dotnet#class('X509ExtensionCollection', 'Object', [ 
  \ dotnet#method('X509ExtensionCollection(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#prop('Item(int32)', 'X509Extension'),
  \ dotnet#prop('Item(string)', 'X509Extension'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ ])

call dotnet#class('X509Store', 'Object', [ 
  \ dotnet#method('X509Store(', ''),
  \ dotnet#method('get_StoreHandle(', ''),
  \ dotnet#method('get_Location(', ''),
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('Open(', ''),
  \ dotnet#method('Close(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('AddRange(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveRange(', ''),
  \ dotnet#method('get_Certificates(', ''),
  \ dotnet#prop('StoreHandle', 'int'),
  \ dotnet#prop('Location', 'StoreLocation'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Certificates', 'X509Certificate2Collection'),
  \ ])


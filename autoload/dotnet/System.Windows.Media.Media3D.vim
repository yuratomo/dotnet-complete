call dotnet#namespace('System.Windows.Media.Media3D')

call dotnet#class('GeneralTransform3D', 'Animatable', [ 
  \ dotnet#method('GeneralTransform3D(', ''),
  \ dotnet#method('TryTransform(', ''),
  \ dotnet#method('Transform(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Inverse', 'GeneralTransform3D'),
  \ dotnet#prop('AffineTransform', 'Transform3D'),
  \ ])

call dotnet#class('Visual3D', 'DependencyObject', [ 
  \ dotnet#field('_proxy', 'VisualProxy'),
  \ dotnet#method('Visual3D(', ''),
  \ dotnet#method('IsOnChannel(', ''),
  \ dotnet#method('RemoveChildFromParent(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#method('get_Transform(', ''),
  \ dotnet#method('set_Transform(', ''),
  \ dotnet#method('AddVisual3DChild(', ''),
  \ dotnet#method('RemoveVisual3DChild(', ''),
  \ dotnet#method('get_InternalIsVisible(', ''),
  \ dotnet#method('set_InternalIsVisible(', ''),
  \ dotnet#method('get_Visual3DModel(', ''),
  \ dotnet#method('set_Visual3DModel(', ''),
  \ dotnet#method('FireOnVisualParentChanged(', ''),
  \ dotnet#method('add_VisualAncestorChanged(', ''),
  \ dotnet#method('remove_VisualAncestorChanged(', ''),
  \ dotnet#method('ProcessAncestorChangedNotificationRecursive(', ''),
  \ dotnet#method('OnVisualParentChanged(', ''),
  \ dotnet#method('OnVisualChildrenChanged(', ''),
  \ dotnet#method('DoesRayHitSubgraphBounds(', ''),
  \ dotnet#method('HitTest(', ''),
  \ dotnet#method('RayHitTest(', ''),
  \ dotnet#method('HitTestChildren(', ''),
  \ dotnet#method('RayHitTestInternal(', ''),
  \ dotnet#method('RenderChanged(', ''),
  \ dotnet#method('GetContentBounds(', ''),
  \ dotnet#method('CalculateSubgraphBoundsOuterSpace(', ''),
  \ dotnet#method('CalculateSubgraphBoundsInnerSpace(', ''),
  \ dotnet#method('VerifyAPIReadOnly(', ''),
  \ dotnet#method('VerifyAPIReadWrite(', ''),
  \ dotnet#method('SetParent(', ''),
  \ dotnet#method('get_Visual3DChildrenCount(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('RemoveChild(', ''),
  \ dotnet#method('GetChildrenCount(', ''),
  \ dotnet#method('Debug_VerifyBoundsEqual(', ''),
  \ dotnet#method('Debug_VerifyCachedSubgraphBounds(', ''),
  \ dotnet#method('Debug_VerifyCachedContentBounds(', ''),
  \ dotnet#method('PrecomputeRecursive(', ''),
  \ dotnet#method('RenderRecursive(', ''),
  \ dotnet#method('RenderContent(', ''),
  \ dotnet#method('IsAncestorOf(', ''),
  \ dotnet#method('IsDescendantOf(', ''),
  \ dotnet#method('SetFlagsToRoot(', ''),
  \ dotnet#method('FindFirstAncestorWithFlagsAnd(', ''),
  \ dotnet#method('FindCommonVisualAncestor(', ''),
  \ dotnet#method('FreeDUCEResources(', ''),
  \ dotnet#method('ReleaseOnChannel(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('DisconnectAttachedResource(', ''),
  \ dotnet#method('AddInheritanceContext(', ''),
  \ dotnet#method('RemoveInheritanceContext(', ''),
  \ dotnet#method('get_HasMultipleInheritanceContexts(', ''),
  \ dotnet#method('OnInheritanceContextChangedCore(', ''),
  \ dotnet#method('TransformToAncestor(', ''),
  \ dotnet#method('TransformToDescendant(', ''),
  \ dotnet#method('InternalTransformToAncestor(', ''),
  \ dotnet#method('get_ParentIndex(', ''),
  \ dotnet#method('set_ParentIndex(', ''),
  \ dotnet#method('get_IsVisualChildrenIterationInProgress(', ''),
  \ dotnet#method('set_IsVisualChildrenIterationInProgress(', ''),
  \ dotnet#method('SetFlagsOnAllChannels(', ''),
  \ dotnet#method('SetFlags(', ''),
  \ dotnet#method('CheckFlagsOnAllChannels(', ''),
  \ dotnet#method('CheckFlagsAnd(', ''),
  \ dotnet#method('get_InternalVisual2DOr3DChildrenCount(', ''),
  \ dotnet#method('CheckFlagsOr(', ''),
  \ dotnet#method('DoAnyChildrenHaveABitSet(', ''),
  \ dotnet#method('PropagateFlags(', ''),
  \ dotnet#method('ApplyAnimationClock(', ''),
  \ dotnet#method('BeginAnimation(', ''),
  \ dotnet#method('get_HasAnimatedProperties(', ''),
  \ dotnet#method('GetAnimationBaseValue(', ''),
  \ dotnet#method('EvaluateAnimatedValueCore(', ''),
  \ dotnet#event('VisualAncestorChanged', 'Visual/AncestorChangedEventHandler'),
  \ dotnet#prop('Transform', 'Transform3D'),
  \ dotnet#prop('InternalIsVisible', 'bool'),
  \ dotnet#prop('Visual3DModel', 'Model3D'),
  \ dotnet#prop('VisualContentBounds', 'Rect3D'),
  \ dotnet#prop('Visual2DContentBounds', 'Rect'),
  \ dotnet#prop('BBoxSubgraph', 'Rect3D'),
  \ dotnet#prop('VisualDescendantBounds', 'Rect3D'),
  \ dotnet#prop('Visual3DChildrenCount', 'int32'),
  \ dotnet#prop('InheritanceContext', 'DependencyObject'),
  \ dotnet#prop('HasMultipleInheritanceContexts', 'bool'),
  \ dotnet#prop('InternalVisualParent', 'DependencyObject'),
  \ dotnet#prop('ParentIndex', 'int32'),
  \ dotnet#prop('IsVisualChildrenIterationInProgress', 'bool'),
  \ dotnet#prop('InternalVisual2DOr3DChildrenCount', 'int32'),
  \ dotnet#prop('HasAnimatedProperties', 'bool'),
  \ ])

call dotnet#class('Transform3D', 'GeneralTransform3D', [ 
  \ dotnet#method('Transform3D(', ''),
  \ dotnet#method('Transform(', ''),
  \ dotnet#method('TryTransform(', ''),
  \ dotnet#method('TransformBounds(', ''),
  \ dotnet#method('get_IsAffine(', ''),
  \ dotnet#method('Append(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('ReleaseOnChannel(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#prop('Inverse', 'GeneralTransform3D'),
  \ dotnet#prop('AffineTransform', 'Transform3D'),
  \ dotnet#prop('Identity', 'Transform3D'),
  \ dotnet#prop('IsAffine', 'bool'),
  \ dotnet#prop('Value', 'Matrix3D'),
  \ ])

call dotnet#class('AffineTransform3D', 'Transform3D', [ 
  \ dotnet#method('AffineTransform3D(', ''),
  \ dotnet#method('get_IsAffine(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#prop('IsAffine', 'bool'),
  \ ])

call dotnet#class('Model3D', 'Animatable', [ 
  \ dotnet#method('Model3D(', ''),
  \ dotnet#method('get_Bounds(', ''),
  \ dotnet#method('RayHitTest(', ''),
  \ dotnet#method('RayHitTestCore(', ''),
  \ dotnet#method('CalculateSubgraphBoundsOuterSpace(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Transform(', ''),
  \ dotnet#method('set_Transform(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('ReleaseOnChannel(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Bounds', 'Rect3D'),
  \ dotnet#prop('Transform', 'Transform3D'),
  \ ])

call dotnet#class('Light', 'Model3D', [ 
  \ dotnet#method('Light(', ''),
  \ dotnet#method('RayHitTestCore(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Color(', ''),
  \ dotnet#method('set_Color(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('Color', 'Color'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('AmbientLight', 'Light', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('AmbientLight(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('Rotation3D', 'Animatable', [ 
  \ dotnet#method('Rotation3D(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('ReleaseOnChannel(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Identity', 'Rotation3D'),
  \ dotnet#prop('InternalQuaternion', 'Quaternion'),
  \ ])

call dotnet#class('AxisAngleRotation3D', 'Rotation3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('AxisAngleRotation3D(', ''),
  \ dotnet#method('AxisPropertyChangedHook(', ''),
  \ dotnet#method('AnglePropertyChangedHook(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Axis(', ''),
  \ dotnet#method('set_Axis(', ''),
  \ dotnet#method('get_Angle(', ''),
  \ dotnet#method('set_Angle(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('InternalQuaternion', 'Quaternion'),
  \ dotnet#prop('Axis', 'VAxisAngleRotation3D3D'),
  \ dotnet#prop('Angle', 'float64'),
  \ ])

call dotnet#class('Camera', 'Animatable', [ 
  \ dotnet#method('Camera(', ''),
  \ dotnet#method('PrependInverseTransform(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Transform(', ''),
  \ dotnet#method('set_Transform(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('ReleaseOnChannel(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Transform', 'Transform3D'),
  \ ])

call dotnet#class('ContainerUIElement3D', 'UIElement3D', [ 
  \ dotnet#method('ContainerUIElement3D(', ''),
  \ dotnet#method('GetVisual3DChild(', ''),
  \ dotnet#method('get_Visual3DChildrenCount(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#prop('Visual3DChildrenCount', 'int32'),
  \ dotnet#prop('Children', 'Visual3DCollection'),
  \ ])

call dotnet#class('Material', 'Animatable', [ 
  \ dotnet#method('Material(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('ReleaseOnChannel(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ ])

call dotnet#class('DiffuseMaterial', 'Material', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('DiffuseMaterial(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Color(', ''),
  \ dotnet#method('set_Color(', ''),
  \ dotnet#method('get_AmbientColor(', ''),
  \ dotnet#method('set_AmbientColor(', ''),
  \ dotnet#method('get_Brush(', ''),
  \ dotnet#method('set_Brush(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('Color', 'Color'),
  \ dotnet#prop('AmbientColor', 'Color'),
  \ dotnet#prop('Brush', 'Brush'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('DirectionalLight', 'Light', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('DirectionalLight(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Direction(', ''),
  \ dotnet#method('set_Direction(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('Direction', 'VDirectionalLight3D'),
  \ ])

call dotnet#class('EmissiveMaterial', 'Material', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('EmissiveMaterial(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Color(', ''),
  \ dotnet#method('set_Color(', ''),
  \ dotnet#method('get_Brush(', ''),
  \ dotnet#method('set_Brush(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('Color', 'Color'),
  \ dotnet#prop('Brush', 'Brush'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('GeneralTransform3DGroup', 'GeneralTransform3D', [ 
  \ dotnet#method('GeneralTransform3DGroup(', ''),
  \ dotnet#method('TryTransform(', ''),
  \ dotnet#method('TransformBounds(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('set_Children(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#prop('Inverse', 'GeneralTransform3D'),
  \ dotnet#prop('AffineTransform', 'Transform3D'),
  \ dotnet#prop('Children', 'GeneralTransform3DCollection'),
  \ ])

call dotnet#class('GeneralTransform3DTo2D', 'Freezable', [ 
  \ dotnet#method('GeneralTransform3DTo2D(', ''),
  \ dotnet#method('TryTransform(', ''),
  \ dotnet#method('Transform(', ''),
  \ dotnet#method('TransformBounds(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ ])

call dotnet#class('GeneralTransform2DTo3D', 'Freezable', [ 
  \ dotnet#method('GeneralTransform2DTo3D(', ''),
  \ dotnet#method('TryTransform(', ''),
  \ dotnet#method('Transform(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ ])

call dotnet#class('Geometry3D', 'Animatable', [ 
  \ dotnet#method('Geometry3D(', ''),
  \ dotnet#method('RayHitTest(', ''),
  \ dotnet#method('RayHitTestCore(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('ReleaseOnChannel(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#prop('Bounds', 'Rect3D'),
  \ ])

call dotnet#class('GeometryModel3D', 'Model3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('GeometryModel3D(', ''),
  \ dotnet#method('RayHitTestCore(', ''),
  \ dotnet#method('MaterialPropertyChangedHook(', ''),
  \ dotnet#method('BackMaterialPropertyChangedHook(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Geometry(', ''),
  \ dotnet#method('set_Geometry(', ''),
  \ dotnet#method('get_Material(', ''),
  \ dotnet#method('set_Material(', ''),
  \ dotnet#method('get_BackMaterial(', ''),
  \ dotnet#method('set_BackMaterial(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('Geometry', 'Geometry3D'),
  \ dotnet#prop('Material', 'Material'),
  \ dotnet#prop('BackMaterial', 'Material'),
  \ ])

call dotnet#class('HitTestParameters3D', 'Object', [ 
  \ dotnet#field('CurrentVisual', 'Visual3D'),
  \ dotnet#field('CurrentModel', 'Model3D'),
  \ dotnet#field('CurrentGeometry', 'GeometryModel3D'),
  \ dotnet#method('HitTestParameters3D(', ''),
  \ dotnet#method('PushVisualTransform(', ''),
  \ dotnet#method('PushModelTransform(', ''),
  \ dotnet#method('PopTransform(', ''),
  \ dotnet#method('get_HasWorldTransformMatrix(', ''),
  \ dotnet#method('get_HasModelTransformMatrix(', ''),
  \ dotnet#method('get_HasHitTestProjectionMatrix(', ''),
  \ dotnet#method('set_HitTestProjectionMatrix(', ''),
  \ dotnet#prop('HasWorldTransformMatrix', 'bool'),
  \ dotnet#prop('WorldTransformMatrix', 'Matrix3D'),
  \ dotnet#prop('HasModelTransformMatrix', 'bool'),
  \ dotnet#prop('ModelTransformMatrix', 'Matrix3D'),
  \ dotnet#prop('HasHitTestProjectionMatrix', 'bool'),
  \ dotnet#prop('HitTestProjectionMatrix', 'Matrix3D'),
  \ ])

call dotnet#class('MaterialGroup', 'Material', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('MaterialGroup(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('set_Children(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('Children', 'MaterialCollection'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('Matrix3D', 'ValueType', [ 
  \ dotnet#field('_m11', 'float64'),
  \ dotnet#field('_m12', 'float64'),
  \ dotnet#field('_m13', 'float64'),
  \ dotnet#field('_m14', 'float64'),
  \ dotnet#field('_m21', 'float64'),
  \ dotnet#field('_m22', 'float64'),
  \ dotnet#field('_m23', 'float64'),
  \ dotnet#field('_m24', 'float64'),
  \ dotnet#field('_m31', 'float64'),
  \ dotnet#field('_m32', 'float64'),
  \ dotnet#field('_m33', 'float64'),
  \ dotnet#field('_m34', 'float64'),
  \ dotnet#field('_offsetX', 'float64'),
  \ dotnet#field('_offsetY', 'float64'),
  \ dotnet#field('_offsetZ', 'float64'),
  \ dotnet#field('_m44', 'float64'),
  \ dotnet#field('_isNotKnownToBeIdentity', 'bool'),
  \ dotnet#method('Matrix3D(', ''),
  \ dotnet#method('SetIdentity(', ''),
  \ dotnet#method('get_IsIdentity(', ''),
  \ dotnet#method('Prepend(', ''),
  \ dotnet#method('Append(', ''),
  \ dotnet#method('Rotate(', ''),
  \ dotnet#method('RotatePrepend(', ''),
  \ dotnet#method('RotateAt(', ''),
  \ dotnet#method('RotateAtPrepend(', ''),
  \ dotnet#method('Scale(', ''),
  \ dotnet#method('ScalePrepend(', ''),
  \ dotnet#method('ScaleAt(', ''),
  \ dotnet#method('ScaleAtPrepend(', ''),
  \ dotnet#method('Translate(', ''),
  \ dotnet#method('TranslatePrepend(', ''),
  \ dotnet#method('Multiply(', ''),
  \ dotnet#method('Transform(', ''),
  \ dotnet#method('get_IsAffine(', ''),
  \ dotnet#method('get_Determinant(', ''),
  \ dotnet#method('get_HasInverse(', ''),
  \ dotnet#method('Invert(', ''),
  \ dotnet#method('get_M11(', ''),
  \ dotnet#method('set_M11(', ''),
  \ dotnet#method('get_M12(', ''),
  \ dotnet#method('set_M12(', ''),
  \ dotnet#method('get_M13(', ''),
  \ dotnet#method('set_M13(', ''),
  \ dotnet#method('get_M14(', ''),
  \ dotnet#method('set_M14(', ''),
  \ dotnet#method('get_M21(', ''),
  \ dotnet#method('set_M21(', ''),
  \ dotnet#method('get_M22(', ''),
  \ dotnet#method('set_M22(', ''),
  \ dotnet#method('get_M23(', ''),
  \ dotnet#method('set_M23(', ''),
  \ dotnet#method('get_M24(', ''),
  \ dotnet#method('set_M24(', ''),
  \ dotnet#method('get_M31(', ''),
  \ dotnet#method('set_M31(', ''),
  \ dotnet#method('get_M32(', ''),
  \ dotnet#method('set_M32(', ''),
  \ dotnet#method('get_M33(', ''),
  \ dotnet#method('set_M33(', ''),
  \ dotnet#method('get_M34(', ''),
  \ dotnet#method('set_M34(', ''),
  \ dotnet#method('get_OffsetX(', ''),
  \ dotnet#method('set_OffsetX(', ''),
  \ dotnet#method('get_OffsetY(', ''),
  \ dotnet#method('set_OffsetY(', ''),
  \ dotnet#method('get_OffsetZ(', ''),
  \ dotnet#method('set_OffsetZ(', ''),
  \ dotnet#method('get_M44(', ''),
  \ dotnet#method('set_M44(', ''),
  \ dotnet#method('SetScaleMatrix(', ''),
  \ dotnet#method('SetTranslationMatrix(', ''),
  \ dotnet#method('CreateRotationMatrix(', ''),
  \ dotnet#method('MultiplyPoint(', ''),
  \ dotnet#method('MultiplyVMatrix3D(', ''),
  \ dotnet#method('GetNormalizedAffineDeterminant(', ''),
  \ dotnet#method('NormalizedAffineInvert(', ''),
  \ dotnet#method('InvertCore(', ''),
  \ dotnet#method('op_Equality(', ''),
  \ dotnet#method('op_Inequality(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Identity', 'Matrix3D'),
  \ dotnet#prop('IsIdentity', 'bool'),
  \ dotnet#prop('IsAffine', 'bool'),
  \ dotnet#prop('Determinant', 'float64'),
  \ dotnet#prop('HasInverse', 'bool'),
  \ dotnet#prop('M11', 'float64'),
  \ dotnet#prop('M12', 'float64'),
  \ dotnet#prop('M13', 'float64'),
  \ dotnet#prop('M14', 'float64'),
  \ dotnet#prop('M21', 'float64'),
  \ dotnet#prop('M22', 'float64'),
  \ dotnet#prop('M23', 'float64'),
  \ dotnet#prop('M24', 'float64'),
  \ dotnet#prop('M31', 'float64'),
  \ dotnet#prop('M32', 'float64'),
  \ dotnet#prop('M33', 'float64'),
  \ dotnet#prop('M34', 'float64'),
  \ dotnet#prop('OffsetX', 'float64'),
  \ dotnet#prop('OffsetY', 'float64'),
  \ dotnet#prop('OffsetZ', 'float64'),
  \ dotnet#prop('M44', 'float64'),
  \ ])

call dotnet#class('MatrixCamera', 'Camera', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('MatrixCamera(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_ViewMatrix(', ''),
  \ dotnet#method('set_ViewMatrix(', ''),
  \ dotnet#method('get_ProjectionMatrix(', ''),
  \ dotnet#method('set_ProjectionMatrix(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('ViewMatrix', 'Matrix3D'),
  \ dotnet#prop('ProjectionMatrix', 'Matrix3D'),
  \ ])

call dotnet#class('MatrixTransform3D', 'Transform3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('MatrixTransform3D(', ''),
  \ dotnet#method('get_IsAffine(', ''),
  \ dotnet#method('Append(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Matrix(', ''),
  \ dotnet#method('set_Matrix(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('Value', 'Matrix3D'),
  \ dotnet#prop('IsAffine', 'bool'),
  \ dotnet#prop('Matrix', 'Matrix3D'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('MeshGeometry3D', 'Geometry3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('MeshGeometry3D(', ''),
  \ dotnet#method('OnPropertyChanged(', ''),
  \ dotnet#method('GetTextureCoordinateBounds(', ''),
  \ dotnet#method('RayHitTestCore(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Positions(', ''),
  \ dotnet#method('set_Positions(', ''),
  \ dotnet#method('get_Normals(', ''),
  \ dotnet#method('set_Normals(', ''),
  \ dotnet#method('get_TextureCoordinates(', ''),
  \ dotnet#method('set_TextureCoordinates(', ''),
  \ dotnet#method('get_TriangleIndices(', ''),
  \ dotnet#method('set_TriangleIndices(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('Bounds', 'Rect3D'),
  \ dotnet#prop('Positions', 'Point3DCollection'),
  \ dotnet#prop('Normals', 'VMeshGeometry3D3DCollection'),
  \ dotnet#prop('TextureCoordinates', 'PointCollection'),
  \ dotnet#prop('TriangleIndices', 'Int32Collection'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('Model3DGroup', 'Model3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('Model3DGroup(', ''),
  \ dotnet#method('RayHitTestCore(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('set_Children(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('EmptyGroup', 'Model3DGroup'),
  \ dotnet#prop('Children', 'Model3DCollection'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('ModelUIElement3D', 'UIElement3D', [ 
  \ dotnet#method('ModelUIElement3D(', ''),
  \ dotnet#method('get_Model(', ''),
  \ dotnet#method('set_Model(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#prop('Model', 'Model3D'),
  \ ])

call dotnet#class('ModelVisual3D', 'Visual3D', [ 
  \ dotnet#method('ModelVisual3D(', ''),
  \ dotnet#method('get_Visual3DChildrenCount(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('get_Content(', ''),
  \ dotnet#method('set_Content(', ''),
  \ dotnet#method('get_Transform(', ''),
  \ dotnet#method('set_Transform(', ''),
  \ dotnet#prop('Visual3DChildrenCount', 'int32'),
  \ dotnet#prop('Children', 'Visual3DCollection'),
  \ dotnet#prop('Content', 'Model3D'),
  \ dotnet#prop('Transform', 'Transform3D'),
  \ ])

call dotnet#class('Point3D', 'ValueType', [ 
  \ dotnet#field('_x', 'float64'),
  \ dotnet#field('_y', 'float64'),
  \ dotnet#field('_z', 'float64'),
  \ dotnet#method('Point3D(', ''),
  \ dotnet#method('Offset(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Subtract(', ''),
  \ dotnet#method('Multiply(', ''),
  \ dotnet#method('op_Equality(', ''),
  \ dotnet#method('op_Inequality(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#method('get_X(', ''),
  \ dotnet#method('set_X(', ''),
  \ dotnet#method('get_Y(', ''),
  \ dotnet#method('set_Y(', ''),
  \ dotnet#method('get_Z(', ''),
  \ dotnet#method('set_Z(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('X', 'float64'),
  \ dotnet#prop('Y', 'float64'),
  \ dotnet#prop('Z', 'float64'),
  \ ])

call dotnet#class('Point3DCollection', 'Freezable', [ 
  \ dotnet#field('_current', 'Point3D'),
  \ dotnet#field('_list', 'Point3DCollection'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#method('Point3DCollection(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Current', 'Point3D'),
  \ dotnet#field('_collection', 'FrugalStructList'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#method('DeserializeFrom(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveAtWithoutFiringPublicEvents(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Internal_GetItem(', ''),
  \ dotnet#method('AddWithoutFiringPublicEvents(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#prop('Item(int32)', 'Point3D'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Empty', 'Point3DCollection'),
  \ ])

call dotnet#class('VVector3DCollection3DCollection', 'Freezable', [ 
  \ dotnet#field('_current', 'VVector3DCollection3D'),
  \ dotnet#field('_list', 'VVector3DCollection3DCollection'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#method('Vector3DCollection(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Current', 'VVector3DCollection3D'),
  \ dotnet#field('_collection', 'FrugalStructList'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#method('DeserializeFrom(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveAtWithoutFiringPublicEvents(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Internal_GetItem(', ''),
  \ dotnet#method('AddWithoutFiringPublicEvents(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#prop('Item(int32)', 'VVector3DCollection3D'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Empty', 'VVector3DCollection3DCollection'),
  \ ])

call dotnet#class('Point4D', 'ValueType', [ 
  \ dotnet#field('_x', 'float64'),
  \ dotnet#field('_y', 'float64'),
  \ dotnet#field('_z', 'float64'),
  \ dotnet#field('_w', 'float64'),
  \ dotnet#method('Point4D(', ''),
  \ dotnet#method('Offset(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Subtract(', ''),
  \ dotnet#method('Multiply(', ''),
  \ dotnet#method('op_Equality(', ''),
  \ dotnet#method('op_Inequality(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#method('get_X(', ''),
  \ dotnet#method('set_X(', ''),
  \ dotnet#method('get_Y(', ''),
  \ dotnet#method('set_Y(', ''),
  \ dotnet#method('get_Z(', ''),
  \ dotnet#method('set_Z(', ''),
  \ dotnet#method('get_W(', ''),
  \ dotnet#method('set_W(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('X', 'float64'),
  \ dotnet#prop('Y', 'float64'),
  \ dotnet#prop('Z', 'float64'),
  \ dotnet#prop('W', 'float64'),
  \ ])

call dotnet#class('PointLightBase', 'Light', [ 
  \ dotnet#method('PointLightBase(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Position(', ''),
  \ dotnet#method('set_Position(', ''),
  \ dotnet#method('get_Range(', ''),
  \ dotnet#method('set_Range(', ''),
  \ dotnet#method('get_ConstantAttenuation(', ''),
  \ dotnet#method('set_ConstantAttenuation(', ''),
  \ dotnet#method('get_LinearAttenuation(', ''),
  \ dotnet#method('set_LinearAttenuation(', ''),
  \ dotnet#method('get_QuadraticAttenuation(', ''),
  \ dotnet#method('set_QuadraticAttenuation(', ''),
  \ dotnet#prop('Position', 'Point3D'),
  \ dotnet#prop('Range', 'float64'),
  \ dotnet#prop('ConstantAttenuation', 'float64'),
  \ dotnet#prop('LinearAttenuation', 'float64'),
  \ dotnet#prop('QuadraticAttenuation', 'float64'),
  \ ])

call dotnet#class('PointLight', 'PointLightBase', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('PointLight(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ ])

call dotnet#class('ProjectionCamera', 'Camera', [ 
  \ dotnet#method('ProjectionCamera(', ''),
  \ dotnet#method('CreateViewMatrix(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_NearPlaneDistance(', ''),
  \ dotnet#method('set_NearPlaneDistance(', ''),
  \ dotnet#method('get_FarPlaneDistance(', ''),
  \ dotnet#method('set_FarPlaneDistance(', ''),
  \ dotnet#method('get_Position(', ''),
  \ dotnet#method('set_Position(', ''),
  \ dotnet#method('get_LookDirection(', ''),
  \ dotnet#method('set_LookDirection(', ''),
  \ dotnet#method('get_UpDirection(', ''),
  \ dotnet#method('set_UpDirection(', ''),
  \ dotnet#prop('NearPlaneDistance', 'float64'),
  \ dotnet#prop('FarPlaneDistance', 'float64'),
  \ dotnet#prop('Position', 'Point3D'),
  \ dotnet#prop('LookDirection', 'VProjectionCamera3D'),
  \ dotnet#prop('UpDirection', 'VProjectionCamera3D'),
  \ ])

call dotnet#class('OrthographicCamera', 'ProjectionCamera', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('OrthographicCamera(', ''),
  \ dotnet#method('GetProjectionMatrix(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Width(', ''),
  \ dotnet#method('set_Width(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('Width', 'float64'),
  \ ])

call dotnet#class('PerspectiveCamera', 'ProjectionCamera', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('PerspectiveCamera(', ''),
  \ dotnet#method('GetProjectionMatrix(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_FieldOfView(', ''),
  \ dotnet#method('set_FieldOfView(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('FieldOfView', 'float64'),
  \ ])

call dotnet#class('Quaternion', 'ValueType', [ 
  \ dotnet#field('_x', 'float64'),
  \ dotnet#field('_y', 'float64'),
  \ dotnet#field('_z', 'float64'),
  \ dotnet#field('_w', 'float64'),
  \ dotnet#field('_isNotDistinguishedIdentity', 'bool'),
  \ dotnet#method('Quaternion(', ''),
  \ dotnet#method('get_Axis(', ''),
  \ dotnet#method('get_Angle(', ''),
  \ dotnet#method('get_IsNormalized(', ''),
  \ dotnet#method('get_IsIdentity(', ''),
  \ dotnet#method('Conjugate(', ''),
  \ dotnet#method('Invert(', ''),
  \ dotnet#method('Normalize(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Subtract(', ''),
  \ dotnet#method('Multiply(', ''),
  \ dotnet#method('Slerp(', ''),
  \ dotnet#method('get_X(', ''),
  \ dotnet#method('set_X(', ''),
  \ dotnet#method('get_Y(', ''),
  \ dotnet#method('set_Y(', ''),
  \ dotnet#method('get_Z(', ''),
  \ dotnet#method('set_Z(', ''),
  \ dotnet#method('get_W(', ''),
  \ dotnet#method('set_W(', ''),
  \ dotnet#method('op_Equality(', ''),
  \ dotnet#method('op_Inequality(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Identity', 'Quaternion'),
  \ dotnet#prop('Axis', 'VQuaternion3D'),
  \ dotnet#prop('Angle', 'float64'),
  \ dotnet#prop('IsNormalized', 'bool'),
  \ dotnet#prop('IsIdentity', 'bool'),
  \ dotnet#prop('X', 'float64'),
  \ dotnet#prop('Y', 'float64'),
  \ dotnet#prop('Z', 'float64'),
  \ dotnet#prop('W', 'float64'),
  \ ])

call dotnet#class('QuaternionRotation3D', 'Rotation3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('QuaternionRotation3D(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Quaternion(', ''),
  \ dotnet#method('set_Quaternion(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('InternalQuaternion', 'Quaternion'),
  \ dotnet#prop('Quaternion', 'Quaternion'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('RayHitTestResult', 'HitTestResult', [ 
  \ dotnet#method('RayHitTestResult(', ''),
  \ dotnet#method('get_VisualHit(', ''),
  \ dotnet#method('get_ModelHit(', ''),
  \ dotnet#method('get_DistanceToRayOrigin(', ''),
  \ dotnet#method('SetDistanceToRayOrigin(', ''),
  \ dotnet#method('CompareByDistanceToRayOrigin(', ''),
  \ dotnet#prop('VisualHit', 'Visual3D'),
  \ dotnet#prop('ModelHit', 'Model3D'),
  \ dotnet#prop('PointHit', 'Point3D'),
  \ dotnet#prop('DistanceToRayOrigin', 'float64'),
  \ ])

call dotnet#class('RayHitTestParameters', 'HitTestParameters3D', [ 
  \ dotnet#method('RayHitTestParameters(', ''),
  \ dotnet#method('get_Origin(', ''),
  \ dotnet#method('get_Direction(', ''),
  \ dotnet#method('ReportResult(', ''),
  \ dotnet#method('RaiseCallback(', ''),
  \ dotnet#method('GetLocalLine(', ''),
  \ dotnet#method('ClearResults(', ''),
  \ dotnet#method('get_IsRay(', ''),
  \ dotnet#prop('Origin', 'Point3D'),
  \ dotnet#prop('Direction', 'VRayHitTestParameters3D'),
  \ dotnet#prop('IsRay', 'bool'),
  \ ])

call dotnet#class('RayMeshGeometry3DHitTestResult', 'RayHitTestResult', [ 
  \ dotnet#method('RayMeshGeometry3DHitTestResult(', ''),
  \ dotnet#method('get_DistanceToRayOrigin(', ''),
  \ dotnet#method('get_VertexIndex1(', ''),
  \ dotnet#method('get_VertexIndex2(', ''),
  \ dotnet#method('get_VertexIndex3(', ''),
  \ dotnet#method('get_VertexWeight1(', ''),
  \ dotnet#method('get_VertexWeight2(', ''),
  \ dotnet#method('get_VertexWeight3(', ''),
  \ dotnet#method('get_MeshHit(', ''),
  \ dotnet#method('SetDistanceToRayOrigin(', ''),
  \ dotnet#prop('PointHit', 'Point3D'),
  \ dotnet#prop('DistanceToRayOrigin', 'float64'),
  \ dotnet#prop('VertexIndex1', 'int32'),
  \ dotnet#prop('VertexIndex2', 'int32'),
  \ dotnet#prop('VertexIndex3', 'int32'),
  \ dotnet#prop('VertexWeight1', 'float64'),
  \ dotnet#prop('VertexWeight2', 'float64'),
  \ dotnet#prop('VertexWeight3', 'float64'),
  \ dotnet#prop('MeshHit', 'MeshGeometry3D'),
  \ ])

call dotnet#class('Rect3D', 'ValueType', [ 
  \ dotnet#field('_x', 'float64'),
  \ dotnet#field('_y', 'float64'),
  \ dotnet#field('_z', 'float64'),
  \ dotnet#field('_sizeX', 'float64'),
  \ dotnet#field('_sizeY', 'float64'),
  \ dotnet#field('_sizeZ', 'float64'),
  \ dotnet#method('Rect3D(', ''),
  \ dotnet#method('get_IsEmpty(', ''),
  \ dotnet#method('get_Location(', ''),
  \ dotnet#method('set_Location(', ''),
  \ dotnet#method('get_Size(', ''),
  \ dotnet#method('set_Size(', ''),
  \ dotnet#method('get_SizeX(', ''),
  \ dotnet#method('set_SizeX(', ''),
  \ dotnet#method('get_SizeY(', ''),
  \ dotnet#method('set_SizeY(', ''),
  \ dotnet#method('get_SizeZ(', ''),
  \ dotnet#method('set_SizeZ(', ''),
  \ dotnet#method('get_X(', ''),
  \ dotnet#method('set_X(', ''),
  \ dotnet#method('get_Y(', ''),
  \ dotnet#method('set_Y(', ''),
  \ dotnet#method('get_Z(', ''),
  \ dotnet#method('set_Z(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IntersectsWith(', ''),
  \ dotnet#method('Intersect(', ''),
  \ dotnet#method('Union(', ''),
  \ dotnet#method('Offset(', ''),
  \ dotnet#method('op_Equality(', ''),
  \ dotnet#method('op_Inequality(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Empty', 'Rect3D'),
  \ dotnet#prop('IsEmpty', 'bool'),
  \ dotnet#prop('Location', 'Point3D'),
  \ dotnet#prop('Size', 'Size3D'),
  \ dotnet#prop('SizeX', 'float64'),
  \ dotnet#prop('SizeY', 'float64'),
  \ dotnet#prop('SizeZ', 'float64'),
  \ dotnet#prop('X', 'float64'),
  \ dotnet#prop('Y', 'float64'),
  \ dotnet#prop('Z', 'float64'),
  \ ])

call dotnet#class('RotateTransform3D', 'AffineTransform3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('RotateTransform3D(', ''),
  \ dotnet#method('Append(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_CenterX(', ''),
  \ dotnet#method('set_CenterX(', ''),
  \ dotnet#method('get_CenterY(', ''),
  \ dotnet#method('set_CenterY(', ''),
  \ dotnet#method('get_CenterZ(', ''),
  \ dotnet#method('set_CenterZ(', ''),
  \ dotnet#method('get_Rotation(', ''),
  \ dotnet#method('set_Rotation(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('Value', 'Matrix3D'),
  \ dotnet#prop('CenterX', 'float64'),
  \ dotnet#prop('CenterY', 'float64'),
  \ dotnet#prop('CenterZ', 'float64'),
  \ dotnet#prop('Rotation', 'Rotation3D'),
  \ ])

call dotnet#class('ScaleTransform3D', 'AffineTransform3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('ScaleTransform3D(', ''),
  \ dotnet#method('Append(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_ScaleX(', ''),
  \ dotnet#method('set_ScaleX(', ''),
  \ dotnet#method('get_ScaleY(', ''),
  \ dotnet#method('set_ScaleY(', ''),
  \ dotnet#method('get_ScaleZ(', ''),
  \ dotnet#method('set_ScaleZ(', ''),
  \ dotnet#method('get_CenterX(', ''),
  \ dotnet#method('set_CenterX(', ''),
  \ dotnet#method('get_CenterY(', ''),
  \ dotnet#method('set_CenterY(', ''),
  \ dotnet#method('get_CenterZ(', ''),
  \ dotnet#method('set_CenterZ(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('Value', 'Matrix3D'),
  \ dotnet#prop('ScaleX', 'float64'),
  \ dotnet#prop('ScaleY', 'float64'),
  \ dotnet#prop('ScaleZ', 'float64'),
  \ dotnet#prop('CenterX', 'float64'),
  \ dotnet#prop('CenterY', 'float64'),
  \ dotnet#prop('CenterZ', 'float64'),
  \ ])

call dotnet#class('Size3D', 'ValueType', [ 
  \ dotnet#field('_x', 'float64'),
  \ dotnet#field('_y', 'float64'),
  \ dotnet#field('_z', 'float64'),
  \ dotnet#method('Size3D(', ''),
  \ dotnet#method('get_IsEmpty(', ''),
  \ dotnet#method('get_X(', ''),
  \ dotnet#method('set_X(', ''),
  \ dotnet#method('get_Y(', ''),
  \ dotnet#method('set_Y(', ''),
  \ dotnet#method('get_Z(', ''),
  \ dotnet#method('set_Z(', ''),
  \ dotnet#method('op_Equality(', ''),
  \ dotnet#method('op_Inequality(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Empty', 'Size3D'),
  \ dotnet#prop('IsEmpty', 'bool'),
  \ dotnet#prop('X', 'float64'),
  \ dotnet#prop('Y', 'float64'),
  \ dotnet#prop('Z', 'float64'),
  \ ])

call dotnet#class('SpecularMaterial', 'Material', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('SpecularMaterial(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Color(', ''),
  \ dotnet#method('set_Color(', ''),
  \ dotnet#method('get_Brush(', ''),
  \ dotnet#method('set_Brush(', ''),
  \ dotnet#method('get_SpecularPower(', ''),
  \ dotnet#method('set_SpecularPower(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('Color', 'Color'),
  \ dotnet#prop('Brush', 'Brush'),
  \ dotnet#prop('SpecularPower', 'float64'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('SpotLight', 'PointLightBase', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('SpotLight(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Direction(', ''),
  \ dotnet#method('set_Direction(', ''),
  \ dotnet#method('get_OuterConeAngle(', ''),
  \ dotnet#method('set_OuterConeAngle(', ''),
  \ dotnet#method('get_InnerConeAngle(', ''),
  \ dotnet#method('set_InnerConeAngle(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('Direction', 'VSpotLight3D'),
  \ dotnet#prop('OuterConeAngle', 'float64'),
  \ dotnet#prop('InnerConeAngle', 'float64'),
  \ ])

call dotnet#class('Transform3DGroup', 'Transform3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('Transform3DGroup(', ''),
  \ dotnet#method('get_IsAffine(', ''),
  \ dotnet#method('Append(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('set_Children(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('Value', 'Matrix3D'),
  \ dotnet#prop('IsAffine', 'bool'),
  \ dotnet#prop('Children', 'Transform3DCollection'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('TranslateTransform3D', 'AffineTransform3D', [ 
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('TranslateTransform3D(', ''),
  \ dotnet#method('Append(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_OffsetX(', ''),
  \ dotnet#method('set_OffsetX(', ''),
  \ dotnet#method('get_OffsetY(', ''),
  \ dotnet#method('set_OffsetY(', ''),
  \ dotnet#method('get_OffsetZ(', ''),
  \ dotnet#method('set_OffsetZ(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#prop('Value', 'Matrix3D'),
  \ dotnet#prop('OffsetX', 'float64'),
  \ dotnet#prop('OffsetY', 'float64'),
  \ dotnet#prop('OffsetZ', 'float64'),
  \ ])

call dotnet#class('VVector3D3D', 'ValueType', [ 
  \ dotnet#field('_x', 'float64'),
  \ dotnet#field('_y', 'float64'),
  \ dotnet#field('_z', 'float64'),
  \ dotnet#method('Vector3D(', ''),
  \ dotnet#method('get_Length(', ''),
  \ dotnet#method('get_LengthSquared(', ''),
  \ dotnet#method('Normalize(', ''),
  \ dotnet#method('AngleBetween(', ''),
  \ dotnet#method('Negate(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Subtract(', ''),
  \ dotnet#method('Multiply(', ''),
  \ dotnet#method('Divide(', ''),
  \ dotnet#method('DotProduct(', ''),
  \ dotnet#method('CrossProduct(', ''),
  \ dotnet#method('op_Equality(', ''),
  \ dotnet#method('op_Inequality(', ''),
  \ dotnet#method('Equals(', ''),
  \ dotnet#method('GetHashCode(', ''),
  \ dotnet#method('Parse(', ''),
  \ dotnet#method('get_X(', ''),
  \ dotnet#method('set_X(', ''),
  \ dotnet#method('get_Y(', ''),
  \ dotnet#method('set_Y(', ''),
  \ dotnet#method('get_Z(', ''),
  \ dotnet#method('set_Z(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#prop('Length', 'float64'),
  \ dotnet#prop('LengthSquared', 'float64'),
  \ dotnet#prop('X', 'float64'),
  \ dotnet#prop('Y', 'float64'),
  \ dotnet#prop('Z', 'float64'),
  \ ])

call dotnet#class('Viewport2DVisual3D', 'Visual3D', [ 
  \ dotnet#method('Viewport2DVisual3D(', ''),
  \ dotnet#method('Get3DPointFor2DCoordinate(', ''),
  \ dotnet#method('TextureCoordsToVisualCoords(', ''),
  \ dotnet#method('GetIntersectionInfo(', ''),
  \ dotnet#method('VisualCoordsToTextureCoords(', ''),
  \ dotnet#method('get_Visual(', ''),
  \ dotnet#method('set_Visual(', ''),
  \ dotnet#method('OnVisualChanged(', ''),
  \ dotnet#method('get_Geometry(', ''),
  \ dotnet#method('set_Geometry(', ''),
  \ dotnet#method('OnGeometryChanged(', ''),
  \ dotnet#method('set_InternalPositionsCache(', ''),
  \ dotnet#method('set_InternalTextureCoordinatesCache(', ''),
  \ dotnet#method('set_InternalTriangleIndicesCache(', ''),
  \ dotnet#method('get_Material(', ''),
  \ dotnet#method('set_Material(', ''),
  \ dotnet#method('OnMaterialPropertyChanged(', ''),
  \ dotnet#method('SetIsVisualHostMaterial(', ''),
  \ dotnet#method('GetIsVisualHostMaterial(', ''),
  \ dotnet#method('get_CacheMode(', ''),
  \ dotnet#method('set_CacheMode(', ''),
  \ dotnet#method('OnCacheModeChanged(', ''),
  \ dotnet#method('get_Visual3DChildrenCount(', ''),
  \ dotnet#method('GetVisual3DChild(', ''),
  \ dotnet#method('get_InternalVisual2DOr3DChildrenCount(', ''),
  \ dotnet#prop('Visual', 'Visual'),
  \ dotnet#prop('Geometry', 'Geometry3D'),
  \ dotnet#prop('InternalPositionsCache', 'Point3DCollection'),
  \ dotnet#prop('InternalTextureCoordinatesCache', 'PointCollection'),
  \ dotnet#prop('InternalTriangleIndicesCache', 'Int32Collection'),
  \ dotnet#prop('Material', 'Material'),
  \ dotnet#prop('CacheMode', 'CacheMode'),
  \ dotnet#prop('Visual3DChildrenCount', 'int32'),
  \ dotnet#prop('InternalVisual2DOr3DChildrenCount', 'int32'),
  \ ])

call dotnet#class('Viewport3DVisual', 'Visual', [ 
  \ dotnet#method('Viewport3DVisual(', ''),
  \ dotnet#method('get_Parent(', ''),
  \ dotnet#method('get_Clip(', ''),
  \ dotnet#method('set_Clip(', ''),
  \ dotnet#method('get_Opacity(', ''),
  \ dotnet#method('set_Opacity(', ''),
  \ dotnet#method('get_OpacityMask(', ''),
  \ dotnet#method('set_OpacityMask(', ''),
  \ dotnet#method('get_BitmapEffect(', ''),
  \ dotnet#method('set_BitmapEffect(', ''),
  \ dotnet#method('get_BitmapEffectInput(', ''),
  \ dotnet#method('set_BitmapEffectInput(', ''),
  \ dotnet#method('HitTest(', ''),
  \ dotnet#method('get_ContentBounds(', ''),
  \ dotnet#method('get_Transform(', ''),
  \ dotnet#method('set_Transform(', ''),
  \ dotnet#method('get_Offset(', ''),
  \ dotnet#method('set_Offset(', ''),
  \ dotnet#method('get_DescendantBounds(', ''),
  \ dotnet#method('get_Camera(', ''),
  \ dotnet#method('set_Camera(', ''),
  \ dotnet#method('get_Viewport(', ''),
  \ dotnet#method('set_Viewport(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('VerifyAPIReadOnly(', ''),
  \ dotnet#method('VerifyAPIReadWrite(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('RemoveChild(', ''),
  \ dotnet#method('GetChildrenCount(', ''),
  \ dotnet#method('get_InternalVisual2DOr3DChildrenCount(', ''),
  \ dotnet#method('HitTestCore(', ''),
  \ dotnet#method('WorldToViewport(', ''),
  \ dotnet#method('ComputeSubgraphBounds3D(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#method('PrecomputeContent(', ''),
  \ dotnet#method('RenderContent(', ''),
  \ dotnet#method('FreeContent(', ''),
  \ dotnet#method('Visual3DTreeChanged(', ''),
  \ dotnet#method('SetInheritanceContextForChildren(', ''),
  \ dotnet#prop('Parent', 'DependencyObject'),
  \ dotnet#prop('Clip', 'Geometry'),
  \ dotnet#prop('Opacity', 'float64'),
  \ dotnet#prop('OpacityMask', 'Brush'),
  \ dotnet#prop('BitmapEffect', 'BitmapEffect'),
  \ dotnet#prop('BitmapEffectInput', 'BitmapEffectInput'),
  \ dotnet#prop('ContentBounds', 'Rect'),
  \ dotnet#prop('Transform', 'Transform'),
  \ dotnet#prop('Offset', 'VViewport3DVisual'),
  \ dotnet#prop('DescendantBounds', 'Rect'),
  \ dotnet#prop('Camera', 'Camera'),
  \ dotnet#prop('Viewport', 'Rect'),
  \ dotnet#prop('Children', 'Visual3DCollection'),
  \ dotnet#prop('InternalVisual2DOr3DChildrenCount', 'int32'),
  \ ])

call dotnet#class('Visual3DCollection', 'Object', [ 
  \ dotnet#field('_list', 'Visual3DCollection'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#field('_version', 'int32'),
  \ dotnet#method('Visual3DCollection(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Current', 'Visual3D'),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('InternalGetItem(', ''),
  \ dotnet#method('get_InternalCount(', ''),
  \ dotnet#prop('Item(int32)', 'Visual3D'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('InternalCount', 'int32'),
  \ ])

call dotnet#class('GeneralTransform3DCollection', 'Animatable', [ 
  \ dotnet#field('_current', 'GeneralTransform3D'),
  \ dotnet#field('_list', 'GeneralTransform3DCollection'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#method('GeneralTransform3DCollection(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Current', 'GeneralTransform3D'),
  \ dotnet#field('_collection', 'FrugalStructList'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveAtWithoutFiringPublicEvents(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Internal_GetItem(', ''),
  \ dotnet#method('OnInheritanceContextChangedCore(', ''),
  \ dotnet#method('AddWithoutFiringPublicEvents(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('FreezeCore(', ''),
  \ dotnet#prop('Item(int32)', 'GeneralTransform3D'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Empty', 'GeneralTransform3DCollection'),
  \ ])

call dotnet#class('MaterialCollection', 'Animatable', [ 
  \ dotnet#field('_current', 'Material'),
  \ dotnet#field('_list', 'MaterialCollection'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#method('MaterialCollection(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Current', 'Material'),
  \ dotnet#field('_collection', 'FrugalStructList'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveAtWithoutFiringPublicEvents(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Internal_GetItem(', ''),
  \ dotnet#method('OnInheritanceContextChangedCore(', ''),
  \ dotnet#method('AddWithoutFiringPublicEvents(', ''),
  \ dotnet#method('add_ItemInserted(', ''),
  \ dotnet#method('remove_ItemInserted(', ''),
  \ dotnet#method('add_ItemRemoved(', ''),
  \ dotnet#method('remove_ItemRemoved(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('FreezeCore(', ''),
  \ dotnet#event('ItemInserted', 'ItemInsertedHandler'),
  \ dotnet#event('ItemRemoved', 'ItemRemovedHandler'),
  \ dotnet#prop('Item(int32)', 'Material'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Empty', 'MaterialCollection'),
  \ ])

call dotnet#class('Matrix3DConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('Matrix3DConverter(', ''),
  \ ])

call dotnet#class('Model3DCollection', 'Animatable', [ 
  \ dotnet#field('_current', 'Model3D'),
  \ dotnet#field('_list', 'Model3DCollection'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#method('Model3DCollection(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Current', 'Model3D'),
  \ dotnet#field('_collection', 'FrugalStructList'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveAtWithoutFiringPublicEvents(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Internal_GetItem(', ''),
  \ dotnet#method('OnInheritanceContextChangedCore(', ''),
  \ dotnet#method('AddWithoutFiringPublicEvents(', ''),
  \ dotnet#method('add_ItemInserted(', ''),
  \ dotnet#method('remove_ItemInserted(', ''),
  \ dotnet#method('add_ItemRemoved(', ''),
  \ dotnet#method('remove_ItemRemoved(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('FreezeCore(', ''),
  \ dotnet#event('ItemInserted', 'ItemInsertedHandler'),
  \ dotnet#event('ItemRemoved', 'ItemRemovedHandler'),
  \ dotnet#prop('Item(int32)', 'Model3D'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Empty', 'Model3DCollection'),
  \ ])

call dotnet#class('Point3DConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('Point3DConverter(', ''),
  \ ])

call dotnet#class('Point3DCollectionConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('Point3DCollectionConverter(', ''),
  \ ])

call dotnet#class('Point4DConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('Point4DConverter(', ''),
  \ ])

call dotnet#class('QuaternionConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('QuaternionConverter(', ''),
  \ ])

call dotnet#class('Rect3DConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('Rect3DConverter(', ''),
  \ ])

call dotnet#class('Size3DConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('Size3DConverter(', ''),
  \ ])

call dotnet#class('Transform3DCollection', 'Animatable', [ 
  \ dotnet#field('_current', 'Transform3D'),
  \ dotnet#field('_list', 'Transform3DCollection'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#field('_index', 'int32'),
  \ dotnet#method('Transform3DCollection(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('MoveNext(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('get_Current(', ''),
  \ dotnet#prop('Current', 'object'),
  \ dotnet#prop('Current', 'Transform3D'),
  \ dotnet#field('_collection', 'FrugalStructList'),
  \ dotnet#field('_version', 'uint32'),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveAtWithoutFiringPublicEvents(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('Internal_GetItem(', ''),
  \ dotnet#method('OnInheritanceContextChangedCore(', ''),
  \ dotnet#method('AddWithoutFiringPublicEvents(', ''),
  \ dotnet#method('add_ItemInserted(', ''),
  \ dotnet#method('remove_ItemInserted(', ''),
  \ dotnet#method('add_ItemRemoved(', ''),
  \ dotnet#method('remove_ItemRemoved(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('FreezeCore(', ''),
  \ dotnet#event('ItemInserted', 'ItemInsertedHandler'),
  \ dotnet#event('ItemRemoved', 'ItemRemovedHandler'),
  \ dotnet#prop('Item(int32)', 'Transform3D'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Empty', 'Transform3DCollection'),
  \ ])

call dotnet#class('VVector3DConverter3DConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('Vector3DConverter(', ''),
  \ ])

call dotnet#class('VVector3DCollectionConverter3DCollectionConverter', 'TypeConverter', [ 
  \ dotnet#method('CanConvertFrom(', ''),
  \ dotnet#method('CanConvertTo(', ''),
  \ dotnet#method('ConvertFrom(', ''),
  \ dotnet#method('ConvertTo(', ''),
  \ dotnet#method('Vector3DCollectionConverter(', ''),
  \ ])


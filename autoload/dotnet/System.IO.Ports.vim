call dotnet#namespace('System.IO.Ports')

call dotnet#class('SerialErrorReceivedEventArgs', 'EventArgs', [ 
  \ dotnet#method('get_EventType(', ')', 'SerialError'),
  \ dotnet#prop('EventType', 'SerialError'),
  \ ])

call dotnet#class('SerialErrorReceivedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('SerialErrorReceivedEventHandler(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', 'object sender, SerialErrorReceivedEventArgs e)', 'void'),
  \ dotnet#method('BeginInvoke(', 'object sender, SerialErrorReceivedEventArgs e, AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'void'),
  \ ])

call dotnet#class('SerialPinChangedEventArgs', 'EventArgs', [ 
  \ dotnet#method('get_EventType(', ')', 'SerialPinChange'),
  \ dotnet#prop('EventType', 'SerialPinChange'),
  \ ])

call dotnet#class('SerialPinChangedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('SerialPinChangedEventHandler(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', 'object sender, SerialPinChangedEventArgs e)', 'void'),
  \ dotnet#method('BeginInvoke(', 'object sender, SerialPinChangedEventArgs e, AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'void'),
  \ ])

call dotnet#class('SerialPort', 'Component', [ 
  \ dotnet#method('add_ErrorReceived(', 'class SerialErrorReceivedEventHandler value)', 'void'),
  \ dotnet#method('remove_ErrorReceived(', 'class SerialErrorReceivedEventHandler value)', 'void'),
  \ dotnet#method('add_PinChanged(', 'class SerialPinChangedEventHandler value)', 'void'),
  \ dotnet#method('remove_PinChanged(', 'class SerialPinChangedEventHandler value)', 'void'),
  \ dotnet#method('add_DataReceived(', 'class SerialDataReceivedEventHandler value)', 'void'),
  \ dotnet#method('remove_DataReceived(', 'class SerialDataReceivedEventHandler value)', 'void'),
  \ dotnet#method('get_BaseStream(', ')', 'Stream'),
  \ dotnet#method('get_BaudRate(', ')', 'int32'),
  \ dotnet#method('set_BaudRate(', 'int32 value)', 'void'),
  \ dotnet#method('get_BreakState(', ')', 'bool'),
  \ dotnet#method('set_BreakState(', 'bool value)', 'void'),
  \ dotnet#method('get_BytesToWrite(', ')', 'int32'),
  \ dotnet#method('get_BytesToRead(', ')', 'int32'),
  \ dotnet#method('get_CDHolding(', ')', 'bool'),
  \ dotnet#method('get_CtsHolding(', ')', 'bool'),
  \ dotnet#method('get_DataBits(', ')', 'int32'),
  \ dotnet#method('set_DataBits(', 'int32 value)', 'void'),
  \ dotnet#method('get_DiscardNull(', ')', 'bool'),
  \ dotnet#method('set_DiscardNull(', 'bool value)', 'void'),
  \ dotnet#method('get_DsrHolding(', ')', 'bool'),
  \ dotnet#method('get_DtrEnable(', ')', 'bool'),
  \ dotnet#method('set_DtrEnable(', 'bool value)', 'void'),
  \ dotnet#method('get_Encoding(', ')', 'Encoding'),
  \ dotnet#method('set_Encoding(', 'class Encoding value)', 'void'),
  \ dotnet#method('get_Handshake(', ')', 'Handshake'),
  \ dotnet#method('set_Handshake(', 'Handshake value)', 'void'),
  \ dotnet#method('get_IsOpen(', ')', 'bool'),
  \ dotnet#method('get_NewLine(', ')', 'string'),
  \ dotnet#method('set_NewLine(', 'string value)', 'void'),
  \ dotnet#method('get_Parity(', ')', 'Parity'),
  \ dotnet#method('set_Parity(', 'Parity value)', 'void'),
  \ dotnet#method('get_ParityReplace(', ')', 'uint8'),
  \ dotnet#method('set_ParityReplace(', 'uint8 value)', 'void'),
  \ dotnet#method('get_PortName(', ')', 'string'),
  \ dotnet#method('set_PortName(', 'string value)', 'void'),
  \ dotnet#method('get_ReadBufferSize(', ')', 'int32'),
  \ dotnet#method('set_ReadBufferSize(', 'int32 value)', 'void'),
  \ dotnet#method('get_ReadTimeout(', ')', 'int32'),
  \ dotnet#method('set_ReadTimeout(', 'int32 value)', 'void'),
  \ dotnet#method('get_ReceivedBytesThreshold(', ')', 'int32'),
  \ dotnet#method('set_ReceivedBytesThreshold(', 'int32 value)', 'void'),
  \ dotnet#method('get_RtsEnable(', ')', 'bool'),
  \ dotnet#method('set_RtsEnable(', 'bool value)', 'void'),
  \ dotnet#method('get_StopBits(', ')', 'StopBits'),
  \ dotnet#method('set_StopBits(', 'StopBits value)', 'void'),
  \ dotnet#method('get_WriteBufferSize(', ')', 'int32'),
  \ dotnet#method('set_WriteBufferSize(', 'int32 value)', 'void'),
  \ dotnet#method('get_WriteTimeout(', ')', 'int32'),
  \ dotnet#method('set_WriteTimeout(', 'int32 value)', 'void'),
  \ dotnet#method('SerialPort(', 'class IContainer container)', 'void'),
  \ dotnet#method('SerialPort(', ')', 'void'),
  \ dotnet#method('SerialPort(', 'string portName)', 'void'),
  \ dotnet#method('SerialPort(', 'string portName, int32 baudRate)', 'void'),
  \ dotnet#method('SerialPort(', 'string portName, int32 baudRate, Parity parity)', 'void'),
  \ dotnet#method('SerialPort(', 'string portName, int32 baudRate, Parity parity, int32 dataBits)', 'void'),
  \ dotnet#method('SerialPort(', 'string portName, int32 baudRate, Parity parity, int32 dataBits, StopBits stopBits)', 'void'),
  \ dotnet#method('Close(', ')', 'void'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ dotnet#method('DiscardInBuffer(', ')', 'void'),
  \ dotnet#method('DiscardOutBuffer(', ')', 'void'),
  \ dotnet#method('GetPortNames(', ')', 'static string[]'),
  \ dotnet#method('Open(', ')', 'void'),
  \ dotnet#method('Read(', 'uint8[] buffer, int32 offset, int32 count)', 'int32'),
  \ dotnet#method('ReadChar(', ')', 'int32'),
  \ dotnet#method('Read(', 'char[] buffer, int32 offset, int32 count)', 'int32'),
  \ dotnet#method('ReadByte(', ')', 'int32'),
  \ dotnet#method('ReadExisting(', ')', 'string'),
  \ dotnet#method('ReadLine(', ')', 'string'),
  \ dotnet#method('ReadTo(', 'string value)', 'string'),
  \ dotnet#method('Write(', 'string text)', 'void'),
  \ dotnet#method('Write(', 'char[] buffer, int32 offset, int32 count)', 'void'),
  \ dotnet#method('Write(', 'uint8[] buffer, int32 offset, int32 count)', 'void'),
  \ dotnet#method('WriteLine(', 'string text)', 'void'),
  \ dotnet#event('ErrorReceived', 'SerialErrorReceivedEventHandler'),
  \ dotnet#event('PinChanged', 'SerialPinChangedEventHandler'),
  \ dotnet#event('DataReceived', 'SerialDataReceivedEventHandler'),
  \ dotnet#prop('BaseStream', 'Stream'),
  \ dotnet#prop('BaudRate', 'int32'),
  \ dotnet#prop('BreakState', 'bool'),
  \ dotnet#prop('BytesToWrite', 'int32'),
  \ dotnet#prop('BytesToRead', 'int32'),
  \ dotnet#prop('CDHolding', 'bool'),
  \ dotnet#prop('CtsHolding', 'bool'),
  \ dotnet#prop('DataBits', 'int32'),
  \ dotnet#prop('DiscardNull', 'bool'),
  \ dotnet#prop('DsrHolding', 'bool'),
  \ dotnet#prop('DtrEnable', 'bool'),
  \ dotnet#prop('Encoding', 'Encoding'),
  \ dotnet#prop('Handshake', 'Handshake'),
  \ dotnet#prop('IsOpen', 'bool'),
  \ dotnet#prop('NewLine', 'string'),
  \ dotnet#prop('Parity', 'Parity'),
  \ dotnet#prop('ParityReplace', 'uint8'),
  \ dotnet#prop('PortName', 'string'),
  \ dotnet#prop('ReadBufferSize', 'int32'),
  \ dotnet#prop('ReadTimeout', 'int32'),
  \ dotnet#prop('ReceivedBytesThreshold', 'int32'),
  \ dotnet#prop('RtsEnable', 'bool'),
  \ dotnet#prop('StopBits', 'StopBits'),
  \ dotnet#prop('WriteBufferSize', 'int32'),
  \ dotnet#prop('WriteTimeout', 'int32'),
  \ ])

call dotnet#class('SerialDataReceivedEventArgs', 'EventArgs', [ 
  \ dotnet#method('get_EventType(', ')', 'SerialData'),
  \ dotnet#prop('EventType', 'SerialData'),
  \ ])

call dotnet#class('SerialDataReceivedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('SerialDataReceivedEventHandler(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', 'object sender, SerialDataReceivedEventArgs e)', 'void'),
  \ dotnet#method('BeginInvoke(', 'object sender, SerialDataReceivedEventArgs e, AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'void'),
  \ ])


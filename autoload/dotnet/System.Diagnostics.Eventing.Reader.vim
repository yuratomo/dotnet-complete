call dotnet#namespace('System.Diagnostics.Eventing.Reader')

call dotnet#class('EventBookmark', 'Object', [ 
  \ dotnet#method('EventBookmark(', 'class SerializationInfo info, StreamingContext context)', 'void'),
  \ dotnet#method('GetObjectData(', 'class SerializationInfo info, StreamingContext context)', 'void '),
  \ dotnet#method('GetObjectData(', 'class SerializationInfo info, StreamingContext context)', 'void'),
  \ ])

call dotnet#class('EventLogConfiguration', 'Object', [ 
  \ dotnet#method('EventLogConfiguration(', 'string logName)', 'void'),
  \ dotnet#method('EventLogConfiguration(', 'string logName, EventLogSession session)', 'void'),
  \ dotnet#method('get_LogName(', ')', 'string'),
  \ dotnet#method('get_LogType(', ')', 'EventLogType'),
  \ dotnet#method('get_LogIsolation(', ')', 'EventLogIsolation'),
  \ dotnet#method('get_IsEnabled(', ')', 'bool'),
  \ dotnet#method('set_IsEnabled(', 'bool value)', 'void'),
  \ dotnet#method('get_IsClassicLog(', ')', 'bool'),
  \ dotnet#method('get_SecurityDescriptor(', ')', 'string'),
  \ dotnet#method('set_SecurityDescriptor(', 'string value)', 'void'),
  \ dotnet#method('get_LogFilePath(', ')', 'string'),
  \ dotnet#method('set_LogFilePath(', 'string value)', 'void'),
  \ dotnet#method('get_MaximumSizeInBytes(', ')', 'int64'),
  \ dotnet#method('set_MaximumSizeInBytes(', 'int64 value)', 'void'),
  \ dotnet#method('get_LogMode(', ')', 'EventLogMode'),
  \ dotnet#method('set_LogMode(', 'EventLogMode value)', 'void'),
  \ dotnet#method('get_OwningProviderName(', ')', 'string'),
  \ dotnet#method('get_ProviderNames(', ')', 'IEnumerable'),
  \ dotnet#method('get_ProviderLevel(', ')', 'Nullable'),
  \ dotnet#method('set_ProviderLevel(', 'Nullable value)', 'void'),
  \ dotnet#method('get_ProviderKeywords(', ')', 'Nullable'),
  \ dotnet#method('set_ProviderKeywords(', 'Nullable value)', 'void'),
  \ dotnet#method('get_ProviderBufferSize(', ')', 'Nullable'),
  \ dotnet#method('get_ProviderMinimumNumberOfBuffers(', ')', 'Nullable'),
  \ dotnet#method('get_ProviderMaximumNumberOfBuffers(', ')', 'Nullable'),
  \ dotnet#method('get_ProviderLatency(', ')', 'Nullable'),
  \ dotnet#method('get_ProviderControlGuid(', ')', 'Nullable'),
  \ dotnet#method('SaveChanges(', ')', 'void'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ dotnet#prop('LogName', 'string'),
  \ dotnet#prop('LogType', 'EventLogType'),
  \ dotnet#prop('LogIsolation', 'EventLogIsolation'),
  \ dotnet#prop('IsEnabled', 'bool'),
  \ dotnet#prop('IsClassicLog', 'bool'),
  \ dotnet#prop('SecurityDescriptor', 'string'),
  \ dotnet#prop('LogFilePath', 'string'),
  \ dotnet#prop('MaximumSizeInBytes', 'int64'),
  \ dotnet#prop('LogMode', 'EventLogMode'),
  \ dotnet#prop('OwningProviderName', 'string'),
  \ dotnet#prop('ProviderNames', 'IEnumerable'),
  \ dotnet#prop('ProviderLevel', 'Nullable'),
  \ dotnet#prop('ProviderKeywords', 'Nullable'),
  \ dotnet#prop('ProviderBufferSize', 'Nullable'),
  \ dotnet#prop('ProviderMinimumNumberOfBuffers', 'Nullable'),
  \ dotnet#prop('ProviderMaximumNumberOfBuffers', 'Nullable'),
  \ dotnet#prop('ProviderLatency', 'Nullable'),
  \ dotnet#prop('ProviderControlGuid', 'Nullable'),
  \ ])

call dotnet#class('EventLogLink', 'Object', [ 
  \ dotnet#method('get_LogName(', ')', 'string'),
  \ dotnet#method('get_IsImported(', ')', 'bool'),
  \ dotnet#method('get_DisplayName(', ')', 'string'),
  \ dotnet#prop('LogName', 'string'),
  \ dotnet#prop('IsImported', 'bool'),
  \ dotnet#prop('DisplayName', 'string'),
  \ ])

call dotnet#class('EventLogStatus', 'Object', [ 
  \ dotnet#method('get_LogName(', ')', 'string'),
  \ dotnet#method('get_StatusCode(', ')', 'int32'),
  \ dotnet#prop('LogName', 'string'),
  \ dotnet#prop('StatusCode', 'int32'),
  \ ])

call dotnet#class('EventProperty', 'Object', [ 
  \ dotnet#method('get_Value(', ')', 'object'),
  \ dotnet#prop('Value', 'object'),
  \ ])

call dotnet#class('EventLogPropertySelEventLogPropertySelector', 'Object', [ 
  \ dotnet#method('EventLogPropertySelector(', 'class IEnumerable propertyQueries)', 'void'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ ])

call dotnet#class('EventRecord', 'Object', [ 
  \ dotnet#method('get_Id(', ')', 'abstract int32'),
  \ dotnet#method('get_Version(', ')', 'abstract'),
  \ dotnet#method('get_Level(', ')', 'abstract'),
  \ dotnet#method('get_Task(', ')', 'abstract'),
  \ dotnet#method('get_Opcode(', ')', 'abstract'),
  \ dotnet#method('get_Keywords(', ')', 'abstract'),
  \ dotnet#method('get_RecordId(', ')', 'abstract'),
  \ dotnet#method('get_ProviderName(', ')', 'abstract string'),
  \ dotnet#method('get_ProviderId(', ')', 'abstract'),
  \ dotnet#method('get_LogName(', ')', 'abstract string'),
  \ dotnet#method('get_ProcessId(', ')', 'abstract'),
  \ dotnet#method('get_ThreadId(', ')', 'abstract'),
  \ dotnet#method('get_MachineName(', ')', 'abstract string'),
  \ dotnet#method('get_UserId(', ')', 'abstract'),
  \ dotnet#method('get_TimeCreated(', ')', 'abstract'),
  \ dotnet#method('get_ActivityId(', ')', 'abstract'),
  \ dotnet#method('get_RelatedActivityId(', ')', 'abstract'),
  \ dotnet#method('get_Qualifiers(', ')', 'abstract'),
  \ dotnet#method('FormatDescription(', ')', 'abstract string'),
  \ dotnet#method('FormatDescription(', 'class IEnumerable values)', 'abstract string'),
  \ dotnet#method('get_LevelDisplayName(', ')', 'abstract string'),
  \ dotnet#method('get_OpcodeDisplayName(', ')', 'abstract string'),
  \ dotnet#method('get_TaskDisplayName(', ')', 'abstract string'),
  \ dotnet#method('get_KeywordsDisplayNames(', ')', 'abstract'),
  \ dotnet#method('get_Bookmark(', ')', 'abstract'),
  \ dotnet#method('get_Properties(', ')', 'abstract'),
  \ dotnet#method('ToXml(', ')', 'abstract string'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ dotnet#method('EventRecord(', ')', 'void'),
  \ dotnet#prop('Id', 'int32'),
  \ dotnet#prop('Version', 'Nullable'),
  \ dotnet#prop('Level', 'Nullable'),
  \ dotnet#prop('Task', 'Nullable'),
  \ dotnet#prop('Opcode', 'Nullable'),
  \ dotnet#prop('Keywords', 'Nullable'),
  \ dotnet#prop('RecordId', 'Nullable'),
  \ dotnet#prop('ProviderName', 'string'),
  \ dotnet#prop('ProviderId', 'Nullable'),
  \ dotnet#prop('LogName', 'string'),
  \ dotnet#prop('ProcessId', 'Nullable'),
  \ dotnet#prop('ThreadId', 'Nullable'),
  \ dotnet#prop('MachineName', 'string'),
  \ dotnet#prop('UserId', 'SecurityIdentifier'),
  \ dotnet#prop('TimeCreated', 'Nullable'),
  \ dotnet#prop('ActivityId', 'Nullable'),
  \ dotnet#prop('RelatedActivityId', 'Nullable'),
  \ dotnet#prop('Qualifiers', 'Nullable'),
  \ dotnet#prop('LevelDisplayName', 'string'),
  \ dotnet#prop('OpcodeDisplayName', 'string'),
  \ dotnet#prop('TaskDisplayName', 'string'),
  \ dotnet#prop('KeywordsDisplayNames', 'IEnumerable'),
  \ dotnet#prop('Bookmark', 'EventBookmark'),
  \ dotnet#prop('Properties', 'IList'),
  \ ])

call dotnet#class('EventKeyword', 'Object', [ 
  \ dotnet#method('get_Name(', ')', 'string'),
  \ dotnet#method('get_Value(', ')', 'int64'),
  \ dotnet#method('get_DisplayName(', ')', 'string'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Value', 'int64'),
  \ dotnet#prop('DisplayName', 'string'),
  \ ])

call dotnet#class('EventLevel', 'Object', [ 
  \ dotnet#method('get_Name(', ')', 'string'),
  \ dotnet#method('get_Value(', ')', 'int32'),
  \ dotnet#method('get_DisplayName(', ')', 'string'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Value', 'int32'),
  \ dotnet#prop('DisplayName', 'string'),
  \ ])

call dotnet#class('EventLogRecord', 'EventRecord', [ 
  \ dotnet#method('get_Id(', ')', 'int32'),
  \ dotnet#method('get_Version(', ')', ''),
  \ dotnet#method('get_Qualifiers(', ')', ''),
  \ dotnet#method('get_Level(', ')', ''),
  \ dotnet#method('get_Task(', ')', ''),
  \ dotnet#method('get_Opcode(', ')', ''),
  \ dotnet#method('get_Keywords(', ')', ''),
  \ dotnet#method('get_RecordId(', ')', ''),
  \ dotnet#method('get_ProviderName(', ')', 'string'),
  \ dotnet#method('get_ProviderId(', ')', ''),
  \ dotnet#method('get_LogName(', ')', 'string'),
  \ dotnet#method('get_ProcessId(', ')', ''),
  \ dotnet#method('get_ThreadId(', ')', ''),
  \ dotnet#method('get_MachineName(', ')', 'string'),
  \ dotnet#method('get_UserId(', ')', ''),
  \ dotnet#method('get_TimeCreated(', ')', ''),
  \ dotnet#method('get_ActivityId(', ')', ''),
  \ dotnet#method('get_RelatedActivityId(', ')', ''),
  \ dotnet#method('get_ContainerLog(', ')', 'string'),
  \ dotnet#method('get_MatchedQueryIds(', ')', 'IEnumerable'),
  \ dotnet#method('get_Bookmark(', ')', ''),
  \ dotnet#method('FormatDescription(', ')', 'string'),
  \ dotnet#method('FormatDescription(', 'class IEnumerable values)', 'string'),
  \ dotnet#method('get_LevelDisplayName(', ')', 'string'),
  \ dotnet#method('get_OpcodeDisplayName(', ')', 'string'),
  \ dotnet#method('get_TaskDisplayName(', ')', 'string'),
  \ dotnet#method('get_KeywordsDisplayNames(', ')', ''),
  \ dotnet#method('get_Properties(', ')', ''),
  \ dotnet#method('GetPropertyValues(', 'class EventLogPropertySelEventLogRecord propertySelEventLogRecord)', 'IList'),
  \ dotnet#method('ToXml(', ')', 'string'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ dotnet#prop('Id', 'int32'),
  \ dotnet#prop('Version', 'Nullable'),
  \ dotnet#prop('Qualifiers', 'Nullable'),
  \ dotnet#prop('Level', 'Nullable'),
  \ dotnet#prop('Task', 'Nullable'),
  \ dotnet#prop('Opcode', 'Nullable'),
  \ dotnet#prop('Keywords', 'Nullable'),
  \ dotnet#prop('RecordId', 'Nullable'),
  \ dotnet#prop('ProviderName', 'string'),
  \ dotnet#prop('ProviderId', 'Nullable'),
  \ dotnet#prop('LogName', 'string'),
  \ dotnet#prop('ProcessId', 'Nullable'),
  \ dotnet#prop('ThreadId', 'Nullable'),
  \ dotnet#prop('MachineName', 'string'),
  \ dotnet#prop('UserId', 'SecurityIdentifier'),
  \ dotnet#prop('TimeCreated', 'Nullable'),
  \ dotnet#prop('ActivityId', 'Nullable'),
  \ dotnet#prop('RelatedActivityId', 'Nullable'),
  \ dotnet#prop('ContainerLog', 'string'),
  \ dotnet#prop('MatchedQueryIds', 'IEnumerable'),
  \ dotnet#prop('Bookmark', 'EventBookmark'),
  \ dotnet#prop('LevelDisplayName', 'string'),
  \ dotnet#prop('OpcodeDisplayName', 'string'),
  \ dotnet#prop('TaskDisplayName', 'string'),
  \ dotnet#prop('KeywordsDisplayNames', 'IEnumerable'),
  \ dotnet#prop('Properties', 'IList'),
  \ ])

call dotnet#class('EventLogReader', 'Object', [ 
  \ dotnet#method('EventLogReader(', 'string path)', 'void'),
  \ dotnet#method('EventLogReader(', 'string path, PathType pathType)', 'void'),
  \ dotnet#method('EventLogReader(', 'class EventLogQuery eventQuery)', 'void'),
  \ dotnet#method('EventLogReader(', 'class EventLogQuery eventQuery, EventBookmark bookmark)', 'void'),
  \ dotnet#method('get_BatchSize(', ')', 'int32'),
  \ dotnet#method('set_BatchSize(', 'int32 value)', 'void'),
  \ dotnet#method('ReadEvent(', ')', 'EventRecord'),
  \ dotnet#method('ReadEvent(', 'TimeSpan timeout)', 'EventRecord'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ dotnet#method('Seek(', 'class EventBookmark bookmark)', 'void'),
  \ dotnet#method('Seek(', 'class EventBookmark bookmark, int64 offset)', 'void'),
  \ dotnet#method('Seek(', 'SeekOrigin origin, int64 offset)', 'void'),
  \ dotnet#method('CancelReading(', ')', 'void'),
  \ dotnet#method('get_LogStatus(', ')', 'IList'),
  \ dotnet#prop('BatchSize', 'int32'),
  \ dotnet#prop('LogStatus', 'IList'),
  \ ])

call dotnet#class('EventLogWatcher', 'Object', [ 
  \ dotnet#method('add_EventRecordWritten(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_EventRecordWritten(', 'class EventHandler value)', 'void'),
  \ dotnet#method('EventLogWatcher(', 'string path)', 'void'),
  \ dotnet#method('EventLogWatcher(', 'class EventLogQuery eventQuery)', 'void'),
  \ dotnet#method('EventLogWatcher(', 'class EventLogQuery eventQuery, EventBookmark bookmark)', 'void'),
  \ dotnet#method('EventLogWatcher(', 'class EventLogQuery eventQuery, EventBookmark bookmark, bool readExistingEvents)', 'void'),
  \ dotnet#method('get_Enabled(', ')', 'bool'),
  \ dotnet#method('set_Enabled(', 'bool value)', 'void'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ dotnet#event('EventRecordWritten', 'EventHandler'),
  \ dotnet#prop('Enabled', 'bool'),
  \ ])

call dotnet#class('EventRecordWrittenEventArgs', 'EventArgs', [ 
  \ dotnet#method('get_EventRecord(', ')', 'EventRecord'),
  \ dotnet#method('get_EventException(', ')', 'Exception'),
  \ dotnet#prop('EventRecord', 'EventRecord'),
  \ dotnet#prop('EventException', 'Exception'),
  \ ])

call dotnet#class('EventLogQuery', 'Object', [ 
  \ dotnet#method('EventLogQuery(', 'string path, PathType pathType)', 'void'),
  \ dotnet#method('EventLogQuery(', 'string path, PathType pathType, string query)', 'void'),
  \ dotnet#method('get_Session(', ')', 'EventLogSession'),
  \ dotnet#method('set_Session(', 'class EventLogSession value)', 'void'),
  \ dotnet#method('get_TolerateQueryErrors(', ')', 'bool'),
  \ dotnet#method('set_TolerateQueryErrors(', 'bool value)', 'void'),
  \ dotnet#method('get_ReverseDirection(', ')', 'bool'),
  \ dotnet#method('set_ReverseDirection(', 'bool value)', 'void'),
  \ dotnet#prop('Session', 'EventLogSession'),
  \ dotnet#prop('TolerateQueryErrors', 'bool'),
  \ dotnet#prop('ReverseDirection', 'bool'),
  \ ])

call dotnet#class('EventLogSession', 'Object', [ 
  \ dotnet#method('EventLogSession(', ')', 'void'),
  \ dotnet#method('EventLogSession(', 'string server)', 'void'),
  \ dotnet#method('EventLogSession(', 'string server, string domain, string user, SecureString password, SessionAuthentication logOnType)', 'void'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ dotnet#method('CancelCurrentOperations(', ')', 'void'),
  \ dotnet#method('get_GlobalSession(', ')', 'static'),
  \ dotnet#method('GetProviderNames(', ')', 'IEnumerable'),
  \ dotnet#method('GetLogNames(', ')', 'IEnumerable'),
  \ dotnet#method('GetLogInformation(', 'string logName, PathType pathType)', 'EventLogInformation'),
  \ dotnet#method('ExportLog(', 'string path, PathType pathType, string query, string targetFilePath)', 'void'),
  \ dotnet#method('ExportLog(', 'string path, PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors)', 'void'),
  \ dotnet#method('ExportLogAndMessages(', 'string path, PathType pathType, string query, string targetFilePath)', 'void'),
  \ dotnet#method('ExportLogAndMessages(', 'string path, PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, CultureInfo targetCultureInfo)', 'void'),
  \ dotnet#method('ClearLog(', 'string logName)', 'void'),
  \ dotnet#method('ClearLog(', 'string logName, string backupPath)', 'void'),
  \ dotnet#method('EventLogSession(', ')', 'static void .'),
  \ dotnet#prop('GlobalSession', 'EventLogSession'),
  \ ])

call dotnet#class('EventMetadata', 'Object', [ 
  \ dotnet#method('get_Id(', ')', 'int64'),
  \ dotnet#method('get_Version(', ')', 'uint8'),
  \ dotnet#method('get_LogLink(', ')', 'EventLogLink'),
  \ dotnet#method('get_Level(', ')', 'EventLevel'),
  \ dotnet#method('get_Opcode(', ')', 'EventOpcode'),
  \ dotnet#method('get_Task(', ')', 'EventTask'),
  \ dotnet#method('get_Keywords(', ')', 'IEnumerable'),
  \ dotnet#method('get_Template(', ')', 'string'),
  \ dotnet#method('get_Description(', ')', 'string'),
  \ dotnet#prop('Id', 'int64'),
  \ dotnet#prop('Version', 'uint8'),
  \ dotnet#prop('LogLink', 'EventLogLink'),
  \ dotnet#prop('Level', 'EventLevel'),
  \ dotnet#prop('Opcode', 'EventOpcode'),
  \ dotnet#prop('Task', 'EventTask'),
  \ dotnet#prop('Keywords', 'IEnumerable'),
  \ dotnet#prop('Template', 'string'),
  \ dotnet#prop('Description', 'string'),
  \ ])

call dotnet#class('EventOpcode', 'Object', [ 
  \ dotnet#method('get_Name(', ')', 'string'),
  \ dotnet#method('get_Value(', ')', 'int32'),
  \ dotnet#method('get_DisplayName(', ')', 'string'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Value', 'int32'),
  \ dotnet#prop('DisplayName', 'string'),
  \ ])

call dotnet#class('EventTask', 'Object', [ 
  \ dotnet#method('get_Name(', ')', 'string'),
  \ dotnet#method('get_Value(', ')', 'int32'),
  \ dotnet#method('get_DisplayName(', ')', 'string'),
  \ dotnet#method('get_EventGuid(', ')', 'Guid'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Value', 'int32'),
  \ dotnet#prop('DisplayName', 'string'),
  \ dotnet#prop('EventGuid', 'Guid'),
  \ ])

call dotnet#class('EventLogException', 'Exception', [ 
  \ dotnet#method('EventLogException(', ')', 'void'),
  \ dotnet#method('EventLogException(', 'string message)', 'void'),
  \ dotnet#method('EventLogException(', 'string message, Exception innerException)', 'void'),
  \ dotnet#method('EventLogException(', 'class SerializationInfo serializationInfo, StreamingContext streamingContext)', 'void'),
  \ dotnet#method('EventLogException(', 'int32 errorCode)', 'void'),
  \ dotnet#method('GetObjectData(', 'class SerializationInfo info, StreamingContext context)', 'void'),
  \ dotnet#method('get_Message(', ')', 'string'),
  \ dotnet#prop('Message', 'string'),
  \ ])

call dotnet#class('EventLogNotFoundException', 'EventLogException', [ 
  \ dotnet#method('EventLogNotFoundException(', ')', 'void'),
  \ dotnet#method('EventLogNotFoundException(', 'string message)', 'void'),
  \ dotnet#method('EventLogNotFoundException(', 'string message, Exception innerException)', 'void'),
  \ dotnet#method('EventLogNotFoundException(', 'class SerializationInfo serializationInfo, StreamingContext streamingContext)', 'void'),
  \ ])

call dotnet#class('EventLogReadingException', 'EventLogException', [ 
  \ dotnet#method('EventLogReadingException(', ')', 'void'),
  \ dotnet#method('EventLogReadingException(', 'string message)', 'void'),
  \ dotnet#method('EventLogReadingException(', 'string message, Exception innerException)', 'void'),
  \ dotnet#method('EventLogReadingException(', 'class SerializationInfo serializationInfo, StreamingContext streamingContext)', 'void'),
  \ ])

call dotnet#class('EventLogProviderDisabledException', 'EventLogException', [ 
  \ dotnet#method('EventLogProviderDisabledException(', ')', 'void'),
  \ dotnet#method('EventLogProviderDisabledException(', 'string message)', 'void'),
  \ dotnet#method('EventLogProviderDisabledException(', 'string message, Exception innerException)', 'void'),
  \ dotnet#method('EventLogProviderDisabledException(', 'class SerializationInfo serializationInfo, StreamingContext streamingContext)', 'void'),
  \ ])

call dotnet#class('EventLogInvalidDataException', 'EventLogException', [ 
  \ dotnet#method('EventLogInvalidDataException(', ')', 'void'),
  \ dotnet#method('EventLogInvalidDataException(', 'string message)', 'void'),
  \ dotnet#method('EventLogInvalidDataException(', 'string message, Exception innerException)', 'void'),
  \ dotnet#method('EventLogInvalidDataException(', 'class SerializationInfo serializationInfo, StreamingContext streamingContext)', 'void'),
  \ ])

call dotnet#class('EventLogInformation', 'Object', [ 
  \ dotnet#method('get_CreationTime(', ')', 'Nullable'),
  \ dotnet#method('get_LastAccessTime(', ')', 'Nullable'),
  \ dotnet#method('get_LastWriteTime(', ')', 'Nullable'),
  \ dotnet#method('get_FileSize(', ')', 'Nullable'),
  \ dotnet#method('get_Attributes(', ')', 'Nullable'),
  \ dotnet#method('get_RecordCount(', ')', 'Nullable'),
  \ dotnet#method('get_OldestRecordNumber(', ')', 'Nullable'),
  \ dotnet#method('get_IsLogFull(', ')', 'Nullable'),
  \ dotnet#prop('CreationTime', 'Nullable'),
  \ dotnet#prop('LastAccessTime', 'Nullable'),
  \ dotnet#prop('LastWriteTime', 'Nullable'),
  \ dotnet#prop('FileSize', 'Nullable'),
  \ dotnet#prop('Attributes', 'Nullable'),
  \ dotnet#prop('RecordCount', 'Nullable'),
  \ dotnet#prop('OldestRecordNumber', 'Nullable'),
  \ dotnet#prop('IsLogFull', 'Nullable'),
  \ ])

call dotnet#class('ProviderMetadata', 'Object', [ 
  \ dotnet#method('ProviderMetadata(', 'string providerName)', 'void'),
  \ dotnet#method('ProviderMetadata(', 'string providerName, EventLogSession session, CultureInfo targetCultureInfo)', 'void'),
  \ dotnet#method('get_Name(', ')', 'string'),
  \ dotnet#method('get_Id(', ')', 'Guid'),
  \ dotnet#method('get_MessageFilePath(', ')', 'string'),
  \ dotnet#method('get_ResourceFilePath(', ')', 'string'),
  \ dotnet#method('get_ParameterFilePath(', ')', 'string'),
  \ dotnet#method('get_HelpLink(', ')', 'Uri'),
  \ dotnet#method('get_DisplayName(', ')', 'string'),
  \ dotnet#method('get_LogLinks(', ')', 'IList'),
  \ dotnet#method('get_Levels(', ')', 'IList'),
  \ dotnet#method('get_Opcodes(', ')', 'IList'),
  \ dotnet#method('get_Keywords(', ')', 'IList'),
  \ dotnet#method('get_Tasks(', ')', 'IList'),
  \ dotnet#method('get_Events(', ')', 'IEnumerable'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Dispose(', 'bool disposing)', 'void'),
  \ dotnet#prop('Name', 'string'),
  \ dotnet#prop('Id', 'Guid'),
  \ dotnet#prop('MessageFilePath', 'string'),
  \ dotnet#prop('ResourceFilePath', 'string'),
  \ dotnet#prop('ParameterFilePath', 'string'),
  \ dotnet#prop('HelpLink', 'Uri'),
  \ dotnet#prop('DisplayName', 'string'),
  \ dotnet#prop('LogLinks', 'IList'),
  \ dotnet#prop('Levels', 'IList'),
  \ dotnet#prop('Opcodes', 'IList'),
  \ dotnet#prop('Keywords', 'IList'),
  \ dotnet#prop('Tasks', 'IList'),
  \ dotnet#prop('Events', 'IEnumerable'),
  \ ])


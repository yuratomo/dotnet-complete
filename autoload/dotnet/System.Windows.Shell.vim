call dotnet#namespace('System.Windows.Shell')

call dotnet#class('JumpItem', 'Object', [ 
  \ dotnet#method('JumpItem(', ')', 'void'),
  \ dotnet#method('get_CustomCategory(', ')', 'string'),
  \ dotnet#method('set_CustomCategory(', 'string value)', 'void'),
  \ dotnet#prop('CustomCategory', 'string'),
  \ ])

call dotnet#class('JumpItemsRejectedEventArgs', 'EventArgs', [ 
  \ dotnet#method('JumpItemsRejectedEventArgs(', ')', 'void'),
  \ dotnet#method('JumpItemsRejectedEventArgs(', 'class IList rejectedItems, IList reasons)', 'void'),
  \ dotnet#method('get_RejectedItems(', ')', 'IList'),
  \ dotnet#method('get_RejectionReasons(', ')', 'IList'),
  \ dotnet#method('set_RejectedItems(', 'class IList value)', 'void'),
  \ dotnet#method('set_RejectionReasons(', 'class IList value)', 'void'),
  \ dotnet#prop('RejectedItems', 'IList'),
  \ dotnet#prop('RejectionReasons', 'IList'),
  \ ])

call dotnet#class('JumpItemsRemovedEventArgs', 'EventArgs', [ 
  \ dotnet#method('JumpItemsRemovedEventArgs(', ')', 'void'),
  \ dotnet#method('JumpItemsRemovedEventArgs(', 'class IList removedItems)', 'void'),
  \ dotnet#method('get_RemovedItems(', ')', 'IList'),
  \ dotnet#method('set_RemovedItems(', 'class IList value)', 'void'),
  \ dotnet#prop('RemovedItems', 'IList'),
  \ ])

call dotnet#class('JumpList', 'Object', [ 
  \ dotnet#method('AddToRecentCategory(', 'string itemPath)', 'static void'),
  \ dotnet#method('AddToRecentCategory(', 'class JumpPath jumpPath)', 'static void'),
  \ dotnet#method('AddToRecentCategory(', 'class JumpTask jumpTask)', 'static void'),
  \ dotnet#method('SetJumpList(', 'class Application application, JumpList value)', 'static void'),
  \ dotnet#method('GetJumpList(', 'class Application application)', 'static JumpList'),
  \ dotnet#method('JumpList(', ')', 'void'),
  \ dotnet#method('JumpList(', 'class IEnumerable items, bool showFrequent, bool showRecent)', 'void'),
  \ dotnet#method('get_ShowFrequentCategory(', ')', 'bool'),
  \ dotnet#method('set_ShowFrequentCategory(', 'bool value)', 'void'),
  \ dotnet#method('get_ShowRecentCategory(', ')', 'bool'),
  \ dotnet#method('set_ShowRecentCategory(', 'bool value)', 'void'),
  \ dotnet#method('get_JumpItems(', ')', 'List'),
  \ dotnet#method('BeginInit(', ')', 'void'),
  \ dotnet#method('EndInit(', ')', 'void'),
  \ dotnet#method('Apply(', ')', 'void'),
  \ dotnet#method('add_JumpItemsRejected(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_JumpItemsRejected(', 'class EventHandler value)', 'void'),
  \ dotnet#method('add_JumpItemsRemovedByUser(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_JumpItemsRemovedByUser(', 'class EventHandler value)', 'void'),
  \ dotnet#method('JumpList(', ')', 'static void .'),
  \ dotnet#event('JumpItemsRejected', 'EventHandler'),
  \ dotnet#event('JumpItemsRemovedByUser', 'EventHandler'),
  \ dotnet#prop('ShowFrequentCategory', 'bool'),
  \ dotnet#prop('ShowRecentCategory', 'bool'),
  \ dotnet#prop('JumpItems', 'List'),
  \ ])

call dotnet#class('JumpPath', 'JumpItem', [ 
  \ dotnet#method('JumpPath(', ')', 'void'),
  \ dotnet#method('get_Path(', ')', 'string'),
  \ dotnet#method('set_Path(', 'string value)', 'void'),
  \ dotnet#prop('Path', 'string'),
  \ ])

call dotnet#class('JumpTask', 'JumpItem', [ 
  \ dotnet#method('JumpTask(', ')', 'void'),
  \ dotnet#method('get_Title(', ')', 'string'),
  \ dotnet#method('set_Title(', 'string value)', 'void'),
  \ dotnet#method('get_Description(', ')', 'string'),
  \ dotnet#method('set_Description(', 'string value)', 'void'),
  \ dotnet#method('get_ApplicationPath(', ')', 'string'),
  \ dotnet#method('set_ApplicationPath(', 'string value)', 'void'),
  \ dotnet#method('get_Arguments(', ')', 'string'),
  \ dotnet#method('set_Arguments(', 'string value)', 'void'),
  \ dotnet#method('get_WorkingDirJumpTasky(', ')', 'string'),
  \ dotnet#method('set_WorkingDirJumpTasky(', 'string value)', 'void'),
  \ dotnet#method('get_IconResourcePath(', ')', 'string'),
  \ dotnet#method('set_IconResourcePath(', 'string value)', 'void'),
  \ dotnet#method('get_IconResourceIndex(', ')', 'int32'),
  \ dotnet#method('set_IconResourceIndex(', 'int32 value)', 'void'),
  \ dotnet#prop('Title', 'string'),
  \ dotnet#prop('Description', 'string'),
  \ dotnet#prop('ApplicationPath', 'string'),
  \ dotnet#prop('Arguments', 'string'),
  \ dotnet#prop('WorkingDirJumpTasky', 'string'),
  \ dotnet#prop('IconResourcePath', 'string'),
  \ dotnet#prop('IconResourceIndex', 'int32'),
  \ ])

call dotnet#class('TaskbarItemInfo', 'Freezable', [ 
  \ dotnet#method('CreateInstanceCore(', ')', 'Freezable'),
  \ dotnet#method('get_ProgressState(', ')', 'TaskbarItemProgressState'),
  \ dotnet#method('set_ProgressState(', 'TaskbarItemProgressState value)', 'void'),
  \ dotnet#method('get_ProgressValue(', ')', 'float64'),
  \ dotnet#method('set_ProgressValue(', 'float64 value)', 'void'),
  \ dotnet#method('get_Overlay(', ')', 'ImageSource'),
  \ dotnet#method('set_Overlay(', 'class ImageSource value)', 'void'),
  \ dotnet#method('get_Description(', ')', 'string'),
  \ dotnet#method('set_Description(', 'string value)', 'void'),
  \ dotnet#method('get_ThumbnailClipMargin(', ')', 'Thickness'),
  \ dotnet#method('set_ThumbnailClipMargin(', 'Thickness value)', 'void'),
  \ dotnet#method('get_ThumbButtonInfos(', ')', 'ThumbButtonInfoCollection'),
  \ dotnet#method('set_ThumbButtonInfos(', 'class ThumbButtonInfoCollection value)', 'void'),
  \ dotnet#method('add_PropertyChanged(', 'class DependencyPropertyChangedEventHandler value)', 'void'),
  \ dotnet#method('remove_PropertyChanged(', 'class DependencyPropertyChangedEventHandler value)', 'void'),
  \ dotnet#method('TaskbarItemInfo(', ')', 'void'),
  \ dotnet#method('TaskbarItemInfo(', ')', 'static void .'),
  \ dotnet#event('PropertyChanged', 'DependencyPropertyChangedEventHandler'),
  \ dotnet#prop('ProgressState', 'TaskbarItemProgressState'),
  \ dotnet#prop('ProgressValue', 'float64'),
  \ dotnet#prop('Overlay', 'ImageSource'),
  \ dotnet#prop('Description', 'string'),
  \ dotnet#prop('ThumbnailClipMargin', 'Thickness'),
  \ dotnet#prop('ThumbButtonInfos', 'ThumbButtonInfoCollection'),
  \ ])

call dotnet#class('ThumbButtonInfo', 'Freezable', [ 
  \ dotnet#method('CreateInstanceCore(', ')', 'Freezable'),
  \ dotnet#method('get_Visibility(', ')', 'Visibility'),
  \ dotnet#method('set_Visibility(', 'Visibility value)', 'void'),
  \ dotnet#method('get_DismissWhenClicked(', ')', 'bool'),
  \ dotnet#method('set_DismissWhenClicked(', 'bool value)', 'void'),
  \ dotnet#method('get_ImageSource(', ')', 'ImageSource'),
  \ dotnet#method('set_ImageSource(', 'class ImageSource value)', 'void'),
  \ dotnet#method('get_IsBackgroundVisible(', ')', 'bool'),
  \ dotnet#method('set_IsBackgroundVisible(', 'bool value)', 'void'),
  \ dotnet#method('get_Description(', ')', 'string'),
  \ dotnet#method('set_Description(', 'string value)', 'void'),
  \ dotnet#method('get_IsEnabled(', ')', 'bool'),
  \ dotnet#method('set_IsEnabled(', 'bool value)', 'void'),
  \ dotnet#method('get_IsInteractive(', ')', 'bool'),
  \ dotnet#method('set_IsInteractive(', 'bool value)', 'void'),
  \ dotnet#method('add_Click(', 'class EventHandler value)', 'void'),
  \ dotnet#method('remove_Click(', 'class EventHandler value)', 'void'),
  \ dotnet#method('InvokeClick(', ')', 'void'),
  \ dotnet#method('get_Command(', ')', ''),
  \ dotnet#method('set_Command(', 'class ICommand value)', 'void'),
  \ dotnet#method('get_CommandParameter(', ')', 'object'),
  \ dotnet#method('set_CommandParameter(', 'object value)', 'void'),
  \ dotnet#method('get_CommandTarget(', ')', ''),
  \ dotnet#method('set_CommandTarget(', 'class IInputElement value)', 'void'),
  \ dotnet#method('ThumbButtonInfo(', ')', 'void'),
  \ dotnet#method('ThumbButtonInfo(', ')', 'static void .'),
  \ dotnet#event('Click', 'EventHandler'),
  \ dotnet#prop('Visibility', 'Visibility'),
  \ dotnet#prop('DismissWhenClicked', 'bool'),
  \ dotnet#prop('ImageSource', 'ImageSource'),
  \ dotnet#prop('IsBackgroundVisible', 'bool'),
  \ dotnet#prop('Description', 'string'),
  \ dotnet#prop('IsEnabled', 'bool'),
  \ dotnet#prop('IsInteractive', 'bool'),
  \ dotnet#prop('Command', 'ICommand'),
  \ dotnet#prop('CommandParameter', 'object'),
  \ dotnet#prop('CommandTarget', 'IInputElement'),
  \ ])

call dotnet#class('ThumbButtonInfoCollection', 'FreezableCollection', [ 
  \ dotnet#method('CreateInstanceCore(', ')', 'Freezable'),
  \ dotnet#method('get_Empty(', ')', 'static'),
  \ dotnet#method('ThumbButtonInfoCollection(', ')', 'void'),
  \ dotnet#prop('Empty', 'ThumbButtonInfoCollection'),
  \ ])


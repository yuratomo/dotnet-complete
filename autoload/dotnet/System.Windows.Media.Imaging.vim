
call dotnet#class('BitmapCodecInfo', 'Object', [ 
  \ dotnet#method('BitmapCodecInfo(', ''),
  \ dotnet#method('get_Author(', ''),
  \ dotnet#method('get_FriendlyName(', ''),
  \ dotnet#method('get_DeviceManufacturer(', ''),
  \ dotnet#method('get_DeviceModels(', ''),
  \ dotnet#method('get_MimeTypes(', ''),
  \ dotnet#method('get_FileExtensions(', ''),
  \ dotnet#method('get_SupportsAnimation(', ''),
  \ dotnet#method('get_SupportsLossless(', ''),
  \ dotnet#method('get_SupportsMultipleFrames(', ''),
  \ dotnet#prop('ContainerFormat', 'Guid'),
  \ dotnet#prop('Author', 'string'),
  \ dotnet#prop('Version', 'Version'),
  \ dotnet#prop('SpecificationVersion', 'Version'),
  \ dotnet#prop('FriendlyName', 'string'),
  \ dotnet#prop('DeviceManufacturer', 'string'),
  \ dotnet#prop('DeviceModels', 'string'),
  \ dotnet#prop('MimeTypes', 'string'),
  \ dotnet#prop('FileExtensions', 'string'),
  \ dotnet#prop('SupportsAnimation', 'bool'),
  \ dotnet#prop('SupportsLossless', 'bool'),
  \ dotnet#prop('SupportsMultipleFrames', 'bool'),
  \ ])

call dotnet#class('BitmapDecoder', 'DispatcherObject', [ 
  \ dotnet#field('_readOnlycolorContexts', 'ReadOnlyCollection'),
  \ dotnet#field('_frames', 'List'),
  \ dotnet#field('_readOnlyFrames', 'ReadOnlyCollection'),
  \ dotnet#field('_stream', 'Stream'),
  \ dotnet#field('_uri', 'Uri'),
  \ dotnet#field('_baseUri', 'Uri'),
  \ dotnet#field('_uriStream', 'Stream'),
  \ dotnet#field('_createOptions', 'BitmapCreateOptions'),
  \ dotnet#field('_cacheOption', 'BitmapCacheOption'),
  \ dotnet#field('_downloadEvent', 'UniqueEventHelper'),
  \ dotnet#field('_progressEvent', 'UniqueEventHelper'),
  \ dotnet#field('_failedEvent', 'UniqueEventHelper'),
  \ dotnet#method('BitmapDecoder(', ''),
  \ dotnet#method('Finalize(', ''),
  \ dotnet#method('CreateFromUriOrStream(', ''),
  \ dotnet#method('Create(', ''),
  \ dotnet#method('get_IsDownloading(', ''),
  \ dotnet#method('add_DownloadCompleted(', ''),
  \ dotnet#method('remove_DownloadCompleted(', ''),
  \ dotnet#method('add_DownloadProgress(', ''),
  \ dotnet#method('remove_DownloadProgress(', ''),
  \ dotnet#method('add_DownloadFailed(', ''),
  \ dotnet#method('remove_DownloadFailed(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('get_IsMetadataFixedSize(', ''),
  \ dotnet#method('get_SyncObject(', ''),
  \ dotnet#method('CheckOriginalWritable(', ''),
  \ dotnet#method('SetupDecoderFromUriOrStream(', ''),
  \ dotnet#method('CloseStream(', ''),
  \ dotnet#method('SetupFrames(', ''),
  \ dotnet#method('CanConvertToString(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#event('DownloadCompleted', 'EventHandler'),
  \ dotnet#event('DownloadProgress', 'EventHandler'),
  \ dotnet#event('DownloadFailed', 'EventHandler'),
  \ dotnet#prop('Palette', 'BitmapPalette'),
  \ dotnet#prop('ColorContexts', 'ReadOnlyCollection'),
  \ dotnet#prop('Thumbnail', 'BitmapSource'),
  \ dotnet#prop('Metadata', 'BitmapMetadata'),
  \ dotnet#prop('CodecInfo', 'BitmapCodecInfo'),
  \ dotnet#prop('Frames', 'ReadOnlyCollection'),
  \ dotnet#prop('Preview', 'BitmapSource'),
  \ dotnet#prop('IsDownloading', 'bool'),
  \ dotnet#prop('InternalDecoder', 'SafeMILHandle'),
  \ dotnet#prop('IsMetadataFixedSize', 'bool'),
  \ dotnet#prop('SyncObject', 'object'),
  \ dotnet#prop('InternalColorContexts', 'ReadOnlyCollection'),
  \ ])

call dotnet#class('BitmapEncoder', 'DispatcherObject', [ 
  \ dotnet#field('_supportsPreview', 'bool'),
  \ dotnet#field('_supportsGlobalThumbnail', 'bool'),
  \ dotnet#field('_supportsGlobalMetadata', 'bool'),
  \ dotnet#field('_supportsFrameThumbnails', 'bool'),
  \ dotnet#field('_supportsFrameMetadata', 'bool'),
  \ dotnet#field('_supportsMultipleFrames', 'bool'),
  \ dotnet#field('_supportsColorContext', 'bool'),
  \ dotnet#method('BitmapEncoder(', ''),
  \ dotnet#method('Create(', ''),
  \ dotnet#method('set_ColorContexts(', ''),
  \ dotnet#method('set_Thumbnail(', ''),
  \ dotnet#method('set_Metadata(', ''),
  \ dotnet#method('set_Preview(', ''),
  \ dotnet#method('set_Palette(', ''),
  \ dotnet#method('set_Frames(', ''),
  \ dotnet#method('Save(', ''),
  \ dotnet#method('get_IsMetadataFixedSize(', ''),
  \ dotnet#method('SetupFrame(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('ColorContexts', 'ReadOnlyCollection'),
  \ dotnet#prop('Thumbnail', 'BitmapSource'),
  \ dotnet#prop('Metadata', 'BitmapMetadata'),
  \ dotnet#prop('Preview', 'BitmapSource'),
  \ dotnet#prop('CodecInfo', 'BitmapCodecInfo'),
  \ dotnet#prop('Palette', 'BitmapPalette'),
  \ dotnet#prop('Frames', 'IList'),
  \ dotnet#prop('ContainerFormat', 'Guid'),
  \ dotnet#prop('IsMetadataFixedSize', 'bool'),
  \ ])

call dotnet#class('BmpBitmapDecoder', 'BitmapDecoder', [ 
  \ dotnet#method('BmpBitmapDecoder(', ''),
  \ dotnet#method('SealObject(', ''),
  \ ])

call dotnet#class('BmpBitmapEncoder', 'BitmapEncoder', [ 
  \ dotnet#method('BmpBitmapEncoder(', ''),
  \ dotnet#method('SetupFrame(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('ContainerFormat', 'Guid'),
  \ ])

call dotnet#class('BitmapSource', 'ImageSource', [ 
  \ dotnet#method('GetSize(', ''),
  \ dotnet#method('GetPixelFormat(', ''),
  \ dotnet#method('GetResolution(', ''),
  \ dotnet#method('GetPalette(', ''),
  \ dotnet#method('CopyPixels(', ''),
  \ dotnet#method('BitmapSource(', ''),
  \ dotnet#field('_bitmapInit', 'BitmapInitialize'),
  \ dotnet#field('_wicSource', 'BitmapSourceSafeMILHandle'),
  \ dotnet#field('_convertedDUCEPtr', 'BitmapSourceSafeMILHandle'),
  \ dotnet#field('_syncObject', 'object'),
  \ dotnet#field('_isSourceCached', 'bool'),
  \ dotnet#field('_needsUpdate', 'bool'),
  \ dotnet#field('_isColorCorrected', 'bool'),
  \ dotnet#field('_downloadEvent', 'UniqueEventHelper'),
  \ dotnet#field('_progressEvent', 'UniqueEventHelper'),
  \ dotnet#field('_failedEvent', 'UniqueEventHelper'),
  \ dotnet#field('_decodeFailedEvent', 'UniqueEventHelper'),
  \ dotnet#field('_format', 'PixelFormat'),
  \ dotnet#field('_pixelWidth', 'int32'),
  \ dotnet#field('_pixelHeight', 'int32'),
  \ dotnet#field('_dpiX', 'float64'),
  \ dotnet#field('_dpiY', 'float64'),
  \ dotnet#field('_palette', 'BitmapPalette'),
  \ dotnet#field('_duceResource', 'DUCE/MultiChannelResource'),
  \ dotnet#method('Create(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_PixelWidth(', ''),
  \ dotnet#method('get_PixelHeight(', ''),
  \ dotnet#method('get_DpiX(', ''),
  \ dotnet#method('get_DpiY(', ''),
  \ dotnet#method('get_IsDownloading(', ''),
  \ dotnet#method('add_DownloadCompleted(', ''),
  \ dotnet#method('remove_DownloadCompleted(', ''),
  \ dotnet#method('add_DownloadProgress(', ''),
  \ dotnet#method('remove_DownloadProgress(', ''),
  \ dotnet#method('add_DownloadFailed(', ''),
  \ dotnet#method('remove_DownloadFailed(', ''),
  \ dotnet#method('add_DecodeFailed(', ''),
  \ dotnet#method('remove_DecodeFailed(', ''),
  \ dotnet#method('get_Width(', ''),
  \ dotnet#method('get_Height(', ''),
  \ dotnet#method('get_DelayCreation(', ''),
  \ dotnet#method('set_DelayCreation(', ''),
  \ dotnet#method('get_CreationCompleted(', ''),
  \ dotnet#method('set_CreationCompleted(', ''),
  \ dotnet#method('CompleteDelayedCreation(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#method('get_SyncObject(', ''),
  \ dotnet#method('get_IsSourceCached(', ''),
  \ dotnet#method('set_IsSourceCached(', ''),
  \ dotnet#method('set_WicSourceHandle(', ''),
  \ dotnet#method('UpdateCachedSettings(', ''),
  \ dotnet#method('CriticalCopyPixels(', ''),
  \ dotnet#method('CheckIfSiteOfOrigin(', ''),
  \ dotnet#method('UpdateResource(', ''),
  \ dotnet#method('GetChannelCountCore(', ''),
  \ dotnet#method('GetChannelCount(', ''),
  \ dotnet#method('UpdateBitmapSourceResource(', ''),
  \ dotnet#method('RecoverFromDecodeFailure(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('ReleaseOnChannel(', ''),
  \ dotnet#method('GetClosestDUCEFormat(', ''),
  \ dotnet#method('CreateCachedBitmap(', ''),
  \ dotnet#method('RegisterDownloadEventSource(', ''),
  \ dotnet#method('UnregisterDownloadEventSource(', ''),
  \ dotnet#method('IsValidForFinalizeCreation(', ''),
  \ dotnet#method('get_ShouldCloneEventDelegates(', ''),
  \ dotnet#method('FreezeCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#event('DownloadCompleted', 'EventHandler'),
  \ dotnet#event('DownloadProgress', 'EventHandler'),
  \ dotnet#event('DownloadFailed', 'EventHandler'),
  \ dotnet#event('DecodeFailed', 'EventHandler'),
  \ dotnet#prop('Format', 'PixelFormat'),
  \ dotnet#prop('PixelWidth', 'int32'),
  \ dotnet#prop('PixelHeight', 'int32'),
  \ dotnet#prop('DpiX', 'float64'),
  \ dotnet#prop('DpiY', 'float64'),
  \ dotnet#prop('Palette', 'BitmapPalette'),
  \ dotnet#prop('IsDownloading', 'bool'),
  \ dotnet#prop('Width', 'float64'),
  \ dotnet#prop('Height', 'float64'),
  \ dotnet#prop('Metadata', 'ImageMetadata'),
  \ dotnet#prop('Size', 'Size'),
  \ dotnet#prop('DelayCreation', 'bool'),
  \ dotnet#prop('CreationCompleted', 'bool'),
  \ dotnet#prop('SyncObject', 'object'),
  \ dotnet#prop('IsSourceCached', 'bool'),
  \ dotnet#prop('WicSourceHandle', 'BitmapSourceSafeMILHandle'),
  \ dotnet#prop('DUCECompatiblePtr', 'BitmapSourceSafeMILHandle'),
  \ dotnet#prop('ShouldCloneEventDelegates', 'bool'),
  \ ])

call dotnet#class('BitmapFrame', 'BitmapSource', [ 
  \ dotnet#field('_thumbnail', 'BitmapSource'),
  \ dotnet#field('_metadata', 'BitmapMetadata'),
  \ dotnet#field('_readOnlycolorContexts', 'ReadOnlyCollection'),
  \ dotnet#method('BitmapFrame(', ''),
  \ dotnet#method('CreateFromUriOrStream(', ''),
  \ dotnet#method('Create(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#method('set_InternalMetadata(', ''),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('Thumbnail', 'BitmapSource'),
  \ dotnet#prop('Decoder', 'BitmapDecoder'),
  \ dotnet#prop('ColorContexts', 'ReadOnlyCollection'),
  \ dotnet#prop('InternalMetadata', 'BitmapMetadata'),
  \ ])

call dotnet#class('BitmapMetadata', 'ImageMetadata', [ 
  \ dotnet#method('GetContainerFormat(', ''),
  \ dotnet#method('GetCount(', ''),
  \ dotnet#method('GetReaderByIndex(', ''),
  \ dotnet#method('GetEnumerator(', ''),
  \ dotnet#method('InitializeFromBlockReader(', ''),
  \ dotnet#method('GetWriterByIndex(', ''),
  \ dotnet#method('AddWriter(', ''),
  \ dotnet#method('SetWriterByIndex(', ''),
  \ dotnet#method('RemoveWriterByIndex(', ''),
  \ dotnet#method('BitmapMetadata(', ''),
  \ dotnet#prop('MetadataBlocks', 'ArrayList'),
  \ dotnet#method('Next(', ''),
  \ dotnet#method('Skip(', ''),
  \ dotnet#method('Reset(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('get_Format(', ''),
  \ dotnet#method('get_Location(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('SetQuery(', ''),
  \ dotnet#method('GetQuery(', ''),
  \ dotnet#method('RemoveQuery(', ''),
  \ dotnet#method('ContainsQuery(', ''),
  \ dotnet#method('get_Author(', ''),
  \ dotnet#method('set_Author(', ''),
  \ dotnet#method('get_Title(', ''),
  \ dotnet#method('set_Title(', ''),
  \ dotnet#method('get_Rating(', ''),
  \ dotnet#method('set_Rating(', ''),
  \ dotnet#method('get_Subject(', ''),
  \ dotnet#method('set_Subject(', ''),
  \ dotnet#method('get_Comment(', ''),
  \ dotnet#method('set_Comment(', ''),
  \ dotnet#method('get_DateTaken(', ''),
  \ dotnet#method('set_DateTaken(', ''),
  \ dotnet#method('get_ApplicationName(', ''),
  \ dotnet#method('set_ApplicationName(', ''),
  \ dotnet#method('get_Copyright(', ''),
  \ dotnet#method('set_Copyright(', ''),
  \ dotnet#method('get_CameraManufacturer(', ''),
  \ dotnet#method('set_CameraManufacturer(', ''),
  \ dotnet#method('get_CameraModel(', ''),
  \ dotnet#method('set_CameraModel(', ''),
  \ dotnet#method('get_Keywords(', ''),
  \ dotnet#method('set_Keywords(', ''),
  \ dotnet#method('get_SyncObject(', ''),
  \ dotnet#prop('Format', 'string'),
  \ dotnet#prop('Location', 'string'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('Author', 'ReadOnlyCollection'),
  \ dotnet#prop('Title', 'string'),
  \ dotnet#prop('Rating', 'int32'),
  \ dotnet#prop('Subject', 'string'),
  \ dotnet#prop('Comment', 'string'),
  \ dotnet#prop('DateTaken', 'string'),
  \ dotnet#prop('ApplicationName', 'string'),
  \ dotnet#prop('Copyright', 'string'),
  \ dotnet#prop('CameraManufacturer', 'string'),
  \ dotnet#prop('CameraModel', 'string'),
  \ dotnet#prop('Keywords', 'ReadOnlyCollection'),
  \ dotnet#prop('GuidFormat', 'Guid'),
  \ dotnet#prop('InternalMetadataHandle', 'SafeMILHandle'),
  \ dotnet#prop('SyncObject', 'object'),
  \ dotnet#prop('BlockWriter', 'BitmapMetadata/BitmapMetadataBlockWriter'),
  \ ])

call dotnet#class('BitmapMetadataBlob', 'Object', [ 
  \ dotnet#method('BitmapMetadataBlob(', ''),
  \ dotnet#method('GetBlobValue(', ''),
  \ dotnet#method('InternalGetBlobValue(', ''),
  \ ])

call dotnet#class('BitmapPalette', 'DispatcherObject', [ 
  \ dotnet#method('BitmapPalette(', ''),
  \ dotnet#method('CreateFromBitmapSource(', ''),
  \ dotnet#method('get_Colors(', ''),
  \ dotnet#method('DoesPaletteHaveAlpha(', ''),
  \ dotnet#method('CreateInternalPalette(', ''),
  \ dotnet#prop('Colors', 'IList'),
  \ dotnet#prop('InternalPalette', 'SafeMILHandle'),
  \ ])

call dotnet#class('BitmapPalettes', 'Object', [ 
  \ dotnet#method('FromMILPaletteType(', ''),
  \ dotnet#prop('BlackAndWhite', 'BitmapPalette'),
  \ dotnet#prop('BlackAndWhiteTransparent', 'BitmapPalette'),
  \ dotnet#prop('Halftone8', 'BitmapPalette'),
  \ dotnet#prop('Halftone8Transparent', 'BitmapPalette'),
  \ dotnet#prop('Halftone27', 'BitmapPalette'),
  \ dotnet#prop('Halftone27Transparent', 'BitmapPalette'),
  \ dotnet#prop('Halftone64', 'BitmapPalette'),
  \ dotnet#prop('Halftone64Transparent', 'BitmapPalette'),
  \ dotnet#prop('Halftone125', 'BitmapPalette'),
  \ dotnet#prop('Halftone125Transparent', 'BitmapPalette'),
  \ dotnet#prop('Halftone216', 'BitmapPalette'),
  \ dotnet#prop('Halftone216Transparent', 'BitmapPalette'),
  \ dotnet#prop('Halftone252', 'BitmapPalette'),
  \ dotnet#prop('Halftone252Transparent', 'BitmapPalette'),
  \ dotnet#prop('Halftone256', 'BitmapPalette'),
  \ dotnet#prop('Halftone256Transparent', 'BitmapPalette'),
  \ dotnet#prop('Gray4', 'BitmapPalette'),
  \ dotnet#prop('Gray4Transparent', 'BitmapPalette'),
  \ dotnet#prop('Gray16', 'BitmapPalette'),
  \ dotnet#prop('Gray16Transparent', 'BitmapPalette'),
  \ dotnet#prop('Gray256', 'BitmapPalette'),
  \ dotnet#prop('Gray256Transparent', 'BitmapPalette'),
  \ dotnet#prop('WebPalette', 'BitmapPalette'),
  \ dotnet#prop('WebPaletteTransparent', 'BitmapPalette'),
  \ ])

call dotnet#class('BitmapSizeOptions', 'Object', [ 
  \ dotnet#method('get_PreservesAspectRatio(', ''),
  \ dotnet#method('get_PixelWidth(', ''),
  \ dotnet#method('get_PixelHeight(', ''),
  \ dotnet#method('get_Rotation(', ''),
  \ dotnet#method('FromEmptyOptions(', ''),
  \ dotnet#method('FromHeight(', ''),
  \ dotnet#method('FromWidth(', ''),
  \ dotnet#method('FromWidthAndHeight(', ''),
  \ dotnet#method('FromRotation(', ''),
  \ dotnet#method('GetScaledWidthAndHeight(', ''),
  \ dotnet#method('get_DoesScale(', ''),
  \ dotnet#method('BitmapSizeOptions(', ''),
  \ dotnet#prop('PreservesAspectRatio', 'bool'),
  \ dotnet#prop('PixelWidth', 'int32'),
  \ dotnet#prop('PixelHeight', 'int32'),
  \ dotnet#prop('Rotation', 'Rotation'),
  \ dotnet#prop('DoesScale', 'bool'),
  \ dotnet#prop('WICTransformOptions', 'WICBitmapTransformOptions'),
  \ ])

call dotnet#class('BitmapImage', 'BitmapSource', [ 
  \ dotnet#method('BitmapImage(', ''),
  \ dotnet#method('BeginInit(', ''),
  \ dotnet#method('EndInit(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#method('get_IsDownloading(', ''),
  \ dotnet#method('CanSerializeToString(', ''),
  \ dotnet#method('ConvertToString(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_UriCachePolicy(', ''),
  \ dotnet#method('set_UriCachePolicy(', ''),
  \ dotnet#method('get_UriSource(', ''),
  \ dotnet#method('set_UriSource(', ''),
  \ dotnet#method('get_StreamSource(', ''),
  \ dotnet#method('set_StreamSource(', ''),
  \ dotnet#method('get_DecodePixelWidth(', ''),
  \ dotnet#method('set_DecodePixelWidth(', ''),
  \ dotnet#method('get_DecodePixelHeight(', ''),
  \ dotnet#method('set_DecodePixelHeight(', ''),
  \ dotnet#method('get_Rotation(', ''),
  \ dotnet#method('set_Rotation(', ''),
  \ dotnet#method('get_SourceRect(', ''),
  \ dotnet#method('set_SourceRect(', ''),
  \ dotnet#method('get_CreateOptions(', ''),
  \ dotnet#method('set_CreateOptions(', ''),
  \ dotnet#method('get_CacheOption(', ''),
  \ dotnet#method('set_CacheOption(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('IsDownloading', 'bool'),
  \ dotnet#prop('Metadata', 'ImageMetadata'),
  \ dotnet#prop('UriCachePolicy', 'RequestCachePolicy'),
  \ dotnet#prop('UriSource', 'Uri'),
  \ dotnet#prop('StreamSource', 'Stream'),
  \ dotnet#prop('DecodePixelWidth', 'int32'),
  \ dotnet#prop('DecodePixelHeight', 'int32'),
  \ dotnet#prop('Rotation', 'Rotation'),
  \ dotnet#prop('SourceRect', 'Int32Rect'),
  \ dotnet#prop('CreateOptions', 'BitmapCreateOptions'),
  \ dotnet#prop('CacheOption', 'BitmapCacheOption'),
  \ ])

call dotnet#class('CachedBitmap', 'BitmapSource', [ 
  \ dotnet#method('CachedBitmap(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ ])

call dotnet#class('ColorConvertedBitmap', 'BitmapSource', [ 
  \ dotnet#method('ColorConvertedBitmap(', ''),
  \ dotnet#method('BeginInit(', ''),
  \ dotnet#method('EndInit(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#method('IsValidForFinalizeCreation(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Source(', ''),
  \ dotnet#method('set_Source(', ''),
  \ dotnet#method('get_SourceColorContext(', ''),
  \ dotnet#method('set_SourceColorContext(', ''),
  \ dotnet#method('get_DestinationColorContext(', ''),
  \ dotnet#method('set_DestinationColorContext(', ''),
  \ dotnet#method('get_DestinationFormat(', ''),
  \ dotnet#method('set_DestinationFormat(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#prop('Source', 'BitmapSource'),
  \ dotnet#prop('SourceColorContext', 'ColorContext'),
  \ dotnet#prop('DestinationColorContext', 'ColorContext'),
  \ dotnet#prop('DestinationFormat', 'PixelFormat'),
  \ ])

call dotnet#class('CroppedBitmap', 'BitmapSource', [ 
  \ dotnet#method('CroppedBitmap(', ''),
  \ dotnet#method('BeginInit(', ''),
  \ dotnet#method('EndInit(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#method('IsValidForFinalizeCreation(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Source(', ''),
  \ dotnet#method('set_Source(', ''),
  \ dotnet#method('get_SourceRect(', ''),
  \ dotnet#method('set_SourceRect(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#prop('Source', 'BitmapSource'),
  \ dotnet#prop('SourceRect', 'Int32Rect'),
  \ ])

call dotnet#class('DownloadProgressEventArgs', 'EventArgs', [ 
  \ dotnet#method('DownloadProgressEventArgs(', ''),
  \ dotnet#method('get_Progress(', ''),
  \ dotnet#prop('Progress', 'int32'),
  \ ])

call dotnet#class('FormatConvertedBitmap', 'BitmapSource', [ 
  \ dotnet#method('FormatConvertedBitmap(', ''),
  \ dotnet#method('BeginInit(', ''),
  \ dotnet#method('EndInit(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#method('IsValidForFinalizeCreation(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Source(', ''),
  \ dotnet#method('set_Source(', ''),
  \ dotnet#method('get_DestinationFormat(', ''),
  \ dotnet#method('set_DestinationFormat(', ''),
  \ dotnet#method('get_DestinationPalette(', ''),
  \ dotnet#method('set_DestinationPalette(', ''),
  \ dotnet#method('get_AlphaThreshold(', ''),
  \ dotnet#method('set_AlphaThreshold(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#prop('Source', 'BitmapSource'),
  \ dotnet#prop('DestinationFormat', 'PixelFormat'),
  \ dotnet#prop('DestinationPalette', 'BitmapPalette'),
  \ dotnet#prop('AlphaThreshold', 'float64'),
  \ ])

call dotnet#class('GifBitmapDecoder', 'BitmapDecoder', [ 
  \ dotnet#method('GifBitmapDecoder(', ''),
  \ dotnet#method('SealObject(', ''),
  \ ])

call dotnet#class('GifBitmapEncoder', 'BitmapEncoder', [ 
  \ dotnet#method('GifBitmapEncoder(', ''),
  \ dotnet#method('SetupFrame(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('ContainerFormat', 'Guid'),
  \ ])

call dotnet#class('IconBitmapDecoder', 'BitmapDecoder', [ 
  \ dotnet#method('IconBitmapDecoder(', ''),
  \ dotnet#method('SealObject(', ''),
  \ ])

call dotnet#class('InPlaceBitmapMetadataWriter', 'BitmapMetadata', [ 
  \ dotnet#method('InPlaceBitmapMetadataWriter(', ''),
  \ dotnet#method('CreateFromFrameDecode(', ''),
  \ dotnet#method('CreateFromDecoder(', ''),
  \ dotnet#method('TrySave(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ ])

call dotnet#class('LateBoundBitmapDecoder', 'BitmapDecoder', [ 
  \ dotnet#method('LateBoundBitmapDecoder(', ''),
  \ dotnet#method('get_Decoder(', ''),
  \ dotnet#method('get_IsDownloading(', ''),
  \ dotnet#method('DownloadCallback(', ''),
  \ dotnet#method('ProgressCallback(', ''),
  \ dotnet#method('ExceptionCallback(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('Palette', 'BitmapPalette'),
  \ dotnet#prop('ColorContexts', 'ReadOnlyCollection'),
  \ dotnet#prop('Thumbnail', 'BitmapSource'),
  \ dotnet#prop('CodecInfo', 'BitmapCodecInfo'),
  \ dotnet#prop('Frames', 'ReadOnlyCollection'),
  \ dotnet#prop('Preview', 'BitmapSource'),
  \ dotnet#prop('Decoder', 'BitmapDecoder'),
  \ dotnet#prop('IsDownloading', 'bool'),
  \ ])

call dotnet#class('JpegBitmapDecoder', 'BitmapDecoder', [ 
  \ dotnet#method('JpegBitmapDecoder(', ''),
  \ dotnet#method('SealObject(', ''),
  \ ])

call dotnet#class('JpegBitmapEncoder', 'BitmapEncoder', [ 
  \ dotnet#method('JpegBitmapEncoder(', ''),
  \ dotnet#method('get_QualityLevel(', ''),
  \ dotnet#method('set_QualityLevel(', ''),
  \ dotnet#method('get_Rotation(', ''),
  \ dotnet#method('set_Rotation(', ''),
  \ dotnet#method('get_FlipHorizontal(', ''),
  \ dotnet#method('set_FlipHorizontal(', ''),
  \ dotnet#method('get_FlipVertical(', ''),
  \ dotnet#method('set_FlipVertical(', ''),
  \ dotnet#method('SetupFrame(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('QualityLevel', 'int32'),
  \ dotnet#prop('Rotation', 'Rotation'),
  \ dotnet#prop('FlipHorizontal', 'bool'),
  \ dotnet#prop('FlipVertical', 'bool'),
  \ dotnet#prop('ContainerFormat', 'Guid'),
  \ ])

call dotnet#class('PngBitmapDecoder', 'BitmapDecoder', [ 
  \ dotnet#method('PngBitmapDecoder(', ''),
  \ dotnet#method('SealObject(', ''),
  \ ])

call dotnet#class('PngBitmapEncoder', 'BitmapEncoder', [ 
  \ dotnet#method('PngBitmapEncoder(', ''),
  \ dotnet#method('get_Interlace(', ''),
  \ dotnet#method('set_Interlace(', ''),
  \ dotnet#method('SetupFrame(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('Interlace', 'PngInterlaceOption'),
  \ dotnet#prop('ContainerFormat', 'Guid'),
  \ ])

call dotnet#class('RenderTargetBitmap', 'BitmapSource', [ 
  \ dotnet#method('RenderTargetBitmap(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('Render(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('RenderTargetContentsChanged(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#prop('MILRenderTarget', 'SafeMILHandle'),
  \ ])

call dotnet#class('TiffBitmapDecoder', 'BitmapDecoder', [ 
  \ dotnet#method('TiffBitmapDecoder(', ''),
  \ dotnet#method('get_IsMetadataFixedSize(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('IsMetadataFixedSize', 'bool'),
  \ ])

call dotnet#class('TiffBitmapEncoder', 'BitmapEncoder', [ 
  \ dotnet#method('TiffBitmapEncoder(', ''),
  \ dotnet#method('get_Compression(', ''),
  \ dotnet#method('set_Compression(', ''),
  \ dotnet#method('get_IsMetadataFixedSize(', ''),
  \ dotnet#method('SetupFrame(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('Compression', 'TiffCompressOption'),
  \ dotnet#prop('ContainerFormat', 'Guid'),
  \ dotnet#prop('IsMetadataFixedSize', 'bool'),
  \ ])

call dotnet#class('WmpBitmapDecoder', 'BitmapDecoder', [ 
  \ dotnet#method('WmpBitmapDecoder(', ''),
  \ dotnet#method('SealObject(', ''),
  \ ])

call dotnet#class('WmpBitmapEncoder', 'BitmapEncoder', [ 
  \ dotnet#method('WmpBitmapEncoder(', ''),
  \ dotnet#method('get_ImageQualityLevel(', ''),
  \ dotnet#method('set_ImageQualityLevel(', ''),
  \ dotnet#method('get_Lossless(', ''),
  \ dotnet#method('set_Lossless(', ''),
  \ dotnet#method('get_Rotation(', ''),
  \ dotnet#method('set_Rotation(', ''),
  \ dotnet#method('get_FlipHorizontal(', ''),
  \ dotnet#method('set_FlipHorizontal(', ''),
  \ dotnet#method('get_FlipVertical(', ''),
  \ dotnet#method('set_FlipVertical(', ''),
  \ dotnet#method('get_UseCodecOptions(', ''),
  \ dotnet#method('set_UseCodecOptions(', ''),
  \ dotnet#method('get_QualityLevel(', ''),
  \ dotnet#method('set_QualityLevel(', ''),
  \ dotnet#method('get_SubsamplingLevel(', ''),
  \ dotnet#method('set_SubsamplingLevel(', ''),
  \ dotnet#method('get_OverlapLevel(', ''),
  \ dotnet#method('set_OverlapLevel(', ''),
  \ dotnet#method('get_HorizontalTileSlices(', ''),
  \ dotnet#method('set_HorizontalTileSlices(', ''),
  \ dotnet#method('get_VerticalTileSlices(', ''),
  \ dotnet#method('set_VerticalTileSlices(', ''),
  \ dotnet#method('get_FrequencyOrder(', ''),
  \ dotnet#method('set_FrequencyOrder(', ''),
  \ dotnet#method('get_InterleavedAlpha(', ''),
  \ dotnet#method('set_InterleavedAlpha(', ''),
  \ dotnet#method('get_AlphaQualityLevel(', ''),
  \ dotnet#method('set_AlphaQualityLevel(', ''),
  \ dotnet#method('get_CompressedDomainTranscode(', ''),
  \ dotnet#method('set_CompressedDomainTranscode(', ''),
  \ dotnet#method('get_ImageDataDiscardLevel(', ''),
  \ dotnet#method('set_ImageDataDiscardLevel(', ''),
  \ dotnet#method('get_AlphaDataDiscardLevel(', ''),
  \ dotnet#method('set_AlphaDataDiscardLevel(', ''),
  \ dotnet#method('get_IgnoreOverlap(', ''),
  \ dotnet#method('set_IgnoreOverlap(', ''),
  \ dotnet#method('SetupFrame(', ''),
  \ dotnet#method('SealObject(', ''),
  \ dotnet#prop('ImageQualityLevel', 'float32'),
  \ dotnet#prop('Lossless', 'bool'),
  \ dotnet#prop('Rotation', 'Rotation'),
  \ dotnet#prop('FlipHorizontal', 'bool'),
  \ dotnet#prop('FlipVertical', 'bool'),
  \ dotnet#prop('UseCodecOptions', 'bool'),
  \ dotnet#prop('QualityLevel', 'uint8'),
  \ dotnet#prop('SubsamplingLevel', 'uint8'),
  \ dotnet#prop('OverlapLevel', 'uint8'),
  \ dotnet#prop('HorizontalTileSlices', 'int16'),
  \ dotnet#prop('VerticalTileSlices', 'int16'),
  \ dotnet#prop('FrequencyOrder', 'bool'),
  \ dotnet#prop('InterleavedAlpha', 'bool'),
  \ dotnet#prop('AlphaQualityLevel', 'uint8'),
  \ dotnet#prop('CompressedDomainTranscode', 'bool'),
  \ dotnet#prop('ImageDataDiscardLevel', 'uint8'),
  \ dotnet#prop('AlphaDataDiscardLevel', 'uint8'),
  \ dotnet#prop('IgnoreOverlap', 'bool'),
  \ dotnet#prop('ContainerFormat', 'Guid'),
  \ ])

call dotnet#class('TransformedBitmap', 'BitmapSource', [ 
  \ dotnet#method('TransformedBitmap(', ''),
  \ dotnet#method('BeginInit(', ''),
  \ dotnet#method('EndInit(', ''),
  \ dotnet#method('CheckTransform(', ''),
  \ dotnet#method('GetParamsFromTransform(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#method('IsValidForFinalizeCreation(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('get_Source(', ''),
  \ dotnet#method('set_Source(', ''),
  \ dotnet#method('get_Transform(', ''),
  \ dotnet#method('set_Transform(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#prop('Source', 'BitmapSource'),
  \ dotnet#prop('Transform', 'Transform'),
  \ ])

call dotnet#class('WriteableBitmap', 'BitmapSource', [ 
  \ dotnet#method('WriteableBitmap(', ''),
  \ dotnet#method('AddDirtyRect(', ''),
  \ dotnet#method('Clone(', ''),
  \ dotnet#method('CloneCurrentValue(', ''),
  \ dotnet#method('Lock(', ''),
  \ dotnet#method('TryLock(', ''),
  \ dotnet#method('Unlock(', ''),
  \ dotnet#method('WritePixels(', ''),
  \ dotnet#method('CreateInstanceCore(', ''),
  \ dotnet#method('CloneCore(', ''),
  \ dotnet#method('FreezeCore(', ''),
  \ dotnet#method('CloneCurrentValueCore(', ''),
  \ dotnet#method('GetAsFrozenCore(', ''),
  \ dotnet#method('GetCurrentValueAsFrozenCore(', ''),
  \ dotnet#method('FinalizeCreation(', ''),
  \ dotnet#method('ReleaseOnChannelCore(', ''),
  \ dotnet#method('UpdateBitmapSourceResource(', ''),
  \ dotnet#method('get_BackBuffer(', ''),
  \ dotnet#method('get_BackBufferStride(', ''),
  \ dotnet#method('set_BackBuffer(', ''),
  \ dotnet#prop('BackBuffer', 'int'),
  \ dotnet#prop('BackBufferStride', 'int32'),
  \ ])


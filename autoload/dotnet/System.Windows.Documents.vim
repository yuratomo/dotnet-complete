
call dotnet#class('ContentPosition', 'Object', [ 
  \ dotnet#method('ContentPosition(', ''),
  \ ])

call dotnet#class('DocumentPage', 'Object', [ 
  \ dotnet#method('DocumentPage(', ''),
  \ dotnet#method('Dispose(', ''),
  \ dotnet#method('add_PageDestroyed(', ''),
  \ dotnet#method('remove_PageDestroyed(', ''),
  \ dotnet#method('OnPageDestroyed(', ''),
  \ dotnet#method('SetVisual(', ''),
  \ dotnet#method('SetSize(', ''),
  \ dotnet#method('SetBleedBox(', ''),
  \ dotnet#method('SetContentBox(', ''),
  \ dotnet#event('PageDestroyed', 'EventHandler'),
  \ dotnet#prop('Visual', 'Visual'),
  \ dotnet#prop('Size', 'Size'),
  \ dotnet#prop('BleedBox', 'Rect'),
  \ dotnet#prop('ContentBox', 'Rect'),
  \ ])

call dotnet#class('DocumentPaginator', 'Object', [ 
  \ dotnet#method('GetPageAsync(', ''),
  \ dotnet#method('ComputePageCount(', ''),
  \ dotnet#method('ComputePageCountAsync(', ''),
  \ dotnet#method('CancelAsync(', ''),
  \ dotnet#method('get_IsPageCountValid(', ''),
  \ dotnet#method('get_PageCount(', ''),
  \ dotnet#method('set_PageSize(', ''),
  \ dotnet#method('add_GetPageCompleted(', ''),
  \ dotnet#method('remove_GetPageCompleted(', ''),
  \ dotnet#method('add_ComputePageCountCompleted(', ''),
  \ dotnet#method('remove_ComputePageCountCompleted(', ''),
  \ dotnet#method('add_PagesChanged(', ''),
  \ dotnet#method('remove_PagesChanged(', ''),
  \ dotnet#method('OnGetPageCompleted(', ''),
  \ dotnet#method('OnComputePageCountCompleted(', ''),
  \ dotnet#method('OnPagesChanged(', ''),
  \ dotnet#method('DocumentPaginator(', ''),
  \ dotnet#event('GetPageCompleted', 'GetPageCompletedEventHandler'),
  \ dotnet#event('ComputePageCountCompleted', 'AsyncCompletedEventHandler'),
  \ dotnet#event('PagesChanged', 'PagesChangedEventHandler'),
  \ dotnet#prop('IsPageCountValid', 'bool'),
  \ dotnet#prop('PageCount', 'int32'),
  \ dotnet#prop('PageSize', 'Size'),
  \ dotnet#prop('Source', 'IDocumentPaginatorSource'),
  \ ])

call dotnet#class('DynamicDocumentPaginator', 'DocumentPaginator', [ 
  \ dotnet#method('GetPageNumber(', ''),
  \ dotnet#method('GetPageNumberAsync(', ''),
  \ dotnet#method('get_IsBackgroundPaginationEnabled(', ''),
  \ dotnet#method('set_IsBackgroundPaginationEnabled(', ''),
  \ dotnet#method('add_GetPageNumberCompleted(', ''),
  \ dotnet#method('remove_GetPageNumberCompleted(', ''),
  \ dotnet#method('add_PaginationCompleted(', ''),
  \ dotnet#method('remove_PaginationCompleted(', ''),
  \ dotnet#method('add_PaginationProgress(', ''),
  \ dotnet#method('remove_PaginationProgress(', ''),
  \ dotnet#method('OnGetPageNumberCompleted(', ''),
  \ dotnet#method('OnPaginationProgress(', ''),
  \ dotnet#method('OnPaginationCompleted(', ''),
  \ dotnet#method('DynamicDocumentPaginator(', ''),
  \ dotnet#event('GetPageNumberCompleted', 'GetPageNumberCompletedEventHandler'),
  \ dotnet#event('PaginationCompleted', 'EventHandler'),
  \ dotnet#event('PaginationProgress', 'PaginationProgressEventHandler'),
  \ dotnet#prop('IsBackgroundPaginationEnabled', 'bool'),
  \ ])

call dotnet#class('GetPageCompletedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('GetPageCompletedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('GetPageCompletedEventArgs', 'AsyncCompletedEventArgs', [ 
  \ dotnet#method('GetPageCompletedEventArgs(', ''),
  \ dotnet#method('get_DocumentPage(', ''),
  \ dotnet#method('get_PageNumber(', ''),
  \ dotnet#prop('DocumentPage', 'DocumentPage'),
  \ dotnet#prop('PageNumber', 'int32'),
  \ ])

call dotnet#class('GetPageNumberCompletedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('GetPageNumberCompletedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('GetPageNumberCompletedEventArgs', 'AsyncCompletedEventArgs', [ 
  \ dotnet#method('GetPageNumberCompletedEventArgs(', ''),
  \ dotnet#method('get_ContentPosition(', ''),
  \ dotnet#method('get_PageNumber(', ''),
  \ dotnet#prop('ContentPosition', 'ContentPosition'),
  \ dotnet#prop('PageNumber', 'int32'),
  \ ])

call dotnet#class('PagesChangedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('PagesChangedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('PagesChangedEventArgs', 'EventArgs', [ 
  \ dotnet#method('PagesChangedEventArgs(', ''),
  \ dotnet#method('get_Start(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#prop('Start', 'int32'),
  \ dotnet#prop('Count', 'int32'),
  \ ])

call dotnet#class('PaginationProgressEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('PaginationProgressEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('PaginationProgressEventArgs', 'EventArgs', [ 
  \ dotnet#method('PaginationProgressEventArgs(', ''),
  \ dotnet#method('get_Start(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#prop('Start', 'int32'),
  \ dotnet#prop('Count', 'int32'),
  \ ])

call dotnet#class('Adorner', 'FrameworkElement', [ 
  \ dotnet#method('Adorner(', ''),
  \ dotnet#method('MeasureOverride(', ''),
  \ dotnet#method('GetLayoutClip(', ''),
  \ dotnet#method('set_AdornerClip(', ''),
  \ dotnet#method('set_AdornerTransform(', ''),
  \ dotnet#method('get_AdornedElement(', ''),
  \ dotnet#method('get_IsClipEnabled(', ''),
  \ dotnet#method('set_IsClipEnabled(', ''),
  \ dotnet#method('NeedsUpdate(', ''),
  \ dotnet#prop('AdornerClip', 'Geometry'),
  \ dotnet#prop('AdornerTransform', 'Transform'),
  \ dotnet#prop('AdornedElement', 'UIElement'),
  \ dotnet#prop('IsClipEnabled', 'bool'),
  \ ])

call dotnet#class('AdornerDecorator', 'Decorator', [ 
  \ dotnet#method('AdornerDecorator(', ''),
  \ dotnet#method('get_AdornerLayer(', ''),
  \ dotnet#method('MeasureOverride(', ''),
  \ dotnet#method('ArrangeOverride(', ''),
  \ dotnet#method('set_Child(', ''),
  \ dotnet#method('get_VisualChildrenCount(', ''),
  \ dotnet#method('GetVisualChild(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('AdornerLayer', 'AdornerLayer'),
  \ dotnet#prop('Child', 'UIElement'),
  \ dotnet#prop('VisualChildrenCount', 'int32'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('AdornerLayer', 'FrameworkElement', [ 
  \ dotnet#method('AdornerLayer(', ''),
  \ dotnet#method('set_RenderSize(', ''),
  \ dotnet#method('set_Transform(', ''),
  \ dotnet#method('get_ZOrder(', ''),
  \ dotnet#method('set_ZOrder(', ''),
  \ dotnet#method('set_Clip(', ''),
  \ dotnet#prop('Adorner', 'Adorner'),
  \ dotnet#prop('RenderSize', 'Size'),
  \ dotnet#prop('Transform', 'GeneralTransform'),
  \ dotnet#prop('ZOrder', 'int32'),
  \ dotnet#prop('Clip', 'Geometry'),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('Update(', ''),
  \ dotnet#method('GetAdorners(', ''),
  \ dotnet#method('AdornerHitTest(', ''),
  \ dotnet#method('GetAdornerLayer(', ''),
  \ dotnet#method('get_VisualChildrenCount(', ''),
  \ dotnet#method('GetVisualChild(', ''),
  \ dotnet#method('MeasureOverride(', ''),
  \ dotnet#method('ArrangeOverride(', ''),
  \ dotnet#method('InvalidateAdorner(', ''),
  \ dotnet#method('OnLayoutUpdated(', ''),
  \ dotnet#method('SetAdornerZOrder(', ''),
  \ dotnet#method('GetAdornerZOrder(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#prop('VisualChildrenCount', 'int32'),
  \ dotnet#prop('LogicalChildren', 'IEnumerator'),
  \ dotnet#prop('ElementMap', 'HybridDictionary'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('TextElement', 'FrameworkContentElement', [ 
  \ dotnet#method('TextElement(', ''),
  \ dotnet#method('Reposition(', ''),
  \ dotnet#method('RepositionWithContent(', ''),
  \ dotnet#method('get_ElementStart(', ''),
  \ dotnet#method('get_ContentStart(', ''),
  \ dotnet#method('get_ContentEnd(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('get_ElementEnd(', ''),
  \ dotnet#method('get_FontFamily(', ''),
  \ dotnet#method('set_FontFamily(', ''),
  \ dotnet#method('SetFontFamily(', ''),
  \ dotnet#method('GetFontFamily(', ''),
  \ dotnet#method('get_FontStyle(', ''),
  \ dotnet#method('set_FontStyle(', ''),
  \ dotnet#method('SetFontStyle(', ''),
  \ dotnet#method('GetFontStyle(', ''),
  \ dotnet#method('get_FontWeight(', ''),
  \ dotnet#method('set_FontWeight(', ''),
  \ dotnet#method('SetFontWeight(', ''),
  \ dotnet#method('GetFontWeight(', ''),
  \ dotnet#method('get_FontStretch(', ''),
  \ dotnet#method('set_FontStretch(', ''),
  \ dotnet#method('SetFontStretch(', ''),
  \ dotnet#method('GetFontStretch(', ''),
  \ dotnet#method('get_FontSize(', ''),
  \ dotnet#method('set_FontSize(', ''),
  \ dotnet#method('SetFontSize(', ''),
  \ dotnet#method('GetFontSize(', ''),
  \ dotnet#method('get_Foreground(', ''),
  \ dotnet#method('set_Foreground(', ''),
  \ dotnet#method('SetForeground(', ''),
  \ dotnet#method('GetForeground(', ''),
  \ dotnet#method('get_Background(', ''),
  \ dotnet#method('set_Background(', ''),
  \ dotnet#method('get_TextEffects(', ''),
  \ dotnet#method('set_TextEffects(', ''),
  \ dotnet#method('get_Typography(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('OnPropertyChanged(', ''),
  \ dotnet#method('NotifyTypographicPropertyChanged(', ''),
  \ dotnet#method('GetTypographyProperties(', ''),
  \ dotnet#method('DeepEndInit(', ''),
  \ dotnet#method('GetCommonAncestor(', ''),
  \ dotnet#method('OnTextUpdated(', ''),
  \ dotnet#method('BeforeLogicalTreeChange(', ''),
  \ dotnet#method('AfterLogicalTreeChange(', ''),
  \ dotnet#method('get_IsEmpty(', ''),
  \ dotnet#method('get_IsInTree(', ''),
  \ dotnet#method('get_ElementStartOffset(', ''),
  \ dotnet#method('get_ContentStartOffset(', ''),
  \ dotnet#method('get_ContentEndOffset(', ''),
  \ dotnet#method('get_ElementEndOffset(', ''),
  \ dotnet#method('get_SymbolCount(', ''),
  \ dotnet#method('set_TextElementNode(', ''),
  \ dotnet#method('get_IsIMEStructuralElement(', ''),
  \ dotnet#method('get_IMELeftEdgeCharCount(', ''),
  \ dotnet#method('get_IsFirstIMEVisibleSibling(', ''),
  \ dotnet#prop('TextRange', 'TextRange'),
  \ dotnet#prop('ElementStart', 'TextPointer'),
  \ dotnet#prop('StaticElementStart', 'StaticTextPointer'),
  \ dotnet#prop('ContentStart', 'TextPointer'),
  \ dotnet#prop('StaticContentStart', 'StaticTextPointer'),
  \ dotnet#prop('ContentEnd', 'TextPointer'),
  \ dotnet#prop('StaticContentEnd', 'StaticTextPointer'),
  \ dotnet#prop('ElementEnd', 'TextPointer'),
  \ dotnet#prop('StaticElementEnd', 'StaticTextPointer'),
  \ dotnet#prop('FontFamily', 'FontFamily'),
  \ dotnet#prop('FontStyle', 'FontStyle'),
  \ dotnet#prop('FontWeight', 'FontWeight'),
  \ dotnet#prop('FontStretch', 'FontStretch'),
  \ dotnet#prop('FontSize', 'float64'),
  \ dotnet#prop('Foreground', 'Brush'),
  \ dotnet#prop('Background', 'Brush'),
  \ dotnet#prop('TextEffects', 'TextEffectCollection'),
  \ dotnet#prop('Typography', 'Typography'),
  \ dotnet#prop('LogicalChildren', 'IEnumerator'),
  \ dotnet#prop('TextContainer', 'TextContainer'),
  \ dotnet#prop('IsEmpty', 'bool'),
  \ dotnet#prop('IsInTree', 'bool'),
  \ dotnet#prop('ElementStartOffset', 'int32'),
  \ dotnet#prop('ContentStartOffset', 'int32'),
  \ dotnet#prop('ContentEndOffset', 'int32'),
  \ dotnet#prop('ElementEndOffset', 'int32'),
  \ dotnet#prop('SymbolCount', 'int32'),
  \ dotnet#prop('TextElementNode', 'TextTreeTextElementNode'),
  \ dotnet#prop('TypographyPropertiesGroup', 'TypographyProperties'),
  \ dotnet#prop('IsIMEStructuralElement', 'bool'),
  \ dotnet#prop('IMELeftEdgeCharCount', 'int32'),
  \ dotnet#prop('IsFirstIMEVisibleSibling', 'bool'),
  \ dotnet#prop('NextElement', 'TextElement'),
  \ dotnet#prop('PreviousElement', 'TextElement'),
  \ dotnet#prop('FirstChildElement', 'TextElement'),
  \ dotnet#prop('LastChildElement', 'TextElement'),
  \ ])

call dotnet#class('Inline', 'TextElement', [ 
  \ dotnet#method('Inline(', ''),
  \ dotnet#method('get_SiblingInlines(', ''),
  \ dotnet#method('get_NextInline(', ''),
  \ dotnet#method('get_PreviousInline(', ''),
  \ dotnet#method('get_BaselineAlignment(', ''),
  \ dotnet#method('set_BaselineAlignment(', ''),
  \ dotnet#method('get_TextDecorations(', ''),
  \ dotnet#method('set_TextDecorations(', ''),
  \ dotnet#method('get_FlowDirection(', ''),
  \ dotnet#method('set_FlowDirection(', ''),
  \ dotnet#method('CreateImplicitRun(', ''),
  \ dotnet#method('CreateImplicitInlineUIContainer(', ''),
  \ dotnet#prop('SiblingInlines', 'InlineCollection'),
  \ dotnet#prop('NextInline', 'Inline'),
  \ dotnet#prop('PreviousInline', 'Inline'),
  \ dotnet#prop('BaselineAlignment', 'BaselineAlignment'),
  \ dotnet#prop('TextDecorations', 'TextDecorationCollection'),
  \ dotnet#prop('FlowDirection', 'FlowDirection'),
  \ ])

call dotnet#class('AnchoredBlock', 'Inline', [ 
  \ dotnet#method('AnchoredBlock(', ''),
  \ dotnet#method('get_Blocks(', ''),
  \ dotnet#method('get_Margin(', ''),
  \ dotnet#method('set_Margin(', ''),
  \ dotnet#method('get_Padding(', ''),
  \ dotnet#method('set_Padding(', ''),
  \ dotnet#method('get_BorderThickness(', ''),
  \ dotnet#method('set_BorderThickness(', ''),
  \ dotnet#method('get_BorderBrush(', ''),
  \ dotnet#method('set_BorderBrush(', ''),
  \ dotnet#method('get_TextAlignment(', ''),
  \ dotnet#method('set_TextAlignment(', ''),
  \ dotnet#method('get_LineHeight(', ''),
  \ dotnet#method('set_LineHeight(', ''),
  \ dotnet#method('get_LineStackingStrategy(', ''),
  \ dotnet#method('set_LineStackingStrategy(', ''),
  \ dotnet#method('ShouldSerializeBlocks(', ''),
  \ dotnet#method('get_IsIMEStructuralElement(', ''),
  \ dotnet#prop('Blocks', 'BlockCollection'),
  \ dotnet#prop('Margin', 'Thickness'),
  \ dotnet#prop('Padding', 'Thickness'),
  \ dotnet#prop('BorderThickness', 'Thickness'),
  \ dotnet#prop('BorderBrush', 'Brush'),
  \ dotnet#prop('TextAlignment', 'TextAlignment'),
  \ dotnet#prop('LineHeight', 'float64'),
  \ dotnet#prop('LineStackingStrategy', 'LineStackingStrategy'),
  \ dotnet#prop('IsIMEStructuralElement', 'bool'),
  \ ])

call dotnet#class('Block', 'TextElement', [ 
  \ dotnet#method('get_SiblingBlocks(', ''),
  \ dotnet#method('get_NextBlock(', ''),
  \ dotnet#method('get_PreviousBlock(', ''),
  \ dotnet#method('get_IsHyphenationEnabled(', ''),
  \ dotnet#method('set_IsHyphenationEnabled(', ''),
  \ dotnet#method('SetIsHyphenationEnabled(', ''),
  \ dotnet#method('GetIsHyphenationEnabled(', ''),
  \ dotnet#method('get_Margin(', ''),
  \ dotnet#method('set_Margin(', ''),
  \ dotnet#method('get_Padding(', ''),
  \ dotnet#method('set_Padding(', ''),
  \ dotnet#method('get_BorderThickness(', ''),
  \ dotnet#method('set_BorderThickness(', ''),
  \ dotnet#method('get_BorderBrush(', ''),
  \ dotnet#method('set_BorderBrush(', ''),
  \ dotnet#method('get_TextAlignment(', ''),
  \ dotnet#method('set_TextAlignment(', ''),
  \ dotnet#method('SetTextAlignment(', ''),
  \ dotnet#method('GetTextAlignment(', ''),
  \ dotnet#method('get_FlowDirection(', ''),
  \ dotnet#method('set_FlowDirection(', ''),
  \ dotnet#method('get_LineHeight(', ''),
  \ dotnet#method('set_LineHeight(', ''),
  \ dotnet#method('SetLineHeight(', ''),
  \ dotnet#method('GetLineHeight(', ''),
  \ dotnet#method('get_LineStackingStrategy(', ''),
  \ dotnet#method('set_LineStackingStrategy(', ''),
  \ dotnet#method('SetLineStackingStrategy(', ''),
  \ dotnet#method('GetLineStackingStrategy(', ''),
  \ dotnet#method('get_BreakPageBefore(', ''),
  \ dotnet#method('set_BreakPageBefore(', ''),
  \ dotnet#method('get_BreakColumnBefore(', ''),
  \ dotnet#method('set_BreakColumnBefore(', ''),
  \ dotnet#method('get_ClearFloaters(', ''),
  \ dotnet#method('set_ClearFloaters(', ''),
  \ dotnet#method('IsValidMargin(', ''),
  \ dotnet#method('IsValidPadding(', ''),
  \ dotnet#method('IsValidBorderThickness(', ''),
  \ dotnet#method('get_IsIMEStructuralElement(', ''),
  \ dotnet#method('IsValidThickness(', ''),
  \ dotnet#method('Block(', ''),
  \ dotnet#prop('SiblingBlocks', 'BlockCollection'),
  \ dotnet#prop('NextBlock', 'Block'),
  \ dotnet#prop('PreviousBlock', 'Block'),
  \ dotnet#prop('IsHyphenationEnabled', 'bool'),
  \ dotnet#prop('Margin', 'Thickness'),
  \ dotnet#prop('Padding', 'Thickness'),
  \ dotnet#prop('BorderThickness', 'Thickness'),
  \ dotnet#prop('BorderBrush', 'Brush'),
  \ dotnet#prop('TextAlignment', 'TextAlignment'),
  \ dotnet#prop('FlowDirection', 'FlowDirection'),
  \ dotnet#prop('LineHeight', 'float64'),
  \ dotnet#prop('LineStackingStrategy', 'LineStackingStrategy'),
  \ dotnet#prop('BreakPageBefore', 'bool'),
  \ dotnet#prop('BreakColumnBefore', 'bool'),
  \ dotnet#prop('ClearFloaters', 'WrapDirection'),
  \ dotnet#prop('IsIMEStructuralElement', 'bool'),
  \ ])

call dotnet#class('TextElementCollection', 'Object', [ 
  \ dotnet#method('TextElementCollection`1(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('InsertAfter(', ''),
  \ dotnet#method('InsertBefore(', ''),
  \ dotnet#method('AddRange(', ''),
  \ dotnet#method('OnAdd(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_FirstChild(', ''),
  \ dotnet#method('get_LastChild(', ''),
  \ dotnet#method('ValidateChild(', ''),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Owner', 'DependencyObject'),
  \ dotnet#prop('Parent', 'DependencyObject'),
  \ dotnet#prop('TextContainer', 'TextContainer'),
  \ dotnet#prop('FirstChild', '!TextElementType'),
  \ dotnet#prop('LastChild', '!TextElementType'),
  \ ])

call dotnet#class('BlockCollection', 'TextElementCollection', [ 
  \ dotnet#method('BlockCollection(', ''),
  \ dotnet#method('get_FirstBlock(', ''),
  \ dotnet#method('get_LastBlock(', ''),
  \ dotnet#prop('FirstBlock', 'Block'),
  \ dotnet#prop('LastBlock', 'Block'),
  \ ])

call dotnet#class('BlockUIContainer', 'Block', [ 
  \ dotnet#method('BlockUIContainer(', ''),
  \ dotnet#method('get_Child(', ''),
  \ dotnet#method('set_Child(', ''),
  \ dotnet#prop('Child', 'UIElement'),
  \ ])

call dotnet#class('Span', 'Inline', [ 
  \ dotnet#method('Span(', ''),
  \ dotnet#method('get_Inlines(', ''),
  \ dotnet#method('ShouldSerializeInlines(', ''),
  \ dotnet#prop('Inlines', 'InlineCollection'),
  \ ])

call dotnet#class('Bold', 'Span', [ 
  \ dotnet#method('Bold(', ''),
  \ ])

call dotnet#class('DocumentReference', 'FrameworkElement', [ 
  \ dotnet#method('DocumentReference(', ''),
  \ dotnet#method('GetDocument(', ''),
  \ dotnet#method('SetDocument(', ''),
  \ dotnet#method('get_Source(', ''),
  \ dotnet#method('set_Source(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#prop('Source', 'Uri'),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('CurrentlyLoadedDoc', 'FixedDocument'),
  \ ])

call dotnet#class('DocumentReferenceCollection', 'Object', [ 
  \ dotnet#method('DocumentReferenceCollection(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('add_CollectionChanged(', ''),
  \ dotnet#method('remove_CollectionChanged(', ''),
  \ dotnet#event('CollectionChanged', 'NotifyCollectionChangedEventHandler'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('Item(int32)', 'DocumentReference'),
  \ ])

call dotnet#class('FixedDocumentSequence', 'FrameworkContentElement', [ 
  \ dotnet#method('FixedDocumentSequence(', ''),
  \ dotnet#method('GetService(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('NavigateAsync(', ''),
  \ dotnet#method('GetPage(', ''),
  \ dotnet#method('GetPageAsync(', ''),
  \ dotnet#method('GetPageNumber(', ''),
  \ dotnet#method('CancelAsync(', ''),
  \ dotnet#method('GetObjectPosition(', ''),
  \ dotnet#method('GetPagePosition(', ''),
  \ dotnet#method('get_IsPageCountValid(', ''),
  \ dotnet#method('get_PageCount(', ''),
  \ dotnet#method('set_PageSize(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#method('get_References(', ''),
  \ dotnet#method('get_PrintTicket(', ''),
  \ dotnet#method('set_PrintTicket(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#method('GetPaginator(', ''),
  \ dotnet#method('TranslatePageNumber(', ''),
  \ dotnet#prop('LogicalChildren', 'IEnumerator'),
  \ dotnet#prop('DocumentPaginator', 'DocumentPaginator'),
  \ dotnet#prop('IsPageCountValid', 'bool'),
  \ dotnet#prop('PageCount', 'int32'),
  \ dotnet#prop('PageSize', 'Size'),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('References', 'DocumentReferenceCollection'),
  \ dotnet#prop('PrintTicket', 'object'),
  \ dotnet#prop('TextContainer', 'DocumentSequenceTextContainer'),
  \ ])

call dotnet#class('EditingCommands', 'Object', [ 
  \ dotnet#method('EditingCommands(', ''),
  \ dotnet#prop('ToggleInsert', 'RoutedUICommand'),
  \ dotnet#prop('Delete', 'RoutedUICommand'),
  \ dotnet#prop('Backspace', 'RoutedUICommand'),
  \ dotnet#prop('DeleteNextWord', 'RoutedUICommand'),
  \ dotnet#prop('DeletePreviousWord', 'RoutedUICommand'),
  \ dotnet#prop('EnterParagraphBreak', 'RoutedUICommand'),
  \ dotnet#prop('EnterLineBreak', 'RoutedUICommand'),
  \ dotnet#prop('TabForward', 'RoutedUICommand'),
  \ dotnet#prop('TabBackward', 'RoutedUICommand'),
  \ dotnet#prop('MoveRightByCharacter', 'RoutedUICommand'),
  \ dotnet#prop('MoveLeftByCharacter', 'RoutedUICommand'),
  \ dotnet#prop('MoveRightByWord', 'RoutedUICommand'),
  \ dotnet#prop('MoveLeftByWord', 'RoutedUICommand'),
  \ dotnet#prop('MoveDownByLine', 'RoutedUICommand'),
  \ dotnet#prop('MoveUpByLine', 'RoutedUICommand'),
  \ dotnet#prop('MoveDownByParagraph', 'RoutedUICommand'),
  \ dotnet#prop('MoveUpByParagraph', 'RoutedUICommand'),
  \ dotnet#prop('MoveDownByPage', 'RoutedUICommand'),
  \ dotnet#prop('MoveUpByPage', 'RoutedUICommand'),
  \ dotnet#prop('MoveToLineStart', 'RoutedUICommand'),
  \ dotnet#prop('MoveToLineEnd', 'RoutedUICommand'),
  \ dotnet#prop('MoveToDocumentStart', 'RoutedUICommand'),
  \ dotnet#prop('MoveToDocumentEnd', 'RoutedUICommand'),
  \ dotnet#prop('SelectRightByCharacter', 'RoutedUICommand'),
  \ dotnet#prop('SelectLeftByCharacter', 'RoutedUICommand'),
  \ dotnet#prop('SelectRightByWord', 'RoutedUICommand'),
  \ dotnet#prop('SelectLeftByWord', 'RoutedUICommand'),
  \ dotnet#prop('SelectDownByLine', 'RoutedUICommand'),
  \ dotnet#prop('SelectUpByLine', 'RoutedUICommand'),
  \ dotnet#prop('SelectDownByParagraph', 'RoutedUICommand'),
  \ dotnet#prop('SelectUpByParagraph', 'RoutedUICommand'),
  \ dotnet#prop('SelectDownByPage', 'RoutedUICommand'),
  \ dotnet#prop('SelectUpByPage', 'RoutedUICommand'),
  \ dotnet#prop('SelectToLineStart', 'RoutedUICommand'),
  \ dotnet#prop('SelectToLineEnd', 'RoutedUICommand'),
  \ dotnet#prop('SelectToDocumentStart', 'RoutedUICommand'),
  \ dotnet#prop('SelectToDocumentEnd', 'RoutedUICommand'),
  \ dotnet#prop('ToggleBold', 'RoutedUICommand'),
  \ dotnet#prop('ToggleItalic', 'RoutedUICommand'),
  \ dotnet#prop('ToggleUnderline', 'RoutedUICommand'),
  \ dotnet#prop('ToggleSubscript', 'RoutedUICommand'),
  \ dotnet#prop('ToggleSuperscript', 'RoutedUICommand'),
  \ dotnet#prop('IncreaseFontSize', 'RoutedUICommand'),
  \ dotnet#prop('DecreaseFontSize', 'RoutedUICommand'),
  \ dotnet#prop('AlignLeft', 'RoutedUICommand'),
  \ dotnet#prop('AlignCenter', 'RoutedUICommand'),
  \ dotnet#prop('AlignRight', 'RoutedUICommand'),
  \ dotnet#prop('AlignJustify', 'RoutedUICommand'),
  \ dotnet#prop('ToggleBullets', 'RoutedUICommand'),
  \ dotnet#prop('ToggleNumbering', 'RoutedUICommand'),
  \ dotnet#prop('IncreaseIndentation', 'RoutedUICommand'),
  \ dotnet#prop('DecreaseIndentation', 'RoutedUICommand'),
  \ dotnet#prop('CorrectSpellingError', 'RoutedUICommand'),
  \ dotnet#prop('IgnoreSpellingError', 'RoutedUICommand'),
  \ dotnet#prop('Space', 'RoutedUICommand'),
  \ dotnet#prop('ShiftSpace', 'RoutedUICommand'),
  \ dotnet#prop('MoveToColumnStart', 'RoutedUICommand'),
  \ dotnet#prop('MoveToColumnEnd', 'RoutedUICommand'),
  \ dotnet#prop('MoveToWindowTop', 'RoutedUICommand'),
  \ dotnet#prop('MoveToWindowBottom', 'RoutedUICommand'),
  \ dotnet#prop('SelectToColumnStart', 'RoutedUICommand'),
  \ dotnet#prop('SelectToColumnEnd', 'RoutedUICommand'),
  \ dotnet#prop('SelectToWindowTop', 'RoutedUICommand'),
  \ dotnet#prop('SelectToWindowBottom', 'RoutedUICommand'),
  \ dotnet#prop('ResetFormat', 'RoutedUICommand'),
  \ dotnet#prop('ToggleSpellCheck', 'RoutedUICommand'),
  \ dotnet#prop('ApplyFontSize', 'RoutedUICommand'),
  \ dotnet#prop('ApplyFontFamily', 'RoutedUICommand'),
  \ dotnet#prop('ApplyForeground', 'RoutedUICommand'),
  \ dotnet#prop('ApplyBackground', 'RoutedUICommand'),
  \ dotnet#prop('ApplyInlineFlowDirectionRTL', 'RoutedUICommand'),
  \ dotnet#prop('ApplyInlineFlowDirectionLTR', 'RoutedUICommand'),
  \ dotnet#prop('ApplySingleSpace', 'RoutedUICommand'),
  \ dotnet#prop('ApplyOneAndAHalfSpace', 'RoutedUICommand'),
  \ dotnet#prop('ApplyDoubleSpace', 'RoutedUICommand'),
  \ dotnet#prop('ApplyParagraphFlowDirectionRTL', 'RoutedUICommand'),
  \ dotnet#prop('ApplyParagraphFlowDirectionLTR', 'RoutedUICommand'),
  \ dotnet#prop('CopyFormat', 'RoutedUICommand'),
  \ dotnet#prop('PasteFormat', 'RoutedUICommand'),
  \ dotnet#prop('RemoveListMarkers', 'RoutedUICommand'),
  \ dotnet#prop('InsertTable', 'RoutedUICommand'),
  \ dotnet#prop('InsertRows', 'RoutedUICommand'),
  \ dotnet#prop('InsertColumns', 'RoutedUICommand'),
  \ dotnet#prop('DeleteRows', 'RoutedUICommand'),
  \ dotnet#prop('DeleteColumns', 'RoutedUICommand'),
  \ dotnet#prop('MergeCells', 'RoutedUICommand'),
  \ dotnet#prop('SplitCell', 'RoutedUICommand'),
  \ ])

call dotnet#class('Figure', 'AnchoredBlock', [ 
  \ dotnet#method('Figure(', ''),
  \ dotnet#method('get_HorizontalAnchor(', ''),
  \ dotnet#method('set_HorizontalAnchor(', ''),
  \ dotnet#method('get_VerticalAnchor(', ''),
  \ dotnet#method('set_VerticalAnchor(', ''),
  \ dotnet#method('get_HorizontalOffset(', ''),
  \ dotnet#method('set_HorizontalOffset(', ''),
  \ dotnet#method('get_VerticalOffset(', ''),
  \ dotnet#method('set_VerticalOffset(', ''),
  \ dotnet#method('get_CanDelayPlacement(', ''),
  \ dotnet#method('set_CanDelayPlacement(', ''),
  \ dotnet#method('get_WrapDirection(', ''),
  \ dotnet#method('set_WrapDirection(', ''),
  \ dotnet#method('get_Width(', ''),
  \ dotnet#method('set_Width(', ''),
  \ dotnet#method('get_Height(', ''),
  \ dotnet#method('set_Height(', ''),
  \ dotnet#prop('HorizontalAnchor', 'FigureHorizontalAnchor'),
  \ dotnet#prop('VerticalAnchor', 'FigureVerticalAnchor'),
  \ dotnet#prop('HorizontalOffset', 'float64'),
  \ dotnet#prop('VerticalOffset', 'float64'),
  \ dotnet#prop('CanDelayPlacement', 'bool'),
  \ dotnet#prop('WrapDirection', 'WrapDirection'),
  \ dotnet#prop('Width', 'FigureLength'),
  \ dotnet#prop('Height', 'FigureLength'),
  \ ])

call dotnet#class('FixedDocument', 'FrameworkContentElement', [ 
  \ dotnet#method('FixedDocument(', ''),
  \ dotnet#method('GetService(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#method('NavigateAsync(', ''),
  \ dotnet#method('set_NavigationService(', ''),
  \ dotnet#method('GetPage(', ''),
  \ dotnet#method('GetPageAsync(', ''),
  \ dotnet#method('GetPageNumber(', ''),
  \ dotnet#method('CancelAsync(', ''),
  \ dotnet#method('GetObjectPosition(', ''),
  \ dotnet#method('GetPagePosition(', ''),
  \ dotnet#method('get_IsPageCountValid(', ''),
  \ dotnet#method('get_PageCount(', ''),
  \ dotnet#method('set_PageSize(', ''),
  \ dotnet#method('get_HasExplicitStructure(', ''),
  \ dotnet#method('get_Pages(', ''),
  \ dotnet#method('get_PrintTicket(', ''),
  \ dotnet#method('set_PrintTicket(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#method('GetIndexOfPage(', ''),
  \ dotnet#method('IsValidPageIndex(', ''),
  \ dotnet#method('SyncGetPageWithCheck(', ''),
  \ dotnet#method('SyncGetPage(', ''),
  \ dotnet#method('OnPageContentAppended(', ''),
  \ dotnet#method('EnsurePageSize(', ''),
  \ dotnet#method('GetPageSize(', ''),
  \ dotnet#method('ComputePageSize(', ''),
  \ dotnet#method('set_DocumentReference(', ''),
  \ dotnet#method('ValidateDocStructure(', ''),
  \ dotnet#method('GetStoryFragments(', ''),
  \ dotnet#method('GetFixedPage(', ''),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('NavigationService', 'NavigationService'),
  \ dotnet#prop('LogicalChildren', 'IEnumerator'),
  \ dotnet#prop('DocumentPaginator', 'DocumentPaginator'),
  \ dotnet#prop('IsPageCountValid', 'bool'),
  \ dotnet#prop('PageCount', 'int32'),
  \ dotnet#prop('PageSize', 'Size'),
  \ dotnet#prop('HasExplicitStructure', 'bool'),
  \ dotnet#prop('Pages', 'PageContentCollection'),
  \ dotnet#prop('PrintTicket', 'object'),
  \ dotnet#prop('FixedContainer', 'FixedTextContainer'),
  \ dotnet#prop('Highlights', 'Dictionary'),
  \ dotnet#prop('DocumentReference', 'DocumentReference'),
  \ ])

call dotnet#class('FixedPage', 'FrameworkElement', [ 
  \ dotnet#method('FixedPage(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#method('OnPreviewMouseWheel(', ''),
  \ dotnet#method('OnRender(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('GetLeft(', ''),
  \ dotnet#method('SetLeft(', ''),
  \ dotnet#method('GetTop(', ''),
  \ dotnet#method('SetTop(', ''),
  \ dotnet#method('GetRight(', ''),
  \ dotnet#method('SetRight(', ''),
  \ dotnet#method('GetBottom(', ''),
  \ dotnet#method('SetBottom(', ''),
  \ dotnet#method('GetNavigateUri(', ''),
  \ dotnet#method('SetNavigateUri(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#method('get_Children(', ''),
  \ dotnet#method('get_PrintTicket(', ''),
  \ dotnet#method('set_PrintTicket(', ''),
  \ dotnet#method('get_Background(', ''),
  \ dotnet#method('set_Background(', ''),
  \ dotnet#method('get_ContentBox(', ''),
  \ dotnet#method('set_ContentBox(', ''),
  \ dotnet#method('get_BleedBox(', ''),
  \ dotnet#method('set_BleedBox(', ''),
  \ dotnet#method('OnVisualParentChanged(', ''),
  \ dotnet#method('CanNavigateToUri(', ''),
  \ dotnet#method('GetLinkUri(', ''),
  \ dotnet#method('get_VisualChildrenCount(', ''),
  \ dotnet#method('GetVisualChild(', ''),
  \ dotnet#method('MeasureOverride(', ''),
  \ dotnet#method('ArrangeOverride(', ''),
  \ dotnet#method('NavigateAsync(', ''),
  \ dotnet#method('CreateFixedNode(', ''),
  \ dotnet#method('GetGlyphsElement(', ''),
  \ dotnet#method('GetElement(', ''),
  \ dotnet#method('get_StartPartUriString(', ''),
  \ dotnet#method('set_StartPartUriString(', ''),
  \ dotnet#method('GetPageStructure(', ''),
  \ dotnet#method('_CreateChildIndex(', ''),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('LogicalChildren', 'IEnumerator'),
  \ dotnet#prop('Children', 'UIElementCollection'),
  \ dotnet#prop('PrintTicket', 'object'),
  \ dotnet#prop('Background', 'Brush'),
  \ dotnet#prop('ContentBox', 'Rect'),
  \ dotnet#prop('BleedBox', 'Rect'),
  \ dotnet#prop('VisualChildrenCount', 'int32'),
  \ dotnet#prop('StartPartUriString', 'string'),
  \ ])

call dotnet#class('Floater', 'AnchoredBlock', [ 
  \ dotnet#method('Floater(', ''),
  \ dotnet#method('get_HorizontalAlignment(', ''),
  \ dotnet#method('set_HorizontalAlignment(', ''),
  \ dotnet#method('get_Width(', ''),
  \ dotnet#method('set_Width(', ''),
  \ dotnet#prop('HorizontalAlignment', 'HorizontalAlignment'),
  \ dotnet#prop('Width', 'float64'),
  \ ])

call dotnet#class('FlowDocument', 'FrameworkContentElement', [ 
  \ dotnet#method('FlowDocument(', ''),
  \ dotnet#method('get_Blocks(', ''),
  \ dotnet#method('get_ContentStart(', ''),
  \ dotnet#method('get_ContentEnd(', ''),
  \ dotnet#method('get_FontFamily(', ''),
  \ dotnet#method('set_FontFamily(', ''),
  \ dotnet#method('get_FontStyle(', ''),
  \ dotnet#method('set_FontStyle(', ''),
  \ dotnet#method('get_FontWeight(', ''),
  \ dotnet#method('set_FontWeight(', ''),
  \ dotnet#method('get_FontStretch(', ''),
  \ dotnet#method('set_FontStretch(', ''),
  \ dotnet#method('get_FontSize(', ''),
  \ dotnet#method('set_FontSize(', ''),
  \ dotnet#method('get_Foreground(', ''),
  \ dotnet#method('set_Foreground(', ''),
  \ dotnet#method('get_Background(', ''),
  \ dotnet#method('set_Background(', ''),
  \ dotnet#method('get_TextEffects(', ''),
  \ dotnet#method('set_TextEffects(', ''),
  \ dotnet#method('get_TextAlignment(', ''),
  \ dotnet#method('set_TextAlignment(', ''),
  \ dotnet#method('get_FlowDirection(', ''),
  \ dotnet#method('set_FlowDirection(', ''),
  \ dotnet#method('get_LineHeight(', ''),
  \ dotnet#method('set_LineHeight(', ''),
  \ dotnet#method('get_LineStackingStrategy(', ''),
  \ dotnet#method('set_LineStackingStrategy(', ''),
  \ dotnet#method('get_ColumnWidth(', ''),
  \ dotnet#method('set_ColumnWidth(', ''),
  \ dotnet#method('get_ColumnGap(', ''),
  \ dotnet#method('set_ColumnGap(', ''),
  \ dotnet#method('get_IsColumnWidthFlexible(', ''),
  \ dotnet#method('set_IsColumnWidthFlexible(', ''),
  \ dotnet#method('get_ColumnRuleWidth(', ''),
  \ dotnet#method('set_ColumnRuleWidth(', ''),
  \ dotnet#method('get_ColumnRuleBrush(', ''),
  \ dotnet#method('set_ColumnRuleBrush(', ''),
  \ dotnet#method('get_IsOptimalParagraphEnabled(', ''),
  \ dotnet#method('set_IsOptimalParagraphEnabled(', ''),
  \ dotnet#method('get_PageWidth(', ''),
  \ dotnet#method('set_PageWidth(', ''),
  \ dotnet#method('get_MinPageWidth(', ''),
  \ dotnet#method('set_MinPageWidth(', ''),
  \ dotnet#method('get_MaxPageWidth(', ''),
  \ dotnet#method('set_MaxPageWidth(', ''),
  \ dotnet#method('get_PageHeight(', ''),
  \ dotnet#method('set_PageHeight(', ''),
  \ dotnet#method('get_MinPageHeight(', ''),
  \ dotnet#method('set_MinPageHeight(', ''),
  \ dotnet#method('get_MaxPageHeight(', ''),
  \ dotnet#method('set_MaxPageHeight(', ''),
  \ dotnet#method('get_PagePadding(', ''),
  \ dotnet#method('set_PagePadding(', ''),
  \ dotnet#method('get_Typography(', ''),
  \ dotnet#method('get_IsHyphenationEnabled(', ''),
  \ dotnet#method('set_IsHyphenationEnabled(', ''),
  \ dotnet#method('OnPropertyChanged(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#method('get_IsEnabledCore(', ''),
  \ dotnet#method('GetObjectPosition(', ''),
  \ dotnet#method('OnChildDesiredSizeChanged(', ''),
  \ dotnet#method('InitializeForFirstFormatting(', ''),
  \ dotnet#method('Uninitialize(', ''),
  \ dotnet#method('ComputePageMargin(', ''),
  \ dotnet#method('OnNewParent(', ''),
  \ dotnet#method('set_TextWrapping(', ''),
  \ dotnet#method('get_IsLayoutDataValid(', ''),
  \ dotnet#method('add_PageSizeChanged(', ''),
  \ dotnet#method('remove_PageSizeChanged(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('GetService(', ''),
  \ dotnet#event('PageSizeChanged', 'EventHandler'),
  \ dotnet#prop('Blocks', 'BlockCollection'),
  \ dotnet#prop('TextRange', 'TextRange'),
  \ dotnet#prop('ContentStart', 'TextPointer'),
  \ dotnet#prop('ContentEnd', 'TextPointer'),
  \ dotnet#prop('FontFamily', 'FontFamily'),
  \ dotnet#prop('FontStyle', 'FontStyle'),
  \ dotnet#prop('FontWeight', 'FontWeight'),
  \ dotnet#prop('FontStretch', 'FontStretch'),
  \ dotnet#prop('FontSize', 'float64'),
  \ dotnet#prop('Foreground', 'Brush'),
  \ dotnet#prop('Background', 'Brush'),
  \ dotnet#prop('TextEffects', 'TextEffectCollection'),
  \ dotnet#prop('TextAlignment', 'TextAlignment'),
  \ dotnet#prop('FlowDirection', 'FlowDirection'),
  \ dotnet#prop('LineHeight', 'float64'),
  \ dotnet#prop('LineStackingStrategy', 'LineStackingStrategy'),
  \ dotnet#prop('ColumnWidth', 'float64'),
  \ dotnet#prop('ColumnGap', 'float64'),
  \ dotnet#prop('IsColumnWidthFlexible', 'bool'),
  \ dotnet#prop('ColumnRuleWidth', 'float64'),
  \ dotnet#prop('ColumnRuleBrush', 'Brush'),
  \ dotnet#prop('IsOptimalParagraphEnabled', 'bool'),
  \ dotnet#prop('PageWidth', 'float64'),
  \ dotnet#prop('MinPageWidth', 'float64'),
  \ dotnet#prop('MaxPageWidth', 'float64'),
  \ dotnet#prop('PageHeight', 'float64'),
  \ dotnet#prop('MinPageHeight', 'float64'),
  \ dotnet#prop('MaxPageHeight', 'float64'),
  \ dotnet#prop('PagePadding', 'Thickness'),
  \ dotnet#prop('Typography', 'Typography'),
  \ dotnet#prop('IsHyphenationEnabled', 'bool'),
  \ dotnet#prop('LogicalChildren', 'IEnumerator'),
  \ dotnet#prop('IsEnabledCore', 'bool'),
  \ dotnet#prop('BottomlessFormatter', 'FlowDocumentFormatter'),
  \ dotnet#prop('StructuralCache', 'StructuralCache'),
  \ dotnet#prop('TypographyPropertiesGroup', 'TypographyProperties'),
  \ dotnet#prop('TextWrapping', 'TextWrapping'),
  \ dotnet#prop('Formatter', 'IFlowDocumentFormatter'),
  \ dotnet#prop('IsLayoutDataValid', 'bool'),
  \ dotnet#prop('TextContainer', 'TextContainer'),
  \ dotnet#prop('DocumentPaginator', 'DocumentPaginator'),
  \ ])

call dotnet#class('FrameworkTextComposition', 'TextComposition', [ 
  \ dotnet#method('FrameworkTextComposition(', ''),
  \ dotnet#method('Complete(', ''),
  \ dotnet#method('get_ResultOffset(', ''),
  \ dotnet#method('get_ResultLength(', ''),
  \ dotnet#method('get_CompositionOffset(', ''),
  \ dotnet#method('get_CompositionLength(', ''),
  \ dotnet#method('CompleteCurrentComposition(', ''),
  \ dotnet#method('GetCurrentCompositionView(', ''),
  \ dotnet#method('SetResultPositions(', ''),
  \ dotnet#method('SetCompositionPositions(', ''),
  \ dotnet#method('get_PendingComplete(', ''),
  \ dotnet#method('get_Owner(', ''),
  \ dotnet#prop('ResultOffset', 'int32'),
  \ dotnet#prop('ResultLength', 'int32'),
  \ dotnet#prop('CompositionOffset', 'int32'),
  \ dotnet#prop('CompositionLength', 'int32'),
  \ dotnet#prop('_ResultStart', 'ITextPointer'),
  \ dotnet#prop('_ResultEnd', 'ITextPointer'),
  \ dotnet#prop('_CompositionStart', 'ITextPointer'),
  \ dotnet#prop('_CompositionEnd', 'ITextPointer'),
  \ dotnet#prop('PendingComplete', 'bool'),
  \ dotnet#prop('Owner', 'object'),
  \ ])

call dotnet#class('FrameworkRichTextComposition', 'FrameworkTextComposition', [ 
  \ dotnet#method('FrameworkRichTextComposition(', ''),
  \ dotnet#method('get_ResultStart(', ''),
  \ dotnet#method('get_ResultEnd(', ''),
  \ dotnet#method('get_CompositionStart(', ''),
  \ dotnet#method('get_CompositionEnd(', ''),
  \ dotnet#prop('ResultStart', 'TextPointer'),
  \ dotnet#prop('ResultEnd', 'TextPointer'),
  \ dotnet#prop('CompositionStart', 'TextPointer'),
  \ dotnet#prop('CompositionEnd', 'TextPointer'),
  \ ])

call dotnet#class('Glyphs', 'FrameworkElement', [ 
  \ dotnet#method('Glyphs(', ''),
  \ dotnet#method('ToGlyphRun(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#method('ArrangeOverride(', ''),
  \ dotnet#method('OnRender(', ''),
  \ dotnet#method('MeasureOverride(', ''),
  \ dotnet#method('get_Fill(', ''),
  \ dotnet#method('set_Fill(', ''),
  \ dotnet#method('get_Indices(', ''),
  \ dotnet#method('set_Indices(', ''),
  \ dotnet#method('get_UnicodeString(', ''),
  \ dotnet#method('set_UnicodeString(', ''),
  \ dotnet#method('get_CaretStops(', ''),
  \ dotnet#method('set_CaretStops(', ''),
  \ dotnet#method('get_FontRenderingEmSize(', ''),
  \ dotnet#method('set_FontRenderingEmSize(', ''),
  \ dotnet#method('get_OriginX(', ''),
  \ dotnet#method('set_OriginX(', ''),
  \ dotnet#method('get_OriginY(', ''),
  \ dotnet#method('set_OriginY(', ''),
  \ dotnet#method('get_FontUri(', ''),
  \ dotnet#method('set_FontUri(', ''),
  \ dotnet#method('get_StyleSimulations(', ''),
  \ dotnet#method('set_StyleSimulations(', ''),
  \ dotnet#method('get_IsSideways(', ''),
  \ dotnet#method('set_IsSideways(', ''),
  \ dotnet#method('get_BidiLevel(', ''),
  \ dotnet#method('set_BidiLevel(', ''),
  \ dotnet#method('get_DeviceFontName(', ''),
  \ dotnet#method('set_DeviceFontName(', ''),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('Fill', 'Brush'),
  \ dotnet#prop('Indices', 'string'),
  \ dotnet#prop('UnicodeString', 'string'),
  \ dotnet#prop('CaretStops', 'string'),
  \ dotnet#prop('FontRenderingEmSize', 'float64'),
  \ dotnet#prop('OriginX', 'float64'),
  \ dotnet#prop('OriginY', 'float64'),
  \ dotnet#prop('FontUri', 'Uri'),
  \ dotnet#prop('StyleSimulations', 'StyleSimulations'),
  \ dotnet#prop('IsSideways', 'bool'),
  \ dotnet#prop('BidiLevel', 'int32'),
  \ dotnet#prop('DeviceFontName', 'string'),
  \ dotnet#prop('MeasurementGlyphRun', 'GlyphRun'),
  \ ])

call dotnet#class('Hyperlink', 'Span', [ 
  \ dotnet#method('Hyperlink(', ''),
  \ dotnet#method('DoClick(', ''),
  \ dotnet#method('set_Command(', ''),
  \ dotnet#method('get_IsEnabledCore(', ''),
  \ dotnet#method('get_CommandParameter(', ''),
  \ dotnet#method('set_CommandParameter(', ''),
  \ dotnet#method('set_CommandTarget(', ''),
  \ dotnet#method('CoerceNavigateUri(', ''),
  \ dotnet#method('get_NavigateUri(', ''),
  \ dotnet#method('set_NavigateUri(', ''),
  \ dotnet#method('get_TargetName(', ''),
  \ dotnet#method('set_TargetName(', ''),
  \ dotnet#method('add_RequestNavigate(', ''),
  \ dotnet#method('remove_RequestNavigate(', ''),
  \ dotnet#method('add_Click(', ''),
  \ dotnet#method('remove_Click(', ''),
  \ dotnet#method('OnMouseLeftButtonDown(', ''),
  \ dotnet#method('OnMouseLeftButtonUp(', ''),
  \ dotnet#method('OnClick(', ''),
  \ dotnet#method('OnKeyDown(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#method('get_Text(', ''),
  \ dotnet#method('OnNavigateUriChanged(', ''),
  \ dotnet#method('RaiseNavigate(', ''),
  \ dotnet#event('RequestNavigate', 'RequestNavigateEventHandler'),
  \ dotnet#event('Click', 'RoutedEventHandler'),
  \ dotnet#prop('Command', 'ICommand'),
  \ dotnet#prop('IsEnabledCore', 'bool'),
  \ dotnet#prop('CommandParameter', 'object'),
  \ dotnet#prop('CommandTarget', 'IInputElement'),
  \ dotnet#prop('NavigateUri', 'Uri'),
  \ dotnet#prop('TargetName', 'string'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('Text', 'string'),
  \ dotnet#prop('DTypeThemeStyleKey', 'DependencyObjectType'),
  \ ])

call dotnet#class('InlineCollection', 'TextElementCollection', [ 
  \ dotnet#method('InlineCollection(', ''),
  \ dotnet#method('OnAdd(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('get_FirstInline(', ''),
  \ dotnet#method('get_LastInline(', ''),
  \ dotnet#method('ValidateChild(', ''),
  \ dotnet#prop('FirstInline', 'Inline'),
  \ dotnet#prop('LastInline', 'Inline'),
  \ ])

call dotnet#class('InlineUIContainer', 'Inline', [ 
  \ dotnet#method('InlineUIContainer(', ''),
  \ dotnet#method('get_Child(', ''),
  \ dotnet#method('set_Child(', ''),
  \ dotnet#prop('Child', 'UIElement'),
  \ dotnet#prop('UIElementIsland', 'UIElementIsland'),
  \ ])

call dotnet#class('Italic', 'Span', [ 
  \ dotnet#method('Italic(', ''),
  \ ])

call dotnet#class('LineBreak', 'Inline', [ 
  \ dotnet#method('LineBreak(', ''),
  \ ])

call dotnet#class('LinkTarget', 'Object', [ 
  \ dotnet#method('get_Name(', ''),
  \ dotnet#method('set_Name(', ''),
  \ dotnet#method('LinkTarget(', ''),
  \ dotnet#prop('Name', 'string'),
  \ ])

call dotnet#class('LinkTargetCollection', 'CollectionBase', [ 
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('LinkTargetCollection(', ''),
  \ dotnet#prop('Item(int32)', 'LinkTarget'),
  \ ])

call dotnet#class('List', 'Block', [ 
  \ dotnet#method('List(', ''),
  \ dotnet#method('get_ListItems(', ''),
  \ dotnet#method('get_MarkerStyle(', ''),
  \ dotnet#method('set_MarkerStyle(', ''),
  \ dotnet#method('get_MarkerOffset(', ''),
  \ dotnet#method('set_MarkerOffset(', ''),
  \ dotnet#method('get_StartIndex(', ''),
  \ dotnet#method('set_StartIndex(', ''),
  \ dotnet#method('GetListItemIndex(', ''),
  \ dotnet#method('Apply(', ''),
  \ dotnet#prop('ListItems', 'ListItemCollection'),
  \ dotnet#prop('MarkerStyle', 'TextMarkerStyle'),
  \ dotnet#prop('MarkerOffset', 'float64'),
  \ dotnet#prop('StartIndex', 'int32'),
  \ ])

call dotnet#class('ListItem', 'TextElement', [ 
  \ dotnet#method('ListItem(', ''),
  \ dotnet#method('get_List(', ''),
  \ dotnet#method('get_Blocks(', ''),
  \ dotnet#method('get_SiblingListItems(', ''),
  \ dotnet#method('get_NextListItem(', ''),
  \ dotnet#method('get_PreviousListItem(', ''),
  \ dotnet#method('get_Margin(', ''),
  \ dotnet#method('set_Margin(', ''),
  \ dotnet#method('get_Padding(', ''),
  \ dotnet#method('set_Padding(', ''),
  \ dotnet#method('get_BorderThickness(', ''),
  \ dotnet#method('set_BorderThickness(', ''),
  \ dotnet#method('get_BorderBrush(', ''),
  \ dotnet#method('set_BorderBrush(', ''),
  \ dotnet#method('get_TextAlignment(', ''),
  \ dotnet#method('set_TextAlignment(', ''),
  \ dotnet#method('get_FlowDirection(', ''),
  \ dotnet#method('set_FlowDirection(', ''),
  \ dotnet#method('get_LineHeight(', ''),
  \ dotnet#method('set_LineHeight(', ''),
  \ dotnet#method('get_LineStackingStrategy(', ''),
  \ dotnet#method('set_LineStackingStrategy(', ''),
  \ dotnet#method('ShouldSerializeBlocks(', ''),
  \ dotnet#method('get_IsIMEStructuralElement(', ''),
  \ dotnet#prop('List', 'List'),
  \ dotnet#prop('Blocks', 'BlockCollection'),
  \ dotnet#prop('SiblingListItems', 'ListItemCollection'),
  \ dotnet#prop('NextListItem', 'ListItem'),
  \ dotnet#prop('PreviousListItem', 'ListItem'),
  \ dotnet#prop('Margin', 'Thickness'),
  \ dotnet#prop('Padding', 'Thickness'),
  \ dotnet#prop('BorderThickness', 'Thickness'),
  \ dotnet#prop('BorderBrush', 'Brush'),
  \ dotnet#prop('TextAlignment', 'TextAlignment'),
  \ dotnet#prop('FlowDirection', 'FlowDirection'),
  \ dotnet#prop('LineHeight', 'float64'),
  \ dotnet#prop('LineStackingStrategy', 'LineStackingStrategy'),
  \ dotnet#prop('IsIMEStructuralElement', 'bool'),
  \ ])

call dotnet#class('ListItemCollection', 'TextElementCollection', [ 
  \ dotnet#method('ListItemCollection(', ''),
  \ dotnet#method('get_FirstListItem(', ''),
  \ dotnet#method('get_LastListItem(', ''),
  \ dotnet#prop('FirstListItem', 'ListItem'),
  \ dotnet#prop('LastListItem', 'ListItem'),
  \ ])

call dotnet#class('PageContent', 'FrameworkElement', [ 
  \ dotnet#method('PageContent(', ''),
  \ dotnet#method('GetPageRoot(', ''),
  \ dotnet#method('GetPageRootAsync(', ''),
  \ dotnet#method('GetPageRootAsyncCancel(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('get_Source(', ''),
  \ dotnet#method('set_Source(', ''),
  \ dotnet#method('get_LinkTargets(', ''),
  \ dotnet#method('get_Child(', ''),
  \ dotnet#method('set_Child(', ''),
  \ dotnet#method('ShouldSerializeChild(', ''),
  \ dotnet#method('set_BaseUri(', ''),
  \ dotnet#method('add_GetPageRootCompleted(', ''),
  \ dotnet#method('remove_GetPageRootCompleted(', ''),
  \ dotnet#method('IsOwnerOf(', ''),
  \ dotnet#method('GetPageStream(', ''),
  \ dotnet#method('ContainsID(', ''),
  \ dotnet#method('_LoadPageImpl(', ''),
  \ dotnet#event('GetPageRootCompleted', 'GetPageRootCompletedEventHandler'),
  \ dotnet#prop('Source', 'Uri'),
  \ dotnet#prop('LinkTargets', 'LinkTargetCollection'),
  \ dotnet#prop('Child', 'FixedPage'),
  \ dotnet#prop('BaseUri', 'Uri'),
  \ dotnet#prop('PageStream', 'FixedPage'),
  \ dotnet#prop('LogicalChildren', 'IEnumerator'),
  \ ])

call dotnet#class('GetPageRootCompletedEventArgs', 'AsyncCompletedEventArgs', [ 
  \ dotnet#method('GetPageRootCompletedEventArgs(', ''),
  \ dotnet#method('get_Result(', ''),
  \ dotnet#prop('Result', 'FixedPage'),
  \ ])

call dotnet#class('GetPageRootCompletedEventHandler', 'MulticastDelegate', [ 
  \ dotnet#method('GetPageRootCompletedEventHandler(', ''),
  \ dotnet#method('Invoke(', ''),
  \ dotnet#method('EndInvoke(', ''),
  \ ])

call dotnet#class('PageContentCollection', 'Object', [ 
  \ dotnet#method('PageContentCollection(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#prop('Item(int32)', 'PageContent'),
  \ dotnet#prop('Count', 'int32'),
  \ ])

call dotnet#class('Paragraph', 'Block', [ 
  \ dotnet#method('Paragraph(', ''),
  \ dotnet#method('get_Inlines(', ''),
  \ dotnet#method('get_TextDecorations(', ''),
  \ dotnet#method('set_TextDecorations(', ''),
  \ dotnet#method('get_TextIndent(', ''),
  \ dotnet#method('set_TextIndent(', ''),
  \ dotnet#method('get_MinOrphanLines(', ''),
  \ dotnet#method('set_MinOrphanLines(', ''),
  \ dotnet#method('get_MinWidowLines(', ''),
  \ dotnet#method('set_MinWidowLines(', ''),
  \ dotnet#method('get_KeepWithNext(', ''),
  \ dotnet#method('set_KeepWithNext(', ''),
  \ dotnet#method('get_KeepTogether(', ''),
  \ dotnet#method('set_KeepTogether(', ''),
  \ dotnet#method('GetDefaultMarginValue(', ''),
  \ dotnet#method('IsMarginAuto(', ''),
  \ dotnet#method('IsLineHeightAuto(', ''),
  \ dotnet#method('HasNoTextContent(', ''),
  \ dotnet#method('ShouldSerializeInlines(', ''),
  \ dotnet#prop('Inlines', 'InlineCollection'),
  \ dotnet#prop('TextDecorations', 'TextDecorationCollection'),
  \ dotnet#prop('TextIndent', 'float64'),
  \ dotnet#prop('MinOrphanLines', 'int32'),
  \ dotnet#prop('MinWidowLines', 'int32'),
  \ dotnet#prop('KeepWithNext', 'bool'),
  \ dotnet#prop('KeepTogether', 'bool'),
  \ ])

call dotnet#class('Run', 'Inline', [ 
  \ dotnet#method('Run(', ''),
  \ dotnet#method('get_Text(', ''),
  \ dotnet#method('set_Text(', ''),
  \ dotnet#method('OnTextUpdated(', ''),
  \ dotnet#method('BeforeLogicalTreeChange(', ''),
  \ dotnet#method('AfterLogicalTreeChange(', ''),
  \ dotnet#method('get_EffectiveValuesInitialSize(', ''),
  \ dotnet#method('ShouldSerializeText(', ''),
  \ dotnet#prop('Text', 'string'),
  \ dotnet#prop('EffectiveValuesInitialSize', 'int32'),
  \ ])

call dotnet#class('Section', 'Block', [ 
  \ dotnet#method('Section(', ''),
  \ dotnet#method('get_HasTrailingParagraphBreakOnPaste(', ''),
  \ dotnet#method('set_HasTrailingParagraphBreakOnPaste(', ''),
  \ dotnet#method('get_Blocks(', ''),
  \ dotnet#method('ShouldSerializeBlocks(', ''),
  \ dotnet#prop('HasTrailingParagraphBreakOnPaste', 'bool'),
  \ dotnet#prop('Blocks', 'BlockCollection'),
  \ ])

call dotnet#class('Table', 'Block', [ 
  \ dotnet#method('Table(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('BeginInit(', ''),
  \ dotnet#method('EndInit(', ''),
  \ dotnet#method('get_Columns(', ''),
  \ dotnet#method('ShouldSerializeColumns(', ''),
  \ dotnet#method('get_RowGroups(', ''),
  \ dotnet#method('get_CellSpacing(', ''),
  \ dotnet#method('set_CellSpacing(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#method('get_InternalCellSpacing(', ''),
  \ dotnet#method('get_InsertionIndex(', ''),
  \ dotnet#method('set_InsertionIndex(', ''),
  \ dotnet#method('get_ColumnCount(', ''),
  \ dotnet#method('EnsureColumnCount(', ''),
  \ dotnet#method('OnStructureChanged(', ''),
  \ dotnet#method('ValidateStructure(', ''),
  \ dotnet#method('InvalidateColumns(', ''),
  \ dotnet#method('IsFirstNonEmptyRowGroup(', ''),
  \ dotnet#method('IsLastNonEmptyRowGroup(', ''),
  \ dotnet#method('add_TableStructureChanged(', ''),
  \ dotnet#method('remove_TableStructureChanged(', ''),
  \ dotnet#event('TableStructureChanged', 'EventHandler'),
  \ dotnet#prop('LogicalChildren', 'IEnumerator'),
  \ dotnet#prop('Columns', 'TableColumnCollection'),
  \ dotnet#prop('RowGroups', 'TableRowGroupCollection'),
  \ dotnet#prop('CellSpacing', 'float64'),
  \ dotnet#prop('InternalCellSpacing', 'float64'),
  \ dotnet#prop('InsertionIndex', 'int32'),
  \ dotnet#prop('InsertionIndex', 'int32'),
  \ dotnet#prop('ColumnCount', 'int32'),
  \ ])

call dotnet#class('TableCell', 'TextElement', [ 
  \ dotnet#method('TableCell(', ''),
  \ dotnet#method('OnNewParent(', ''),
  \ dotnet#method('get_Blocks(', ''),
  \ dotnet#method('get_ColumnSpan(', ''),
  \ dotnet#method('set_ColumnSpan(', ''),
  \ dotnet#method('get_RowSpan(', ''),
  \ dotnet#method('set_RowSpan(', ''),
  \ dotnet#method('OnCreateAutomationPeer(', ''),
  \ dotnet#method('get_Padding(', ''),
  \ dotnet#method('set_Padding(', ''),
  \ dotnet#method('get_BorderThickness(', ''),
  \ dotnet#method('set_BorderThickness(', ''),
  \ dotnet#method('get_BorderBrush(', ''),
  \ dotnet#method('set_BorderBrush(', ''),
  \ dotnet#method('get_TextAlignment(', ''),
  \ dotnet#method('set_TextAlignment(', ''),
  \ dotnet#method('get_FlowDirection(', ''),
  \ dotnet#method('set_FlowDirection(', ''),
  \ dotnet#method('get_LineHeight(', ''),
  \ dotnet#method('set_LineHeight(', ''),
  \ dotnet#method('get_LineStackingStrategy(', ''),
  \ dotnet#method('set_LineStackingStrategy(', ''),
  \ dotnet#method('OnEnterParentTree(', ''),
  \ dotnet#method('OnExitParentTree(', ''),
  \ dotnet#method('OnAfterExitParentTree(', ''),
  \ dotnet#method('get_Index(', ''),
  \ dotnet#method('set_Index(', ''),
  \ dotnet#method('OnEnterParentTree(', ''),
  \ dotnet#method('OnExitParentTree(', ''),
  \ dotnet#method('OnAfterExitParentTree(', ''),
  \ dotnet#method('ValidateStructure(', ''),
  \ dotnet#method('get_Index(', ''),
  \ dotnet#method('set_Index(', ''),
  \ dotnet#method('get_RowIndex(', ''),
  \ dotnet#method('get_RowGroupIndex(', ''),
  \ dotnet#method('get_ColumnIndex(', ''),
  \ dotnet#method('set_ColumnIndex(', ''),
  \ dotnet#method('get_IsIMEStructuralElement(', ''),
  \ dotnet#prop('Blocks', 'BlockCollection'),
  \ dotnet#prop('ColumnSpan', 'int32'),
  \ dotnet#prop('RowSpan', 'int32'),
  \ dotnet#prop('Padding', 'Thickness'),
  \ dotnet#prop('BorderThickness', 'Thickness'),
  \ dotnet#prop('BorderBrush', 'Brush'),
  \ dotnet#prop('TextAlignment', 'TextAlignment'),
  \ dotnet#prop('FlowDirection', 'FlowDirection'),
  \ dotnet#prop('LineHeight', 'float64'),
  \ dotnet#prop('LineStackingStrategy', 'LineStackingStrategy'),
  \ dotnet#prop('Index', 'int32'),
  \ dotnet#prop('Row', 'TableRow'),
  \ dotnet#prop('Table', 'Table'),
  \ dotnet#prop('Index', 'int32'),
  \ dotnet#prop('RowIndex', 'int32'),
  \ dotnet#prop('RowGroupIndex', 'int32'),
  \ dotnet#prop('ColumnIndex', 'int32'),
  \ dotnet#prop('IsIMEStructuralElement', 'bool'),
  \ ])

call dotnet#class('TableColumn', 'FrameworkContentElement', [ 
  \ dotnet#method('TableColumn(', ''),
  \ dotnet#method('get_Width(', ''),
  \ dotnet#method('set_Width(', ''),
  \ dotnet#method('get_Background(', ''),
  \ dotnet#method('set_Background(', ''),
  \ dotnet#method('OnEnterParentTree(', ''),
  \ dotnet#method('OnExitParentTree(', ''),
  \ dotnet#method('OnAfterExitParentTree(', ''),
  \ dotnet#method('get_Index(', ''),
  \ dotnet#method('set_Index(', ''),
  \ dotnet#method('OnEnterParentTree(', ''),
  \ dotnet#method('OnExitParentTree(', ''),
  \ dotnet#method('get_Index(', ''),
  \ dotnet#method('set_Index(', ''),
  \ dotnet#prop('Width', 'GridLength'),
  \ dotnet#prop('Background', 'Brush'),
  \ dotnet#prop('Index', 'int32'),
  \ dotnet#prop('Table', 'Table'),
  \ dotnet#prop('Index', 'int32'),
  \ dotnet#prop('DefaultWidth', 'GridLength'),
  \ ])

call dotnet#class('TableRow', 'TextElement', [ 
  \ dotnet#method('TableRow(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('OnNewParent(', ''),
  \ dotnet#method('OnEnterParentTree(', ''),
  \ dotnet#method('OnExitParentTree(', ''),
  \ dotnet#method('OnAfterExitParentTree(', ''),
  \ dotnet#method('get_Index(', ''),
  \ dotnet#method('set_Index(', ''),
  \ dotnet#method('OnEnterParentTree(', ''),
  \ dotnet#method('OnExitParentTree(', ''),
  \ dotnet#method('OnAfterExitParentTree(', ''),
  \ dotnet#method('ValidateStructure(', ''),
  \ dotnet#method('get_Cells(', ''),
  \ dotnet#method('ShouldSerializeCells(', ''),
  \ dotnet#method('get_Index(', ''),
  \ dotnet#method('set_Index(', ''),
  \ dotnet#method('get_InsertionIndex(', ''),
  \ dotnet#method('set_InsertionIndex(', ''),
  \ dotnet#method('get_ColumnCount(', ''),
  \ dotnet#method('get_HasForeignCells(', ''),
  \ dotnet#method('get_HasRealCells(', ''),
  \ dotnet#method('get_FormatCellCount(', ''),
  \ dotnet#method('get_IsIMEStructuralElement(', ''),
  \ dotnet#prop('Index', 'int32'),
  \ dotnet#prop('RowGroup', 'TableRowGroup'),
  \ dotnet#prop('Table', 'Table'),
  \ dotnet#prop('Cells', 'TableCellCollection'),
  \ dotnet#prop('Index', 'int32'),
  \ dotnet#prop('InsertionIndex', 'int32'),
  \ dotnet#prop('InsertionIndex', 'int32'),
  \ dotnet#prop('SpannedCells', 'TableCell[]'),
  \ dotnet#prop('ColumnCount', 'int32'),
  \ dotnet#prop('HasForeignCells', 'bool'),
  \ dotnet#prop('HasRealCells', 'bool'),
  \ dotnet#prop('FormatCellCount', 'int32'),
  \ dotnet#prop('IsIMEStructuralElement', 'bool'),
  \ ])

call dotnet#class('TableRowGroup', 'TextElement', [ 
  \ dotnet#method('TableRowGroup(', ''),
  \ dotnet#method('AddChild(', ''),
  \ dotnet#method('AddText(', ''),
  \ dotnet#method('get_Rows(', ''),
  \ dotnet#method('ShouldSerializeRows(', ''),
  \ dotnet#method('OnEnterParentTree(', ''),
  \ dotnet#method('OnExitParentTree(', ''),
  \ dotnet#method('OnAfterExitParentTree(', ''),
  \ dotnet#method('get_Index(', ''),
  \ dotnet#method('set_Index(', ''),
  \ dotnet#method('OnEnterParentTree(', ''),
  \ dotnet#method('OnExitParentTree(', ''),
  \ dotnet#method('OnAfterExitParentTree(', ''),
  \ dotnet#method('ValidateStructure(', ''),
  \ dotnet#method('get_Index(', ''),
  \ dotnet#method('set_Index(', ''),
  \ dotnet#method('get_InsertionIndex(', ''),
  \ dotnet#method('set_InsertionIndex(', ''),
  \ dotnet#method('get_IsIMEStructuralElement(', ''),
  \ dotnet#method('OnNewParent(', ''),
  \ dotnet#prop('Rows', 'TableRowCollection'),
  \ dotnet#prop('Index', 'int32'),
  \ dotnet#prop('Table', 'Table'),
  \ dotnet#prop('Index', 'int32'),
  \ dotnet#prop('InsertionIndex', 'int32'),
  \ dotnet#prop('InsertionIndex', 'int32'),
  \ dotnet#prop('IsIMEStructuralElement', 'bool'),
  \ ])

call dotnet#class('TextEffectResolver', 'Object', [ 
  \ dotnet#method('Resolve(', ''),
  \ ])

call dotnet#class('TextEffectTarget', 'Object', [ 
  \ dotnet#method('TextEffectTarget(', ''),
  \ dotnet#method('get_Element(', ''),
  \ dotnet#method('get_TextEffect(', ''),
  \ dotnet#method('Enable(', ''),
  \ dotnet#method('Disable(', ''),
  \ dotnet#method('get_IsEnabled(', ''),
  \ dotnet#prop('Element', 'DependencyObject'),
  \ dotnet#prop('TextEffect', 'TextEffect'),
  \ dotnet#prop('IsEnabled', 'bool'),
  \ ])

call dotnet#class('TextElementEditingBehaviorAttribute', 'Attribute', [ 
  \ dotnet#method('TextElementEditingBehaviorAttribute(', ''),
  \ dotnet#method('get_IsMergeable(', ''),
  \ dotnet#method('set_IsMergeable(', ''),
  \ dotnet#method('get_IsTypographicOnly(', ''),
  \ dotnet#method('set_IsTypographicOnly(', ''),
  \ dotnet#prop('IsMergeable', 'bool'),
  \ dotnet#prop('IsTypographicOnly', 'bool'),
  \ ])

call dotnet#class('TextPointer', 'ContentPosition', [ 
  \ dotnet#method('TextPointer(', ''),
  \ dotnet#method('CreatePointer(', ''),
  \ dotnet#method('IsInSameDocument(', ''),
  \ dotnet#method('CompareTo(', ''),
  \ dotnet#method('GetPointerContext(', ''),
  \ dotnet#method('GetTextRunLength(', ''),
  \ dotnet#method('GetOffsetToPosition(', ''),
  \ dotnet#method('GetTextInRun(', ''),
  \ dotnet#method('GetAdjacentElement(', ''),
  \ dotnet#method('GetPositionAtOffset(', ''),
  \ dotnet#method('GetNextContextPosition(', ''),
  \ dotnet#method('GetInsertionPosition(', ''),
  \ dotnet#method('GetNextInsertionPosition(', ''),
  \ dotnet#method('GetLineStartPosition(', ''),
  \ dotnet#method('GetCharacterRect(', ''),
  \ dotnet#method('InsertTextInRun(', ''),
  \ dotnet#method('DeleteTextInRun(', ''),
  \ dotnet#method('InsertTextElement(', ''),
  \ dotnet#method('InsertParagraphBreak(', ''),
  \ dotnet#method('InsertLineBreak(', ''),
  \ dotnet#method('ToString(', ''),
  \ dotnet#method('get_HasValidLayout(', ''),
  \ dotnet#method('get_LogicalDirection(', ''),
  \ dotnet#method('get_Parent(', ''),
  \ dotnet#method('get_IsAtInsertionPosition(', ''),
  \ dotnet#method('get_IsAtLineStartPosition(', ''),
  \ dotnet#method('get_Paragraph(', ''),
  \ dotnet#method('get_DocumentStart(', ''),
  \ dotnet#method('get_DocumentEnd(', ''),
  \ dotnet#method('GetNonMergeableInlineAncestor(', ''),
  \ dotnet#method('GetListAncestor(', ''),
  \ dotnet#method('MoveToPosition(', ''),
  \ dotnet#method('MoveByOffset(', ''),
  \ dotnet#method('MoveToNextContextPosition(', ''),
  \ dotnet#method('MoveToInsertionPosition(', ''),
  \ dotnet#method('MoveToNextInsertionPosition(', ''),
  \ dotnet#method('MoveToLineBoundary(', ''),
  \ dotnet#method('InsertUIElement(', ''),
  \ dotnet#method('GetAdjacentElementFromOuterPosition(', ''),
  \ dotnet#method('SetLogicalDirection(', ''),
  \ dotnet#method('get_IsFrozen(', ''),
  \ dotnet#method('Freeze(', ''),
  \ dotnet#method('GetFrozenPointer(', ''),
  \ dotnet#method('HasEqualScope(', ''),
  \ dotnet#method('GetValue(', ''),
  \ dotnet#method('ReadLocalValue(', ''),
  \ dotnet#method('MoveToElementEdge(', ''),
  \ dotnet#method('DeleteContentToPosition(', ''),
  \ dotnet#method('ValidateLayout(', ''),
  \ dotnet#method('GetAdjacentTextNodeSibling(', ''),
  \ dotnet#method('GetAdjacentTextElementNodeSibling(', ''),
  \ dotnet#method('GetAdjacentTextElementNode(', ''),
  \ dotnet#method('GetAdjacentSiblingNode(', ''),
  \ dotnet#method('GetSymbolOffset(', ''),
  \ dotnet#method('GetLogicalTreeNode(', ''),
  \ dotnet#method('SyncToTreeGeneration(', ''),
  \ dotnet#method('GetScopingNode(', ''),
  \ dotnet#method('DebugAssertGeneration(', ''),
  \ dotnet#method('GetNextNodeAndEdge(', ''),
  \ dotnet#method('GetPreviousNodeAndEdge(', ''),
  \ dotnet#method('GetPointerContextForward(', ''),
  \ dotnet#method('GetPointerContextBackward(', ''),
  \ dotnet#method('InsertInline(', ''),
  \ dotnet#method('GetCommonAncestor(', ''),
  \ dotnet#method('get_IsAtCaretUnitBoundary(', ''),
  \ dotnet#method('get_Offset(', ''),
  \ dotnet#method('get_CharOffset(', ''),
  \ dotnet#method('get_IsAtRowEnd(', ''),
  \ dotnet#method('get_HasNonMergeableInlineAncestor(', ''),
  \ dotnet#method('get_IsAtNonMergeableInlineStart(', ''),
  \ dotnet#method('GetAdjacentNode(', ''),
  \ dotnet#prop('HasValidLayout', 'bool'),
  \ dotnet#prop('LogicalDirection', 'LogicalDirection'),
  \ dotnet#prop('Parent', 'DependencyObject'),
  \ dotnet#prop('IsAtInsertionPosition', 'bool'),
  \ dotnet#prop('IsAtLineStartPosition', 'bool'),
  \ dotnet#prop('Paragraph', 'Paragraph'),
  \ dotnet#prop('ParagraphOrBlockUIContainer', 'Block'),
  \ dotnet#prop('DocumentStart', 'TextPointer'),
  \ dotnet#prop('DocumentEnd', 'TextPointer'),
  \ dotnet#prop('IsFrozen', 'bool'),
  \ dotnet#prop('ParentType', 'Type'),
  \ dotnet#prop('TextContainer', 'ITextContainer'),
  \ dotnet#prop('HasValidLayout', 'bool'),
  \ dotnet#prop('IsAtCaretUnitBoundary', 'bool'),
  \ dotnet#prop('LogicalDirection', 'LogicalDirection'),
  \ dotnet#prop('IsAtInsertionPosition', 'bool'),
  \ dotnet#prop('IsFrozen', 'bool'),
  \ dotnet#prop('Offset', 'int32'),
  \ dotnet#prop('Offset', 'int32'),
  \ dotnet#prop('CharOffset', 'int32'),
  \ dotnet#prop('CharOffset', 'int32'),
  \ dotnet#prop('TextContainer', 'TextContainer'),
  \ dotnet#prop('ContainingFrameworkElement', 'FrameworkElement'),
  \ dotnet#prop('IsAtRowEnd', 'bool'),
  \ dotnet#prop('HasNonMergeableInlineAncestor', 'bool'),
  \ dotnet#prop('IsAtNonMergeableInlineStart', 'bool'),
  \ dotnet#prop('Node', 'TextTreeNode'),
  \ dotnet#prop('Edge', 'ElementEdge'),
  \ dotnet#prop('ParentBlock', 'Block'),
  \ ])

call dotnet#class('TextRange', 'Object', [ 
  \ dotnet#method('TextRange(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('Select(', ''),
  \ dotnet#method('SelectWord(', ''),
  \ dotnet#method('SelectParagraph(', ''),
  \ dotnet#method('ApplyTypingHeuristics(', ''),
  \ dotnet#method('GetPropertyValue(', ''),
  \ dotnet#method('CanSave(', ''),
  \ dotnet#method('Save(', ''),
  \ dotnet#method('BeginChange(', ''),
  \ dotnet#method('BeginChangeNoUndo(', ''),
  \ dotnet#method('EndChange(', ''),
  \ dotnet#method('NotifyChanged(', ''),
  \ dotnet#method('get_IgnoreTextUnitBoundaries(', ''),
  \ dotnet#method('get_IsEmpty(', ''),
  \ dotnet#method('get_HasConcreteTextContainer(', ''),
  \ dotnet#method('get_Text(', ''),
  \ dotnet#method('set_Text(', ''),
  \ dotnet#method('get_Xml(', ''),
  \ dotnet#method('get_ChangeBlockLevel(', ''),
  \ dotnet#method('get_IsTableCellRange(', ''),
  \ dotnet#method('add_Changed(', ''),
  \ dotnet#method('remove_Changed(', ''),
  \ dotnet#method('FireChanged(', ''),
  \ dotnet#method('get__IsTableCellRange(', ''),
  \ dotnet#method('set__IsTableCellRange(', ''),
  \ dotnet#method('set__TextSegments(', ''),
  \ dotnet#method('get__ChangeBlockLevel(', ''),
  \ dotnet#method('set__ChangeBlockLevel(', ''),
  \ dotnet#method('set__ChangeBlockUndoRecord(', ''),
  \ dotnet#method('get__IsChanged(', ''),
  \ dotnet#method('set__IsChanged(', ''),
  \ dotnet#method('get__ContentGeneration(', ''),
  \ dotnet#method('set__ContentGeneration(', ''),
  \ dotnet#method('ApplyPropertyValue(', ''),
  \ dotnet#method('ClearAllProperties(', ''),
  \ dotnet#method('GetUIElementSelected(', ''),
  \ dotnet#method('CanLoad(', ''),
  \ dotnet#method('Load(', ''),
  \ dotnet#method('InsertEmbeddedUIElement(', ''),
  \ dotnet#method('InsertImage(', ''),
  \ dotnet#method('SetXmlVirtual(', ''),
  \ dotnet#method('LoadVirtual(', ''),
  \ dotnet#method('InsertTable(', ''),
  \ dotnet#method('InsertRows(', ''),
  \ dotnet#method('DeleteRows(', ''),
  \ dotnet#method('InsertColumns(', ''),
  \ dotnet#method('DeleteColumns(', ''),
  \ dotnet#method('MergeCells(', ''),
  \ dotnet#method('SplitCell(', ''),
  \ dotnet#method('get_Start(', ''),
  \ dotnet#method('get_End(', ''),
  \ dotnet#method('set_Xml(', ''),
  \ dotnet#method('DeclareChangeBlock(', ''),
  \ dotnet#method('InsertEmbeddedUIElementVirtual(', ''),
  \ dotnet#method('ApplyPropertyToTextVirtual(', ''),
  \ dotnet#method('ClearAllPropertiesVirtual(', ''),
  \ dotnet#method('DeleteRowsVirtual(', ''),
  \ dotnet#method('DeleteColumnsVirtual(', ''),
  \ dotnet#event('Changed', 'EventHandler'),
  \ dotnet#prop('IgnoreTextUnitBoundaries', 'bool'),
  \ dotnet#prop('Start', 'ITextPointer'),
  \ dotnet#prop('End', 'ITextPointer'),
  \ dotnet#prop('IsEmpty', 'bool'),
  \ dotnet#prop('TextSegments', 'List'),
  \ dotnet#prop('HasConcreteTextContainer', 'bool'),
  \ dotnet#prop('Text', 'string'),
  \ dotnet#prop('Xml', 'string'),
  \ dotnet#prop('ChangeBlockLevel', 'int32'),
  \ dotnet#prop('IsTableCellRange', 'bool'),
  \ dotnet#prop('_IsTableCellRange', 'bool'),
  \ dotnet#prop('_TextSegments', 'List'),
  \ dotnet#prop('_ChangeBlockLevel', 'int32'),
  \ dotnet#prop('_ChangeBlockUndoRecord', 'ChangeBlockUndoRecord'),
  \ dotnet#prop('_IsChanged', 'bool'),
  \ dotnet#prop('_ContentGeneration', 'uint32'),
  \ dotnet#prop('Start', 'TextPointer'),
  \ dotnet#prop('End', 'TextPointer'),
  \ dotnet#prop('IsEmpty', 'bool'),
  \ dotnet#prop('HasConcreteTextContainer', 'bool'),
  \ dotnet#prop('ContainingFrameworkElement', 'FrameworkElement'),
  \ dotnet#prop('Text', 'string'),
  \ dotnet#prop('Xml', 'string'),
  \ dotnet#prop('IsTableCellRange', 'bool'),
  \ dotnet#prop('_IsChanged', 'bool'),
  \ dotnet#prop('ChangeBlockLevel', 'int32'),
  \ ])

call dotnet#class('TextSelection', 'TextRange', [ 
  \ dotnet#method('TextSelection(', ''),
  \ dotnet#method('Select(', ''),
  \ dotnet#method('SelectWord(', ''),
  \ dotnet#method('SelectParagraph(', ''),
  \ dotnet#method('ApplyTypingHeuristics(', ''),
  \ dotnet#method('GetPropertyValue(', ''),
  \ dotnet#method('get__IsChanged(', ''),
  \ dotnet#method('set__IsChanged(', ''),
  \ dotnet#method('NotifyChanged(', ''),
  \ dotnet#method('get_Text(', ''),
  \ dotnet#method('set_Text(', ''),
  \ dotnet#method('UpdateCaretAndHighlight(', ''),
  \ dotnet#method('SetCaretToPosition(', ''),
  \ dotnet#method('ExtendToPosition(', ''),
  \ dotnet#method('ExtendToNextInsertionPosition(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('OnDetach(', ''),
  \ dotnet#method('OnTextViewUpdated(', ''),
  \ dotnet#method('DetachFromVisualTree(', ''),
  \ dotnet#method('RefreshCaret(', ''),
  \ dotnet#method('OnInterimSelectionChanged(', ''),
  \ dotnet#method('SetSelectionByMouse(', ''),
  \ dotnet#method('ExtendSelectionByMouse(', ''),
  \ dotnet#method('ExtendToNextTableRow(', ''),
  \ dotnet#method('get_IsInterimSelection(', ''),
  \ dotnet#method('OnInputLanguageChanged(', ''),
  \ dotnet#method('InsertEmbeddedUIElementVirtual(', ''),
  \ dotnet#method('ApplyPropertyToTextVirtual(', ''),
  \ dotnet#method('ClearAllPropertiesVirtual(', ''),
  \ dotnet#method('SetXmlVirtual(', ''),
  \ dotnet#method('LoadVirtual(', ''),
  \ dotnet#method('GetCurrentValue(', ''),
  \ dotnet#method('SpringloadCurrentFormatting(', ''),
  \ dotnet#method('ClearSpringloadFormatting(', ''),
  \ dotnet#method('ApplySpringloadFormatting(', ''),
  \ dotnet#method('UpdateCaretState(', ''),
  \ dotnet#method('GetCaretBrush(', ''),
  \ dotnet#method('IsBidiInputLanguageInstalled(', ''),
  \ dotnet#method('ValidateLayout(', ''),
  \ dotnet#method('get_CoversEntireContent(', ''),
  \ dotnet#method('OnCaretNavigation(', ''),
  \ dotnet#prop('_IsChanged', 'bool'),
  \ dotnet#prop('Text', 'string'),
  \ dotnet#prop('AnchorPosition', 'ITextPointer'),
  \ dotnet#prop('MovingPosition', 'ITextPointer'),
  \ dotnet#prop('IsInterimSelection', 'bool'),
  \ dotnet#prop('IsInterimSelection', 'bool'),
  \ dotnet#prop('AnchorPosition', 'TextPointer'),
  \ dotnet#prop('MovingPosition', 'TextPointer'),
  \ dotnet#prop('CaretElement', 'CaretElement'),
  \ dotnet#prop('CaretElement', 'CaretElement'),
  \ dotnet#prop('CoversEntireContent', 'bool'),
  \ dotnet#prop('TextEditor', 'TextEditor'),
  \ dotnet#prop('TextView', 'ITextView'),
  \ ])

call dotnet#class('Typography', 'Object', [ 
  \ dotnet#method('Typography(', ''),
  \ dotnet#method('get_StandardLigatures(', ''),
  \ dotnet#method('set_StandardLigatures(', ''),
  \ dotnet#method('get_ContextualLigatures(', ''),
  \ dotnet#method('set_ContextualLigatures(', ''),
  \ dotnet#method('get_DiscretionaryLigatures(', ''),
  \ dotnet#method('set_DiscretionaryLigatures(', ''),
  \ dotnet#method('get_HistoricalLigatures(', ''),
  \ dotnet#method('set_HistoricalLigatures(', ''),
  \ dotnet#method('get_AnnotationAlternates(', ''),
  \ dotnet#method('set_AnnotationAlternates(', ''),
  \ dotnet#method('get_ContextualAlternates(', ''),
  \ dotnet#method('set_ContextualAlternates(', ''),
  \ dotnet#method('get_HistoricalForms(', ''),
  \ dotnet#method('set_HistoricalForms(', ''),
  \ dotnet#method('get_Kerning(', ''),
  \ dotnet#method('set_Kerning(', ''),
  \ dotnet#method('get_CapitalSpacing(', ''),
  \ dotnet#method('set_CapitalSpacing(', ''),
  \ dotnet#method('get_CaseSensitiveForms(', ''),
  \ dotnet#method('set_CaseSensitiveForms(', ''),
  \ dotnet#method('get_StylisticSet1(', ''),
  \ dotnet#method('set_StylisticSet1(', ''),
  \ dotnet#method('get_StylisticSet2(', ''),
  \ dotnet#method('set_StylisticSet2(', ''),
  \ dotnet#method('get_StylisticSet3(', ''),
  \ dotnet#method('set_StylisticSet3(', ''),
  \ dotnet#method('get_StylisticSet4(', ''),
  \ dotnet#method('set_StylisticSet4(', ''),
  \ dotnet#method('get_StylisticSet5(', ''),
  \ dotnet#method('set_StylisticSet5(', ''),
  \ dotnet#method('get_StylisticSet6(', ''),
  \ dotnet#method('set_StylisticSet6(', ''),
  \ dotnet#method('get_StylisticSet7(', ''),
  \ dotnet#method('set_StylisticSet7(', ''),
  \ dotnet#method('get_StylisticSet8(', ''),
  \ dotnet#method('set_StylisticSet8(', ''),
  \ dotnet#method('get_StylisticSet9(', ''),
  \ dotnet#method('set_StylisticSet9(', ''),
  \ dotnet#method('get_StylisticSet10(', ''),
  \ dotnet#method('set_StylisticSet10(', ''),
  \ dotnet#method('get_StylisticSet11(', ''),
  \ dotnet#method('set_StylisticSet11(', ''),
  \ dotnet#method('get_StylisticSet12(', ''),
  \ dotnet#method('set_StylisticSet12(', ''),
  \ dotnet#method('get_StylisticSet13(', ''),
  \ dotnet#method('set_StylisticSet13(', ''),
  \ dotnet#method('get_StylisticSet14(', ''),
  \ dotnet#method('set_StylisticSet14(', ''),
  \ dotnet#method('get_StylisticSet15(', ''),
  \ dotnet#method('set_StylisticSet15(', ''),
  \ dotnet#method('get_StylisticSet16(', ''),
  \ dotnet#method('set_StylisticSet16(', ''),
  \ dotnet#method('get_StylisticSet17(', ''),
  \ dotnet#method('set_StylisticSet17(', ''),
  \ dotnet#method('get_StylisticSet18(', ''),
  \ dotnet#method('set_StylisticSet18(', ''),
  \ dotnet#method('get_StylisticSet19(', ''),
  \ dotnet#method('set_StylisticSet19(', ''),
  \ dotnet#method('get_StylisticSet20(', ''),
  \ dotnet#method('set_StylisticSet20(', ''),
  \ dotnet#method('get_Fraction(', ''),
  \ dotnet#method('set_Fraction(', ''),
  \ dotnet#method('get_SlashedZero(', ''),
  \ dotnet#method('set_SlashedZero(', ''),
  \ dotnet#method('get_MathematicalGreek(', ''),
  \ dotnet#method('set_MathematicalGreek(', ''),
  \ dotnet#method('get_EastAsianExpertForms(', ''),
  \ dotnet#method('set_EastAsianExpertForms(', ''),
  \ dotnet#method('get_Variants(', ''),
  \ dotnet#method('set_Variants(', ''),
  \ dotnet#method('get_Capitals(', ''),
  \ dotnet#method('set_Capitals(', ''),
  \ dotnet#method('get_NumeralStyle(', ''),
  \ dotnet#method('set_NumeralStyle(', ''),
  \ dotnet#method('get_NumeralAlignment(', ''),
  \ dotnet#method('set_NumeralAlignment(', ''),
  \ dotnet#method('get_EastAsianWidths(', ''),
  \ dotnet#method('set_EastAsianWidths(', ''),
  \ dotnet#method('get_EastAsianLanguage(', ''),
  \ dotnet#method('set_EastAsianLanguage(', ''),
  \ dotnet#method('get_StandardSwashes(', ''),
  \ dotnet#method('set_StandardSwashes(', ''),
  \ dotnet#method('get_ContextualSwashes(', ''),
  \ dotnet#method('set_ContextualSwashes(', ''),
  \ dotnet#method('get_StylisticAlternates(', ''),
  \ dotnet#method('set_StylisticAlternates(', ''),
  \ dotnet#method('SetStandardLigatures(', ''),
  \ dotnet#method('GetStandardLigatures(', ''),
  \ dotnet#method('SetContextualLigatures(', ''),
  \ dotnet#method('GetContextualLigatures(', ''),
  \ dotnet#method('SetDiscretionaryLigatures(', ''),
  \ dotnet#method('GetDiscretionaryLigatures(', ''),
  \ dotnet#method('SetHistoricalLigatures(', ''),
  \ dotnet#method('GetHistoricalLigatures(', ''),
  \ dotnet#method('SetAnnotationAlternates(', ''),
  \ dotnet#method('GetAnnotationAlternates(', ''),
  \ dotnet#method('SetContextualAlternates(', ''),
  \ dotnet#method('GetContextualAlternates(', ''),
  \ dotnet#method('SetHistoricalForms(', ''),
  \ dotnet#method('GetHistoricalForms(', ''),
  \ dotnet#method('SetKerning(', ''),
  \ dotnet#method('GetKerning(', ''),
  \ dotnet#method('SetCapitalSpacing(', ''),
  \ dotnet#method('GetCapitalSpacing(', ''),
  \ dotnet#method('SetCaseSensitiveForms(', ''),
  \ dotnet#method('GetCaseSensitiveForms(', ''),
  \ dotnet#method('SetStylisticSet1(', ''),
  \ dotnet#method('GetStylisticSet1(', ''),
  \ dotnet#method('SetStylisticSet2(', ''),
  \ dotnet#method('GetStylisticSet2(', ''),
  \ dotnet#method('SetStylisticSet3(', ''),
  \ dotnet#method('GetStylisticSet3(', ''),
  \ dotnet#method('SetStylisticSet4(', ''),
  \ dotnet#method('GetStylisticSet4(', ''),
  \ dotnet#method('SetStylisticSet5(', ''),
  \ dotnet#method('GetStylisticSet5(', ''),
  \ dotnet#method('SetStylisticSet6(', ''),
  \ dotnet#method('GetStylisticSet6(', ''),
  \ dotnet#method('SetStylisticSet7(', ''),
  \ dotnet#method('GetStylisticSet7(', ''),
  \ dotnet#method('SetStylisticSet8(', ''),
  \ dotnet#method('GetStylisticSet8(', ''),
  \ dotnet#method('SetStylisticSet9(', ''),
  \ dotnet#method('GetStylisticSet9(', ''),
  \ dotnet#method('SetStylisticSet10(', ''),
  \ dotnet#method('GetStylisticSet10(', ''),
  \ dotnet#method('SetStylisticSet11(', ''),
  \ dotnet#method('GetStylisticSet11(', ''),
  \ dotnet#method('SetStylisticSet12(', ''),
  \ dotnet#method('GetStylisticSet12(', ''),
  \ dotnet#method('SetStylisticSet13(', ''),
  \ dotnet#method('GetStylisticSet13(', ''),
  \ dotnet#method('SetStylisticSet14(', ''),
  \ dotnet#method('GetStylisticSet14(', ''),
  \ dotnet#method('SetStylisticSet15(', ''),
  \ dotnet#method('GetStylisticSet15(', ''),
  \ dotnet#method('SetStylisticSet16(', ''),
  \ dotnet#method('GetStylisticSet16(', ''),
  \ dotnet#method('SetStylisticSet17(', ''),
  \ dotnet#method('GetStylisticSet17(', ''),
  \ dotnet#method('SetStylisticSet18(', ''),
  \ dotnet#method('GetStylisticSet18(', ''),
  \ dotnet#method('SetStylisticSet19(', ''),
  \ dotnet#method('GetStylisticSet19(', ''),
  \ dotnet#method('SetStylisticSet20(', ''),
  \ dotnet#method('GetStylisticSet20(', ''),
  \ dotnet#method('SetFraction(', ''),
  \ dotnet#method('GetFraction(', ''),
  \ dotnet#method('SetSlashedZero(', ''),
  \ dotnet#method('GetSlashedZero(', ''),
  \ dotnet#method('SetMathematicalGreek(', ''),
  \ dotnet#method('GetMathematicalGreek(', ''),
  \ dotnet#method('SetEastAsianExpertForms(', ''),
  \ dotnet#method('GetEastAsianExpertForms(', ''),
  \ dotnet#method('SetVariants(', ''),
  \ dotnet#method('GetVariants(', ''),
  \ dotnet#method('SetCapitals(', ''),
  \ dotnet#method('GetCapitals(', ''),
  \ dotnet#method('SetNumeralStyle(', ''),
  \ dotnet#method('GetNumeralStyle(', ''),
  \ dotnet#method('SetNumeralAlignment(', ''),
  \ dotnet#method('GetNumeralAlignment(', ''),
  \ dotnet#method('SetEastAsianWidths(', ''),
  \ dotnet#method('GetEastAsianWidths(', ''),
  \ dotnet#method('SetEastAsianLanguage(', ''),
  \ dotnet#method('GetEastAsianLanguage(', ''),
  \ dotnet#method('SetStandardSwashes(', ''),
  \ dotnet#method('GetStandardSwashes(', ''),
  \ dotnet#method('SetContextualSwashes(', ''),
  \ dotnet#method('GetContextualSwashes(', ''),
  \ dotnet#method('SetStylisticAlternates(', ''),
  \ dotnet#method('GetStylisticAlternates(', ''),
  \ dotnet#prop('StandardLigatures', 'bool'),
  \ dotnet#prop('ContextualLigatures', 'bool'),
  \ dotnet#prop('DiscretionaryLigatures', 'bool'),
  \ dotnet#prop('HistoricalLigatures', 'bool'),
  \ dotnet#prop('AnnotationAlternates', 'int32'),
  \ dotnet#prop('ContextualAlternates', 'bool'),
  \ dotnet#prop('HistoricalForms', 'bool'),
  \ dotnet#prop('Kerning', 'bool'),
  \ dotnet#prop('CapitalSpacing', 'bool'),
  \ dotnet#prop('CaseSensitiveForms', 'bool'),
  \ dotnet#prop('StylisticSet1', 'bool'),
  \ dotnet#prop('StylisticSet2', 'bool'),
  \ dotnet#prop('StylisticSet3', 'bool'),
  \ dotnet#prop('StylisticSet4', 'bool'),
  \ dotnet#prop('StylisticSet5', 'bool'),
  \ dotnet#prop('StylisticSet6', 'bool'),
  \ dotnet#prop('StylisticSet7', 'bool'),
  \ dotnet#prop('StylisticSet8', 'bool'),
  \ dotnet#prop('StylisticSet9', 'bool'),
  \ dotnet#prop('StylisticSet10', 'bool'),
  \ dotnet#prop('StylisticSet11', 'bool'),
  \ dotnet#prop('StylisticSet12', 'bool'),
  \ dotnet#prop('StylisticSet13', 'bool'),
  \ dotnet#prop('StylisticSet14', 'bool'),
  \ dotnet#prop('StylisticSet15', 'bool'),
  \ dotnet#prop('StylisticSet16', 'bool'),
  \ dotnet#prop('StylisticSet17', 'bool'),
  \ dotnet#prop('StylisticSet18', 'bool'),
  \ dotnet#prop('StylisticSet19', 'bool'),
  \ dotnet#prop('StylisticSet20', 'bool'),
  \ dotnet#prop('Fraction', 'FontFraction'),
  \ dotnet#prop('SlashedZero', 'bool'),
  \ dotnet#prop('MathematicalGreek', 'bool'),
  \ dotnet#prop('EastAsianExpertForms', 'bool'),
  \ dotnet#prop('Variants', 'FontVariants'),
  \ dotnet#prop('Capitals', 'FontCapitals'),
  \ dotnet#prop('NumeralStyle', 'FontNumeralStyle'),
  \ dotnet#prop('NumeralAlignment', 'FontNumeralAlignment'),
  \ dotnet#prop('EastAsianWidths', 'FontEastAsianWidths'),
  \ dotnet#prop('EastAsianLanguage', 'FontEastAsianLanguage'),
  \ dotnet#prop('StandardSwashes', 'int32'),
  \ dotnet#prop('ContextualSwashes', 'int32'),
  \ dotnet#prop('StylisticAlternates', 'int32'),
  \ ])

call dotnet#class('Underline', 'Span', [ 
  \ dotnet#method('Underline(', ''),
  \ ])

call dotnet#class('ZoomPercentageConverter', 'Object', [ 
  \ dotnet#method('ZoomPercentageConverter(', ''),
  \ dotnet#method('Convert(', ''),
  \ dotnet#method('ConvertBack(', ''),
  \ ])

call dotnet#class('TableCellCollection', 'Object', [ 
  \ dotnet#method('TableCellCollection(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveRange(', ''),
  \ dotnet#method('TrimToSize(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_Capacity(', ''),
  \ dotnet#method('set_Capacity(', ''),
  \ dotnet#method('InternalAdd(', ''),
  \ dotnet#method('InternalRemove(', ''),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Capacity', 'int32'),
  \ dotnet#prop('Item(int32)', 'TableCell'),
  \ ])

call dotnet#class('TableColumnCollection', 'Object', [ 
  \ dotnet#method('TableColumnCollection(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveRange(', ''),
  \ dotnet#method('TrimToSize(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_Capacity(', ''),
  \ dotnet#method('set_Capacity(', ''),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Capacity', 'int32'),
  \ dotnet#prop('Item(int32)', 'TableColumn'),
  \ ])

call dotnet#class('TableRowCollection', 'Object', [ 
  \ dotnet#method('TableRowCollection(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveRange(', ''),
  \ dotnet#method('TrimToSize(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_Capacity(', ''),
  \ dotnet#method('set_Capacity(', ''),
  \ dotnet#method('InternalAdd(', ''),
  \ dotnet#method('InternalRemove(', ''),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Capacity', 'int32'),
  \ dotnet#prop('Item(int32)', 'TableRow'),
  \ ])

call dotnet#class('TableRowGroupCollection', 'Object', [ 
  \ dotnet#method('TableRowGroupCollection(', ''),
  \ dotnet#method('CopyTo(', ''),
  \ dotnet#method('Add(', ''),
  \ dotnet#method('Clear(', ''),
  \ dotnet#method('Contains(', ''),
  \ dotnet#method('IndexOf(', ''),
  \ dotnet#method('Insert(', ''),
  \ dotnet#method('Remove(', ''),
  \ dotnet#method('RemoveAt(', ''),
  \ dotnet#method('RemoveRange(', ''),
  \ dotnet#method('TrimToSize(', ''),
  \ dotnet#method('get_IsFixedSize(', ''),
  \ dotnet#method('get_IsReadOnly(', ''),
  \ dotnet#method('get_Item(', ''),
  \ dotnet#method('set_Item(', ''),
  \ dotnet#method('get_Count(', ''),
  \ dotnet#method('get_IsSynchronized(', ''),
  \ dotnet#method('get_SyncRoot(', ''),
  \ dotnet#method('get_Capacity(', ''),
  \ dotnet#method('set_Capacity(', ''),
  \ dotnet#method('InternalAdd(', ''),
  \ dotnet#method('InternalRemove(', ''),
  \ dotnet#prop('IsFixedSize', 'bool'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('Item(int32)', 'object'),
  \ dotnet#prop('Count', 'int32'),
  \ dotnet#prop('IsReadOnly', 'bool'),
  \ dotnet#prop('IsSynchronized', 'bool'),
  \ dotnet#prop('SyncRoot', 'object'),
  \ dotnet#prop('Capacity', 'int32'),
  \ dotnet#prop('Item(int32)', 'TableRowGroup'),
  \ ])


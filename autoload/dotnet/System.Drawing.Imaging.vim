call dotnet#namespace('System.Drawing.Imaging')

call dotnet#class('BitmapData', 'Object', [ 
  \ dotnet#method('get_Width(', ')', 'int32'),
  \ dotnet#method('set_Width(', 'int32 value)', 'void'),
  \ dotnet#method('get_Height(', ')', 'int32'),
  \ dotnet#method('set_Height(', 'int32 value)', 'void'),
  \ dotnet#method('get_Stride(', ')', 'int32'),
  \ dotnet#method('set_Stride(', 'int32 value)', 'void'),
  \ dotnet#method('get_PixelFormat(', ')', 'PixelFormat'),
  \ dotnet#method('set_PixelFormat(', 'PixelFormat value)', 'void'),
  \ dotnet#method('get_Scan0(', ')', 'int'),
  \ dotnet#method('set_Scan0(', 'native int value)', 'void'),
  \ dotnet#method('get_Reserved(', ')', 'int32'),
  \ dotnet#method('set_Reserved(', 'int32 value)', 'void'),
  \ dotnet#method('BitmapData(', ')', 'void'),
  \ dotnet#prop('Width', 'int32'),
  \ dotnet#prop('Height', 'int32'),
  \ dotnet#prop('Stride', 'int32'),
  \ dotnet#prop('PixelFormat', 'PixelFormat'),
  \ dotnet#prop('Scan0', 'int'),
  \ dotnet#prop('Reserved', 'int32'),
  \ ])

call dotnet#class('ColorMap', 'Object', [ 
  \ dotnet#method('ColorMap(', ')', 'void'),
  \ dotnet#method('get_OldColor(', ')', 'Color'),
  \ dotnet#method('set_OldColor(', 'Color value)', 'void'),
  \ dotnet#method('get_NewColor(', ')', 'Color'),
  \ dotnet#method('set_NewColor(', 'Color value)', 'void'),
  \ dotnet#prop('OldColor', 'Color'),
  \ dotnet#prop('NewColor', 'Color'),
  \ ])

call dotnet#class('ColorMatrix', 'Object', [ 
  \ dotnet#method('ColorMatrix(', ')', 'void'),
  \ dotnet#method('get_Matrix00(', ')', 'float32'),
  \ dotnet#method('set_Matrix00(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix01(', ')', 'float32'),
  \ dotnet#method('set_Matrix01(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix02(', ')', 'float32'),
  \ dotnet#method('set_Matrix02(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix03(', ')', 'float32'),
  \ dotnet#method('set_Matrix03(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix04(', ')', 'float32'),
  \ dotnet#method('set_Matrix04(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix10(', ')', 'float32'),
  \ dotnet#method('set_Matrix10(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix11(', ')', 'float32'),
  \ dotnet#method('set_Matrix11(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix12(', ')', 'float32'),
  \ dotnet#method('set_Matrix12(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix13(', ')', 'float32'),
  \ dotnet#method('set_Matrix13(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix14(', ')', 'float32'),
  \ dotnet#method('set_Matrix14(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix20(', ')', 'float32'),
  \ dotnet#method('set_Matrix20(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix21(', ')', 'float32'),
  \ dotnet#method('set_Matrix21(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix22(', ')', 'float32'),
  \ dotnet#method('set_Matrix22(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix23(', ')', 'float32'),
  \ dotnet#method('set_Matrix23(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix24(', ')', 'float32'),
  \ dotnet#method('set_Matrix24(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix30(', ')', 'float32'),
  \ dotnet#method('set_Matrix30(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix31(', ')', 'float32'),
  \ dotnet#method('set_Matrix31(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix32(', ')', 'float32'),
  \ dotnet#method('set_Matrix32(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix33(', ')', 'float32'),
  \ dotnet#method('set_Matrix33(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix34(', ')', 'float32'),
  \ dotnet#method('set_Matrix34(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix40(', ')', 'float32'),
  \ dotnet#method('set_Matrix40(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix41(', ')', 'float32'),
  \ dotnet#method('set_Matrix41(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix42(', ')', 'float32'),
  \ dotnet#method('set_Matrix42(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix43(', ')', 'float32'),
  \ dotnet#method('set_Matrix43(', 'float32 value)', 'void'),
  \ dotnet#method('get_Matrix44(', ')', 'float32'),
  \ dotnet#method('set_Matrix44(', 'float32 value)', 'void'),
  \ dotnet#method('ColorMatrix(', 'float32[][] newColorMatrix)', 'void'),
  \ dotnet#method('get_Item(', 'int32 row, int32 column)', 'float32'),
  \ dotnet#method('set_Item(', 'int32 row, int32 column, float32 value)', 'void'),
  \ dotnet#prop('Matrix00', 'float32'),
  \ dotnet#prop('Matrix01', 'float32'),
  \ dotnet#prop('Matrix02', 'float32'),
  \ dotnet#prop('Matrix03', 'float32'),
  \ dotnet#prop('Matrix04', 'float32'),
  \ dotnet#prop('Matrix10', 'float32'),
  \ dotnet#prop('Matrix11', 'float32'),
  \ dotnet#prop('Matrix12', 'float32'),
  \ dotnet#prop('Matrix13', 'float32'),
  \ dotnet#prop('Matrix14', 'float32'),
  \ dotnet#prop('Matrix20', 'float32'),
  \ dotnet#prop('Matrix21', 'float32'),
  \ dotnet#prop('Matrix22', 'float32'),
  \ dotnet#prop('Matrix23', 'float32'),
  \ dotnet#prop('Matrix24', 'float32'),
  \ dotnet#prop('Matrix30', 'float32'),
  \ dotnet#prop('Matrix31', 'float32'),
  \ dotnet#prop('Matrix32', 'float32'),
  \ dotnet#prop('Matrix33', 'float32'),
  \ dotnet#prop('Matrix34', 'float32'),
  \ dotnet#prop('Matrix40', 'float32'),
  \ dotnet#prop('Matrix41', 'float32'),
  \ dotnet#prop('Matrix42', 'float32'),
  \ dotnet#prop('Matrix43', 'float32'),
  \ dotnet#prop('Matrix44', 'float32'),
  \ dotnet#prop('Item(int32,', 'float32'),
  \ ])

call dotnet#class('ColorPalette', 'Object', [ 
  \ dotnet#method('get_Flags(', ')', 'int32'),
  \ dotnet#method('get_Entries(', ')', 'Color[]'),
  \ dotnet#method('ColorPalette(', ')', 'void'),
  \ dotnet#prop('Flags', 'int32'),
  \ dotnet#prop('Entries', 'Color[]'),
  \ ])

call dotnet#class('Encoder', 'Object', [ 
  \ dotnet#method('Encoder(', 'Guid guid)', 'void'),
  \ dotnet#method('get_Guid(', ')', 'Guid'),
  \ dotnet#method('Encoder(', ')', 'static void .'),
  \ dotnet#prop('Guid', 'Guid'),
  \ ])

call dotnet#class('EncoderParameter', 'Object', [ 
  \ dotnet#method('Finalize(', ')', 'void'),
  \ dotnet#method('get_Encoder(', ')', 'Encoder'),
  \ dotnet#method('set_Encoder(', 'class Encoder value)', 'void'),
  \ dotnet#method('get_Type(', ')', 'EncoderParameterValueType'),
  \ dotnet#method('get_ValueType(', ')', 'EncoderParameterValueType'),
  \ dotnet#method('get_NumberOfValues(', ')', 'int32'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, uint8 value)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, uint8 value, bool undefined)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int16 value)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int64 value)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int32 numerator, int32 demoninator)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int64 rangebegin, int64 rangeend)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int32 numerator1, int32 demoninator1, int32 numerator2, int32 demoninator2)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, string value)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, uint8[] value)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, uint8[] value, bool undefined)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int16[] value)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int64[] value)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int32[] numerator, int32[] denominator)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int64[] rangebegin, int64[] rangeend)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int32[] numerator1, int32[] denominator1, int32[] numerator2, int32[] denominator2)', 'void'),
  \ dotnet#method('EncoderParameter(', 'class Encoder encoder, int32 NumberOfValues, int32 Type, int32 Value)', 'void'),
  \ dotnet#prop('Encoder', 'Encoder'),
  \ dotnet#prop('Type', 'EncoderParameterValueType'),
  \ dotnet#prop('', 'EncoderParameterValueType'),
  \ dotnet#prop('NumberOfValues', 'int32'),
  \ ])

call dotnet#class('EncoderParameters', 'Object', [ 
  \ dotnet#method('EncoderParameters(', 'int32 count)', 'void'),
  \ dotnet#method('EncoderParameters(', ')', 'void'),
  \ dotnet#method('get_Param(', ')', 'EncoderParameter[]'),
  \ dotnet#method('set_Param(', 'class EncoderParameter[] value)', 'void'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#prop('Param', 'EncoderParameter[]'),
  \ ])

call dotnet#class('FrameDimension', 'Object', [ 
  \ dotnet#method('FrameDimension(', 'Guid guid)', 'void'),
  \ dotnet#method('get_Guid(', ')', 'Guid'),
  \ dotnet#method('get_Time(', ')', 'static'),
  \ dotnet#method('get_Resolution(', ')', 'static'),
  \ dotnet#method('get_Page(', ')', 'static'),
  \ dotnet#method('Equals(', 'object o)', 'bool'),
  \ dotnet#method('GetHashCode(', ')', 'int32'),
  \ dotnet#method('ToString(', ')', 'string'),
  \ dotnet#method('FrameDimension(', ')', 'static void .'),
  \ dotnet#prop('Guid', 'Guid'),
  \ dotnet#prop('Time', 'FrameDimension'),
  \ dotnet#prop('Resolution', 'FrameDimension'),
  \ dotnet#prop('Page', 'FrameDimension'),
  \ ])

call dotnet#class('ImageAttributes', 'Object', [ 
  \ dotnet#method('ImageAttributes(', ')', 'void'),
  \ dotnet#method('Dispose(', ')', 'void'),
  \ dotnet#method('Finalize(', ')', 'void'),
  \ dotnet#method('Clone(', ')', 'object'),
  \ dotnet#method('SetColorMatrix(', 'class ColorMatrix newColorMatrix)', 'void'),
  \ dotnet#method('SetColorMatrix(', 'class ColorMatrix newColorMatrix, ColorMatrixFlag flags)', 'void'),
  \ dotnet#method('SetColorMatrix(', 'class ColorMatrix newColorMatrix, ColorMatrixFlag mode, ColorAdjustType type)', 'void'),
  \ dotnet#method('ClearColorMatrix(', ')', 'void'),
  \ dotnet#method('ClearColorMatrix(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('SetColorMatrices(', 'class ColorMatrix newColorMatrix, ColorMatrix grayMatrix)', 'void'),
  \ dotnet#method('SetColorMatrices(', 'class ColorMatrix newColorMatrix, ColorMatrix grayMatrix, ColorMatrixFlag flags)', 'void'),
  \ dotnet#method('SetColorMatrices(', 'class ColorMatrix newColorMatrix, ColorMatrix grayMatrix, ColorMatrixFlag mode, ColorAdjustType type)', 'void'),
  \ dotnet#method('SetThreshold(', 'float32 threshold)', 'void'),
  \ dotnet#method('SetThreshold(', 'float32 threshold, ColorAdjustType type)', 'void'),
  \ dotnet#method('ClearThreshold(', ')', 'void'),
  \ dotnet#method('ClearThreshold(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('SetGamma(', 'float32 gamma)', 'void'),
  \ dotnet#method('SetGamma(', 'float32 gamma, ColorAdjustType type)', 'void'),
  \ dotnet#method('ClearGamma(', ')', 'void'),
  \ dotnet#method('ClearGamma(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('SetNoOp(', ')', 'void'),
  \ dotnet#method('SetNoOp(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('ClearNoOp(', ')', 'void'),
  \ dotnet#method('ClearNoOp(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('SetColorKey(', 'Color colorLow, Color colorHigh)', 'void'),
  \ dotnet#method('SetColorKey(', 'Color colorLow, Color colorHigh, ColorAdjustType type)', 'void'),
  \ dotnet#method('ClearColorKey(', ')', 'void'),
  \ dotnet#method('ClearColorKey(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('SetOutputChannel(', 'ColorChannelFlag flags)', 'void'),
  \ dotnet#method('SetOutputChannel(', 'ColorChannelFlag flags, ColorAdjustType type)', 'void'),
  \ dotnet#method('ClearOutputChannel(', ')', 'void'),
  \ dotnet#method('ClearOutputChannel(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('SetOutputChannelColorProfile(', 'string colorProfileFilename)', 'void'),
  \ dotnet#method('SetOutputChannelColorProfile(', 'string colorProfileFilename, ColorAdjustType type)', 'void'),
  \ dotnet#method('ClearOutputChannelColorProfile(', ')', 'void'),
  \ dotnet#method('ClearOutputChannelColorProfile(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('SetRemapTable(', 'class ColorMap[] map)', 'void'),
  \ dotnet#method('SetRemapTable(', 'class ColorMap[] map, ColorAdjustType type)', 'void'),
  \ dotnet#method('ClearRemapTable(', ')', 'void'),
  \ dotnet#method('ClearRemapTable(', 'ColorAdjustType type)', 'void'),
  \ dotnet#method('SetBrushRemapTable(', 'class ColorMap[] map)', 'void'),
  \ dotnet#method('ClearBrushRemapTable(', ')', 'void'),
  \ dotnet#method('SetWrapMode(', 'WrapMode mode)', 'void'),
  \ dotnet#method('SetWrapMode(', 'WrapMode mode, Color color)', 'void'),
  \ dotnet#method('SetWrapMode(', 'WrapMode mode, Color color, bool clamp)', 'void'),
  \ dotnet#method('GetAdjustedPalette(', 'class ColorPalette palette, ColorAdjustType type)', 'void'),
  \ ])

call dotnet#class('ImageCodecInfo', 'Object', [ 
  \ dotnet#method('get_Clsid(', ')', 'Guid'),
  \ dotnet#method('set_Clsid(', 'Guid value)', 'void'),
  \ dotnet#method('get_FormatID(', ')', 'Guid'),
  \ dotnet#method('set_FormatID(', 'Guid value)', 'void'),
  \ dotnet#method('get_CodecName(', ')', 'string'),
  \ dotnet#method('set_CodecName(', 'string value)', 'void'),
  \ dotnet#method('get_DllName(', ')', 'string'),
  \ dotnet#method('set_DllName(', 'string value)', 'void'),
  \ dotnet#method('get_FormatDescription(', ')', 'string'),
  \ dotnet#method('set_FormatDescription(', 'string value)', 'void'),
  \ dotnet#method('get_FilenameExtension(', ')', 'string'),
  \ dotnet#method('set_FilenameExtension(', 'string value)', 'void'),
  \ dotnet#method('get_MimeType(', ')', 'string'),
  \ dotnet#method('set_MimeType(', 'string value)', 'void'),
  \ dotnet#method('get_Flags(', ')', 'ImageCodecFlags'),
  \ dotnet#method('set_Flags(', 'ImageCodecFlags value)', 'void'),
  \ dotnet#method('get_Version(', ')', 'int32'),
  \ dotnet#method('set_Version(', 'int32 value)', 'void'),
  \ dotnet#method('get_SignaturePatterns(', ')', 'uint8[][]'),
  \ dotnet#method('set_SignaturePatterns(', 'uint8[][] value)', 'void'),
  \ dotnet#method('get_SignatureMasks(', ')', 'uint8[][]'),
  \ dotnet#method('set_SignatureMasks(', 'uint8[][] value)', 'void'),
  \ dotnet#method('GetImageDecoders(', ')', 'static ImageCodecInfo[]'),
  \ dotnet#method('GetImageEncoders(', ')', 'static ImageCodecInfo[]'),
  \ dotnet#method('ImageCodecInfo(', ')', 'void'),
  \ dotnet#prop('Clsid', 'Guid'),
  \ dotnet#prop('FormatID', 'Guid'),
  \ dotnet#prop('CodecName', 'string'),
  \ dotnet#prop('DllName', 'string'),
  \ dotnet#prop('FormatDescription', 'string'),
  \ dotnet#prop('FilenameExtension', 'string'),
  \ dotnet#prop('MimeType', 'string'),
  \ dotnet#prop('Flags', 'ImageCodecFlags'),
  \ dotnet#prop('Version', 'int32'),
  \ dotnet#prop('SignaturePatterns', 'uint8[][]'),
  \ dotnet#prop('SignatureMasks', 'uint8[][]'),
  \ ])

call dotnet#class('ImageFormat', 'Object', [ 
  \ dotnet#method('ImageFormat(', 'Guid guid)', 'void'),
  \ dotnet#method('get_Guid(', ')', 'Guid'),
  \ dotnet#method('get_MemoryBmp(', ')', 'static'),
  \ dotnet#method('get_Bmp(', ')', 'static'),
  \ dotnet#method('get_Emf(', ')', 'static'),
  \ dotnet#method('get_Wmf(', ')', 'static'),
  \ dotnet#method('get_Gif(', ')', 'static'),
  \ dotnet#method('get_Jpeg(', ')', 'static'),
  \ dotnet#method('get_Png(', ')', 'static'),
  \ dotnet#method('get_Tiff(', ')', 'static'),
  \ dotnet#method('get_Exif(', ')', 'static'),
  \ dotnet#method('get_Icon(', ')', 'static'),
  \ dotnet#method('Equals(', 'object o)', 'bool'),
  \ dotnet#method('GetHashCode(', ')', 'int32'),
  \ dotnet#method('ToString(', ')', 'string'),
  \ dotnet#method('ImageFormat(', ')', 'static void .'),
  \ dotnet#prop('Guid', 'Guid'),
  \ dotnet#prop('MemoryBmp', 'ImageFormat'),
  \ dotnet#prop('Bmp', 'ImageFormat'),
  \ dotnet#prop('Emf', 'ImageFormat'),
  \ dotnet#prop('Wmf', 'ImageFormat'),
  \ dotnet#prop('Gif', 'ImageFormat'),
  \ dotnet#prop('Jpeg', 'ImageFormat'),
  \ dotnet#prop('Png', 'ImageFormat'),
  \ dotnet#prop('Tiff', 'ImageFormat'),
  \ dotnet#prop('Exif', 'ImageFormat'),
  \ dotnet#prop('Icon', 'ImageFormat'),
  \ ])

call dotnet#class('Metafile', 'Image', [ 
  \ dotnet#method('Metafile(', 'native int hmetafile, WmfPlaceableFileHeader wmfHeader)', 'void'),
  \ dotnet#method('Metafile(', 'native int hmetafile, WmfPlaceableFileHeader wmfHeader, bool deleteWmf)', 'void'),
  \ dotnet#method('Metafile(', 'native int henhmetafile, bool deleteEmf)', 'void'),
  \ dotnet#method('Metafile(', 'string filename)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, EmfType emfType)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, EmfType emfType, string description)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, RectangleF frameRect)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit, EmfType type)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit, EmfType type, string description)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, Rectangle frameRect)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit, EmfType type)', 'void'),
  \ dotnet#method('Metafile(', 'native int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit, EmfType type, string desc)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, EmfType type)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, EmfType type, string description)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, RectangleF frameRect)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit, EmfType type)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit, string desc)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit, EmfType type, string description)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, Rectangle frameRect)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit, EmfType type)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit, string description)', 'void'),
  \ dotnet#method('Metafile(', 'string fileName, int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit, EmfType type, string description)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, EmfType type)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, EmfType type, string description)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, RectangleF frameRect)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit, EmfType type)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, RectangleF frameRect, MetafileFrameUnit frameUnit, EmfType type, string description)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, Rectangle frameRect)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit, EmfType type)', 'void'),
  \ dotnet#method('Metafile(', 'class Stream stream, int referenceHdc, Rectangle frameRect, MetafileFrameUnit frameUnit, EmfType type, string description)', 'void'),
  \ dotnet#method('GetMetafileHeader(', 'native int hmetafile, WmfPlaceableFileHeader wmfHeader)', 'static MetafileHeader'),
  \ dotnet#method('GetMetafileHeader(', 'native int henhmetafile)', 'static MetafileHeader'),
  \ dotnet#method('GetMetafileHeader(', 'string fileName)', 'static MetafileHeader'),
  \ dotnet#method('GetMetafileHeader(', 'class Stream stream)', 'static MetafileHeader'),
  \ dotnet#method('GetMetafileHeader(', ')', 'MetafileHeader'),
  \ dotnet#method('GetHenhmetafile(', ')', 'int'),
  \ dotnet#method('PlayRecord(', 'EmfPlusRecordType recordType, int32 flags, int32 dataSize, uint8[] data)', 'void'),
  \ dotnet#method('Metafile(', ')', 'void'),
  \ ])

call dotnet#class('MetafileHeader', 'Object', [ 
  \ dotnet#method('get_Type(', ')', 'MetafileType'),
  \ dotnet#method('get_MetafileSize(', ')', 'int32'),
  \ dotnet#method('get_Version(', ')', 'int32'),
  \ dotnet#method('get_DpiX(', ')', 'float32'),
  \ dotnet#method('get_DpiY(', ')', 'float32'),
  \ dotnet#method('get_Bounds(', ')', 'Rectangle'),
  \ dotnet#method('IsWmf(', ')', 'bool'),
  \ dotnet#method('IsWmfPlaceable(', ')', 'bool'),
  \ dotnet#method('IsEmf(', ')', 'bool'),
  \ dotnet#method('IsEmfOrEmfPlus(', ')', 'bool'),
  \ dotnet#method('IsEmfPlus(', ')', 'bool'),
  \ dotnet#method('IsEmfPlusDual(', ')', 'bool'),
  \ dotnet#method('IsEmfPlusOnly(', ')', 'bool'),
  \ dotnet#method('IsDisplay(', ')', 'bool'),
  \ dotnet#method('get_WmfHeader(', ')', 'MetaHeader'),
  \ dotnet#method('get_EmfPlusHeaderSize(', ')', 'int32'),
  \ dotnet#method('get_LogicalDpiX(', ')', 'int32'),
  \ dotnet#method('get_LogicalDpiY(', ')', 'int32'),
  \ dotnet#method('MetafileHeader(', ')', 'void'),
  \ dotnet#prop('Type', 'MetafileType'),
  \ dotnet#prop('MetafileSize', 'int32'),
  \ dotnet#prop('Version', 'int32'),
  \ dotnet#prop('DpiX', 'float32'),
  \ dotnet#prop('DpiY', 'float32'),
  \ dotnet#prop('Bounds', 'Rectangle'),
  \ dotnet#prop('WmfHeader', 'MetaHeader'),
  \ dotnet#prop('EmfPlusHeaderSize', 'int32'),
  \ dotnet#prop('LogicalDpiX', 'int32'),
  \ dotnet#prop('LogicalDpiY', 'int32'),
  \ ])

call dotnet#class('MetaHeader', 'Object', [ 
  \ dotnet#method('get_Type(', ')', 'int16'),
  \ dotnet#method('set_Type(', 'int16 value)', 'void'),
  \ dotnet#method('get_HeaderSize(', ')', 'int16'),
  \ dotnet#method('set_HeaderSize(', 'int16 value)', 'void'),
  \ dotnet#method('get_Version(', ')', 'int16'),
  \ dotnet#method('set_Version(', 'int16 value)', 'void'),
  \ dotnet#method('get_Size(', ')', 'int32'),
  \ dotnet#method('set_Size(', 'int32 value)', 'void'),
  \ dotnet#method('get_NoObjects(', ')', 'int16'),
  \ dotnet#method('set_NoObjects(', 'int16 value)', 'void'),
  \ dotnet#method('get_MaxRecord(', ')', 'int32'),
  \ dotnet#method('set_MaxRecord(', 'int32 value)', 'void'),
  \ dotnet#method('get_NoParameters(', ')', 'int16'),
  \ dotnet#method('set_NoParameters(', 'int16 value)', 'void'),
  \ dotnet#method('MetaHeader(', ')', 'void'),
  \ dotnet#prop('Type', 'int16'),
  \ dotnet#prop('HeaderSize', 'int16'),
  \ dotnet#prop('Version', 'int16'),
  \ dotnet#prop('Size', 'int32'),
  \ dotnet#prop('NoObjects', 'int16'),
  \ dotnet#prop('MaxRecord', 'int32'),
  \ dotnet#prop('NoParameters', 'int16'),
  \ ])

call dotnet#class('PlayRecordCallback', 'MulticastDelegate', [ 
  \ dotnet#method('PlayRecordCallback(', 'object object, int method)', 'void'),
  \ dotnet#method('Invoke(', 'EmfPlusRecordType recordType, int32 flags, int32 dataSize, int recordData)', 'void'),
  \ dotnet#method('BeginInvoke(', 'EmfPlusRecordType recordType, int32 flags, int32 dataSize, int recordData, AsyncCallback callback, object object)', ''),
  \ dotnet#method('EndInvoke(', 'class IAsyncResult result)', 'void'),
  \ ])

call dotnet#class('PropertyItem', 'Object', [ 
  \ dotnet#method('get_Id(', ')', 'int32'),
  \ dotnet#method('set_Id(', 'int32 value)', 'void'),
  \ dotnet#method('get_Len(', ')', 'int32'),
  \ dotnet#method('set_Len(', 'int32 value)', 'void'),
  \ dotnet#method('get_Type(', ')', 'int16'),
  \ dotnet#method('set_Type(', 'int16 value)', 'void'),
  \ dotnet#method('get_Value(', ')', 'uint8[]'),
  \ dotnet#method('set_Value(', 'uint8[] value)', 'void'),
  \ dotnet#method('PropertyItem(', ')', 'void'),
  \ dotnet#prop('Id', 'int32'),
  \ dotnet#prop('Len', 'int32'),
  \ dotnet#prop('Type', 'int16'),
  \ dotnet#prop('Value', 'uint8[]'),
  \ ])

call dotnet#class('WmfPlaceableFileHeader', 'Object', [ 
  \ dotnet#method('get_Key(', ')', 'int32'),
  \ dotnet#method('set_Key(', 'int32 value)', 'void'),
  \ dotnet#method('get_Hmf(', ')', 'int16'),
  \ dotnet#method('set_Hmf(', 'int16 value)', 'void'),
  \ dotnet#method('get_BboxLeft(', ')', 'int16'),
  \ dotnet#method('set_BboxLeft(', 'int16 value)', 'void'),
  \ dotnet#method('get_BboxTop(', ')', 'int16'),
  \ dotnet#method('set_BboxTop(', 'int16 value)', 'void'),
  \ dotnet#method('get_BboxRight(', ')', 'int16'),
  \ dotnet#method('set_BboxRight(', 'int16 value)', 'void'),
  \ dotnet#method('get_BboxBottom(', ')', 'int16'),
  \ dotnet#method('set_BboxBottom(', 'int16 value)', 'void'),
  \ dotnet#method('get_Inch(', ')', 'int16'),
  \ dotnet#method('set_Inch(', 'int16 value)', 'void'),
  \ dotnet#method('get_Reserved(', ')', 'int32'),
  \ dotnet#method('set_Reserved(', 'int32 value)', 'void'),
  \ dotnet#method('get_Checksum(', ')', 'int16'),
  \ dotnet#method('set_Checksum(', 'int16 value)', 'void'),
  \ dotnet#method('WmfPlaceableFileHeader(', ')', 'void'),
  \ dotnet#prop('Key', 'int32'),
  \ dotnet#prop('Hmf', 'int16'),
  \ dotnet#prop('BboxLeft', 'int16'),
  \ dotnet#prop('BboxTop', 'int16'),
  \ dotnet#prop('BboxRight', 'int16'),
  \ dotnet#prop('BboxBottom', 'int16'),
  \ dotnet#prop('Inch', 'int16'),
  \ dotnet#prop('Reserved', 'int32'),
  \ dotnet#prop('Checksum', 'int16'),
  \ ])

